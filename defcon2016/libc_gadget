Gadgets information
============================================================
0x0000000000186d4d : adc ah, bh ; call rax
0x00000000001aabc0 : adc ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000013999f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139a09 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001aa948 : adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001aaa38 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a938 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aa8b8 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001aa9f0 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001aa9a8 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa8a0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001aa8e8 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001aa990 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f114e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000066b97 : adc al, 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000043232 : adc al, 0 ; jmp 0x431e8
0x000000000003071e : adc al, 0 ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x000000000003611e : adc al, 0 ; orpd xmm0, xmm1 ; ret
0x0000000000142d25 : adc al, 0x13 ; jmp rdx
0x000000000019fc64 : adc al, 0x16 ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x0000000000097d65 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000018ff64 : adc al, 0x19 ; add byte ptr [rax], al ; pop rax ; add edx, ebp ; call qword ptr [rcx]
0x000000000005dbd4 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000cb78d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000bdcfe : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000031dab : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000010e50c : adc al, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x00000000000a0fa3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b7428 : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000018cbc8 : adc al, 0x3f ; clc ; jmp rsp
0x000000000007ef00 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e6e0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009f533 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009710b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021eba : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ffc83 : adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001acc8c : adc al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x00000000001a08cc : adc al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000000d1732 : adc al, 0x74 ; or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000083f52 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000e1b51 : adc al, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa68e : adc al, 0x89 ; ret
0x00000000000ebd33 : adc al, 0x89 ; ret 0xdaf7
0x00000000000fd6b8 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007537e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000dbf6a : adc al, 0x8d ; add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000001893e8 : adc al, 0x8e ; out dx, al ; jmp rsp
0x00000000001a7664 : adc al, 0x90 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000b541a : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d355 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x000000000013ae30 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013955e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000142d21 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000600a4 : adc al, 0x95 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000000b4d7d : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000001a7e64 : adc al, 0x98 ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000054c46 : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000087137 : adc al, 0xa ; jmp r10
0x0000000000097ed3 : adc al, 0xa ; sub eax, edx ; ret
0x00000000000648c1 : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000c29bd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000034c02 : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000083667 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000018e100 : adc al, 0xbf ; cli ; jmp rsp
0x00000000001aa964 : adc al, 0xc3 ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x0000000000037664 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000037684 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001ab164 : adc al, 0xcb ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000018d898 : adc al, 0xcb ; stc ; call rsp
0x00000000000b01d2 : adc al, 0xe ; jne 0xb01cd ; ret
0x0000000000135acb : adc al, 0xe ; mov byte ptr [rax + rcx], dl ; ret
0x0000000000137671 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000188c10 : adc al, 0xe2 ; jmp 0x188c16
0x0000000000002b63 : adc al, 0xe7 ; ret
0x00000000000cf456 : adc al, 0xe9 ; ret 0xfffa
0x0000000000165041 : adc al, 0xea ; test rdx, rdx ; je 0x165051 ; call rdx
0x000000000019d464 : adc al, 0xee ; add byte ptr [rax], al ; sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x000000000018c8d0 : adc al, 0xf ; clc ; call rsp
0x000000000009f0a9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000019e569 : adc al, 0xf0 ; jmp rbx
0x000000000018b0d1 : adc al, 0xf4 ; call rsp
0x000000000010a30b : adc al, 0xf7 ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000001a5581 : adc al, 0xf9 ; call qword ptr [rax]
0x000000000019e564 : adc al, 0xff ; add byte ptr [rax], al ; adc al, 0xf0 ; jmp rbx
0x0000000000164448 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000096b96 : adc al, 7 ; cmp edx, ecx ; je 0x96b97 ; ret
0x0000000000096ac2 : adc al, 7 ; test dl, dl ; jne 0x96abf ; ret
0x0000000000135ace : adc al, 8 ; ret
0x0000000000139b47 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139bb1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000c282 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ed5a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000004de51 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x00000000000063e4 : adc al, byte ptr [rax] ; or al, 0 ; call qword ptr [rcx]
0x00000000000048fc : adc al, byte ptr [rax] ; or al, 0 ; nop ; ret 3
0x00000000000041f4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000000a1dc : adc al, byte ptr [rax] ; or al, 0 ; ret
0x000000000005f973 : adc al, byte ptr [rbx - 0x111743] ; call qword ptr [rax]
0x0000000000099bd4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001af89d : adc al, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x0000000000053487 : adc al, ch ; ret
0x000000000018c909 : adc bh, al ; call rsp
0x00000000000ae5b4 : adc bh, al ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x0000000000186af8 : adc bh, bl ; sti ; push rax ; loopne 0x186b01 ; call rax
0x0000000000003aa3 : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000179268 : adc bh, byte ptr [rbx - 0x27e6000d] ; call qword ptr [rdx]
0x00000000001791f0 : adc bh, byte ptr [rbx - 0x44ed000d] ; call qword ptr [rdx]
0x00000000001917e4 : adc bh, byte ptr [rcx - 0x16] ; jmp qword ptr [rdx]
0x00000000000a3878 : adc bh, byte ptr [rcx] ; ja 0xa388c ; cmove rax, rcx ; ret
0x000000000018d359 : adc bh, cl ; jmp rsp
0x0000000000115ab6 : adc bh, dh ; ret 0x8080
0x000000000019d5e9 : adc bh, dl ; call qword ptr [rax]
0x00000000001aaa10 : adc bl, 0xf5 ; jmp qword ptr [rsi]
0x0000000000178600 : adc bl, ah ; int1 ; jmp qword ptr [rax]
0x0000000000120eed : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x00000000001ac800 : adc bl, bh ; cmc ; call qword ptr [rax]
0x00000000000367c8 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000187314 : adc bl, byte ptr [rax - 4] ; call qword ptr [rdx + 0x12fffc57]
0x00000000001872fc : adc bl, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc5a]
0x000000000018730c : adc bl, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187304 : adc bl, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc59]
0x000000000019b5c6 : adc bl, byte ptr [rsi + rbp*8 - 1] ; sbb al, 0xd ; cli ; cmp esi, ebp ; jmp qword ptr [rdx]
0x000000000008ccc5 : adc bl, ch ; call 0xffffffffc3d9561a
0x0000000000086e15 : adc bl, ch ; call 0xffffffffc400f76a
0x0000000000088615 : adc bl, ch ; call 0xffffffffc4010f6a
0x0000000000038b12 : adc bl, ch ; jno 0x38b68 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035ada : adc bl, ch ; ret 0x1f0f
0x000000000008c605 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000009dcc6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009d036 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009d0a7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d007 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000f3287 : adc bl, dh ; ret
0x000000000009dcc5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009d035 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000e35cf : adc byte ptr [r13 + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x0000000000108231 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000086a42 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000074a11 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000077093 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000e253a : adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000df37e : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x00000000000727b2 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000bd3f8 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000c3f75 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007911d : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000079a4e : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a0f1c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0f3e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f7c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0ffe : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000003aaba : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000fbcdf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000d4c19 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x0000000000080364 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e35d4 : adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x00000000000fbcde : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000360fa : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x00000000000e35b6 : adc byte ptr [rax + 0x63], cl ; ret
0x0000000000187784 : adc byte ptr [rax + 0x7f90fffc], al ; cld ; call qword ptr [rax]
0x0000000000078f88 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9121 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000123c8e : adc byte ptr [rax + 1], bh ; ret
0x00000000000a200e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000003918e : adc byte ptr [rax + 1], cl ; ret
0x0000000000097106 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000727b3 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000003d447 : adc byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000003d446 : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000001b1f8 : adc byte ptr [rax + rbx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000000bd3f9 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000019ecb0 : adc byte ptr [rax - 0x10], bl ; jmp rsi
0x00000000000a1124 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1022 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0fa0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000187ed4 : adc byte ptr [rax - 0x6e6f0004], dl ; cld ; call qword ptr [rax]
0x0000000000186854 : adc byte ptr [rax - 0x6e6f0005], dl ; sti ; call qword ptr [rax]
0x00000000000fd6b5 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002f8e3 : adc byte ptr [rax - 0x73], cl ; add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000102a5a : adc byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rbp - 0x77] ; ret
0x00000000000917f4 : adc byte ptr [rax - 0x73], cl ; jg 0x91811 ; jne 0x917e8 ; ret
0x00000000000fdee3 : adc byte ptr [rax - 0x73], cl ; or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000fd6b4 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000021ebd : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000006c1a4 : adc byte ptr [rax - 0x75], cl ; cmp al, ch ; ret
0x000000000012e9e1 : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], r9b ; out -0x18, eax ; ret 0xf3fe
0x0000000000091c1a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000009ca1c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000074207 : adc byte ptr [rax - 0x77], cl ; jo 0x74225 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000011f61b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000000741c7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000701f8 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000741cb : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000080921 : adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000010afd5 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000812ea : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000121b68 : adc byte ptr [rax - 0x77], cl ; ret 0xf9e9
0x00000000000422d4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000157427 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000157463 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000987c4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000001058dc : adc byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000000c3f76 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007dbb3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000083e2c : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000092096 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000035ca5 : adc byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000178780 : adc byte ptr [rax - 0xe], cl ; jmp qword ptr [rax]
0x00000000000f22a1 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000018f6b5 : adc byte ptr [rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000000f072b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000005d52c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007a2d4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013bdc1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139d51 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007911e : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000079a4f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000109b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ec82 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000e467c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003d28c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000120e7a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011f565 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a1c59 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017aaed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000005dd54 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x5dd69 ; ret
0x00000000001087a9 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001acbb0 : adc byte ptr [rax], al ; idiv bh ; ret 3
0x00000000001025f3 : adc byte ptr [rax], al ; je 0x102606 ; xor eax, eax ; ret
0x00000000001362e6 : adc byte ptr [rax], al ; jne 0x136310 ; add rsp, 0x48 ; ret
0x000000000002c094 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000006d241 : adc byte ptr [rax], al ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000006d351 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000046ec6 : adc byte ptr [rax], al ; ret
0x00000000000a0f1d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0f3f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f7d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0fff : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1101 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001087a8 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001b3c0 : adc byte ptr [rbp + 0x18], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000000a3777 : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000e35d0 : adc byte ptr [rbp + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x000000000008c788 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00000000000917f8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000119e27 : adc byte ptr [rbp - 0x49f0be01], al ; ret 0x48d
0x0000000000187f20 : adc byte ptr [rbp - 0x696f0004], dl ; cld ; call qword ptr [rax]
0x000000000005f97a : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x0000000000187ecc : adc byte ptr [rbp - 0x716f0004], cl ; cld ; call qword ptr [rax]
0x000000000018684c : adc byte ptr [rbp - 0x716f0005], cl ; sti ; call qword ptr [rax]
0x00000000000ef271 : adc byte ptr [rbp - 0x7b], cl ; dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000f53c7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000000a4b49 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000108232 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000a3922 : adc byte ptr [rbp - 0xd], dh ; ret
0x000000000019babb : adc byte ptr [rbx + 0x1020302], al ; ret
0x00000000000ed3ef : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x00000000001af28b : adc byte ptr [rbx + 0x1990302], al ; ret
0x0000000000108343 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000006ce0c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x000000000008141b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117ae3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000346b3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019c7bb : adc byte ptr [rbx + 0xa440202], al ; ret
0x000000000019088b : adc byte ptr [rbx + 0xa4c0202], al ; ret
0x00000000001af296 : adc byte ptr [rbx + 0xa550202], al ; ret
0x000000000012c5ae : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000186834 : adc byte ptr [rbx + rdi*8 - 0x47a6f01], al ; call qword ptr [rax]
0x000000000007c6d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012e36b : adc byte ptr [rbx - 0x3d], bl ; nop ; ret
0x00000000000714e7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x71501 ; ret
0x0000000000187edc : adc byte ptr [rbx - 0x6b6f0004], dl ; cld ; call qword ptr [rax]
0x000000000018685c : adc byte ptr [rbx - 0x6b6f0005], dl ; sti ; call qword ptr [rax]
0x00000000000a396f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00000000001867c4 : adc byte ptr [rbx - 5], dl ; push rax ; push rsp ; sti ; call rax
0x00000000000c2e96 : adc byte ptr [rbx], al ; add cl, ch ; ret 0xfffe
0x0000000000186ef0 : adc byte ptr [rbx], ch ; cld ; call rax
0x00000000001a7e80 : adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000386e9 : adc byte ptr [rcx + 0x29], cl ; ret
0x00000000000a377b : adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a377a : adc byte ptr [rcx + 0x39], r8b ; ret
0x0000000000111bf3 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000a620a : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000012c706 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000006ca42 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1082 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1062 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000004a66a : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000187f00 : adc byte ptr [rcx - 0x756f0004], cl ; cld ; call qword ptr [rax]
0x00000000001645f7 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000ad011 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000001376f3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000013b297 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000018777c : adc byte ptr [rcx - 0x7f6f0004], al ; cld ; call qword ptr [rax]
0x0000000000178a50 : adc byte ptr [rcx - 0xe], ch ; jmp qword ptr [rax]
0x00000000001899a5 : adc byte ptr [rcx], al ; add bl, bh ; add bh, ch ; call rsp
0x00000000001899c5 : adc byte ptr [rcx], al ; add byte ptr [rcx + 2], bl ; out dx, eax ; call rsp
0x00000000000af204 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a8660 : adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000003ce86 : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c6d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000121c32 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f1230 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0xf1249 ; ret
0x0000000000125f5f : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000187f10 : adc byte ptr [rdi - 0x6f6f0004], cl ; cld ; call qword ptr [rax]
0x0000000000187ebc : adc byte ptr [rdi - 0x776f0004], al ; cld ; call qword ptr [rax]
0x000000000018683c : adc byte ptr [rdi - 0x776f0005], al ; sti ; call qword ptr [rax]
0x000000000018778c : adc byte ptr [rdi - 4], bh ; call qword ptr [rax + 0x10fffc7e]
0x0000000000186cd8 : adc byte ptr [rdi], al ; cld ; push rax ; or ah, bh ; call rax
0x000000000002fe05 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010c6b2 : adc byte ptr [rdi], cl ; mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000086a43 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000012f909 : adc byte ptr [rdi], cl ; test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000015a508 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000000d4224 : adc byte ptr [rdi], cl ; test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000162573 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001388e1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001389d1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001387f1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001400fb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013ebff : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000013fdff : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f4ff : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f7ff : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013eef7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139239 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000138d91 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000138521 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138f71 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138701 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000139151 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139061 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001389a3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138a93 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001388b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f1a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013fda4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001400a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f7a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f4a4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013ee9c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138611 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000013c53d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c35d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013cd35 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013bc55 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013cb55 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001387c3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001385e3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001386d3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001384f3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000074a12 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000003a47d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000cec95 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x0000000000074bee : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000003a47c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000003901 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000143219 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000496d3 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x000000000017759c : adc byte ptr [rdx - 0x12], dh ; call rax
0x0000000000187f18 : adc byte ptr [rdx - 0x6c6f0004], dl ; cld ; call qword ptr [rax]
0x0000000000187ec4 : adc byte ptr [rdx - 0x746f0004], cl ; cld ; call qword ptr [rax]
0x0000000000186844 : adc byte ptr [rdx - 0x746f0005], cl ; sti ; call qword ptr [rax]
0x0000000000178844 : adc byte ptr [rdx - 0xe], 0xff ; mov al, 0x52 ; jmp rax
0x00000000001867e4 : adc byte ptr [rdx - 5], ah ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000186db0 : adc byte ptr [rdx], al ; cld ; call rax
0x00000000000ebd3b : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xebcff
0x00000000001ac713 : adc byte ptr [rdx], al ; ret
0x0000000000186724 : adc byte ptr [rdx], bl ; sti ; jmp rax
0x0000000000160c5b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000186cf4 : adc byte ptr [rip + 0x6f0fffc], al ; cld ; call rax
0x000000000006f8ce : adc byte ptr [rip - 0x766b1500], dh ; ret 0x8b48
0x0000000000160b0a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000160105 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087285 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d18b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009d21b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009d21a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a39ac : adc byte ptr [rsi + rdi*8 + 0x438d48ff], cl ; cld ; pop rbx ; ret
0x0000000000187ee4 : adc byte ptr [rsi - 0x686f0004], dl ; cld ; call qword ptr [rax]
0x0000000000187ef8 : adc byte ptr [rsi - 0x786f0004], al ; cld ; call qword ptr [rax]
0x00000000000fcba5 : adc byte ptr [rsi - 0x7d], ah ; cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x0000000000178904 : adc byte ptr [rsi - 0xe], dl ; jmp qword ptr [rax]
0x0000000000187794 : adc byte ptr [rsi - 4], bh ; call qword ptr [rax + 0x10fffc7d]
0x00000000001a80f0 : adc byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b3669 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; push rax ; ret
0x0000000000191e91 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001a08c1 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf174
0x00000000001a1139 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17d
0x00000000001a9d29 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf4ec
0x00000000001ab299 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf559
0x00000000001ab911 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001b3621 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; xchg eax, ecx ; ret
0x0000000000186f28 : adc byte ptr [rsi], dh ; cld ; call qword ptr [rax]
0x000000000003d0da : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000187f08 : adc byte ptr [rsp + rdi*8 - 0x3726f01], cl ; call qword ptr [rax]
0x0000000000187eb4 : adc byte ptr [rsp + rdi*8 - 0x37a6f01], al ; call qword ptr [rax]
0x0000000000186f24 : adc byte ptr [rsp + rdi*8], dh ; call qword ptr [rax]
0x00000000000b089a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000039eaf : adc byte ptr [rsp - 4], al ; ret
0x0000000000039ef5 : adc byte ptr [rsp - 8], al ; ret
0x000000000013f1a7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018f6b4 : adc byte ptr fs:[rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000001899a4 : adc byte ptr fs:[rcx], al ; add bl, bh ; add bh, ch ; call rsp
0x00000000000e4928 : adc byte ptr gs:[rax - 0x77], cl ; ret
0x0000000000186c20 : adc cl, ah ; sti ; jmp rax
0x00000000000b15fd : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b1582 : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bd3fd : adc cl, byte ptr [rax + 1] ; ret
0x0000000000039024 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000009800d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000851ec : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000f2728 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ffa04 : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000000000086e05 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000028ec1 : adc cl, byte ptr [rbp - 0x77] ; ret
0x00000000000b98e5 : adc cl, ch ; ret
0x00000000000d3ec0 : adc cl, ch ; ret 0xfffc
0x000000000008b3f8 : adc cl, ch ; ret 0xfffd
0x000000000008c6a4 : adc dh, bh ; ret
0x000000000019584c : adc dh, byte ptr [rdx - 0x13] ; jmp qword ptr [rdx]
0x000000000019a141 : adc dh, ch ; jmp qword ptr [rcx]
0x000000000019af9d : adc dh, ch ; jmp qword ptr [rdx]
0x000000000011fd9e : adc dh, dh ; ret 0x7401
0x00000000000022d3 : adc dh, dl ; ret
0x000000000019abac : adc dl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000081202 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000008af4b : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000007e5e5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000010843b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000086a47 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000d1c91 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x000000000013d74b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000000a8bb4 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000139ce7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013bc59 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016553b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006390d : adc dword ptr [rax], eax ; mov edx, 0x826 ; call 0x2fbf9
0x0000000000023f6b : adc dword ptr [rax], eax ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000238ea : adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000005f11e : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x000000000006471e : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005e5fe : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000648bd : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x000000000003d264 : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001869b4 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a38 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call qword ptr [rsi]
0x00000000001869b8 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; call rcx
0x0000000000186ab8 : adc dword ptr [rbx - 0x44ee0003], edi ; std ; jmp rax
0x0000000000186a2c : adc dword ptr [rbx - 0x45610003], edi ; std ; call qword ptr [rcx]
0x0000000000186a6c : adc dword ptr [rbx - 0x45780003], edi ; std ; call qword ptr [rcx]
0x0000000000186aac : adc dword ptr [rbx - 0x458f0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a1c : adc dword ptr [rbx - 0x45ce0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a5c : adc dword ptr [rbx - 0x45e90003], edi ; std ; call qword ptr [rcx]
0x0000000000186a9c : adc dword ptr [rbx - 0x46040003], edi ; std ; call qword ptr [rcx]
0x0000000000186adc : adc dword ptr [rbx - 0x461f0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a0c : adc dword ptr [rbx - 0x464e0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a4c : adc dword ptr [rbx - 0x46690003], edi ; std ; call qword ptr [rcx]
0x0000000000186a8c : adc dword ptr [rbx - 0x46840003], edi ; std ; call qword ptr [rcx]
0x0000000000186acc : adc dword ptr [rbx - 0x469f0003], edi ; std ; call qword ptr [rcx]
0x00000000001869fc : adc dword ptr [rbx - 0x46ce0003], edi ; std ; call qword ptr [rcx]
0x0000000000186a3c : adc dword ptr [rbx - 0x46e90003], edi ; std ; call qword ptr [rcx]
0x0000000000186a7c : adc dword ptr [rbx - 0x47040003], edi ; std ; call qword ptr [rcx]
0x0000000000186abc : adc dword ptr [rbx - 0x471f0003], edi ; std ; call qword ptr [rcx]
0x00000000001869bc : adc dword ptr [rbx - 0x472e0003], edi ; std ; call qword ptr [rcx]
0x00000000001869dc : adc dword ptr [rbx - 0x473f0003], edi ; std ; call qword ptr [rcx]
0x00000000001869cc : adc dword ptr [rbx - 0x47590003], edi ; std ; call qword ptr [rcx]
0x00000000001869ec : adc dword ptr [rbx - 0x476a0003], edi ; std ; call qword ptr [rcx]
0x000000000011c0d6 : adc dword ptr [rbx - 0x75], eax ; adc r8d, dword ptr [rbx + rax*4] ; ret
0x000000000003cb16 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000046631 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000361e4 : adc dword ptr [rdi], ecx ; ret
0x00000000000361ad : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000036512 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000001af7a5 : adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x000000000011b1cc : adc dword ptr [rsi], 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019b0bc : adc dword ptr [rsi], esp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000139ce6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a200a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000018670d : adc eax, 0x1600fffb ; sti ; call rax
0x00000000001339a7 : adc eax, 0x28bee4 ; add rsp, 8 ; ret
0x000000000012ac99 : adc eax, 0x298be2 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121352 : adc eax, 0x29c829 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010adb9 : adc eax, 0x2b7a02 ; pop rbp ; ret
0x00000000000f3a1e : adc eax, 0x2cdc0d ; add rsp, 8 ; ret
0x0000000000085e41 : adc eax, 0x33ad4a ; add rsp, 0x18 ; ret
0x00000000000277f6 : adc eax, 0x358d4800 ; ret 0x154f
0x0000000000037c8d : adc eax, 0x38640e ; ret
0x000000000002ef09 : adc eax, 0x390d6f ; ret
0x00000000000a2c9a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000028282 : adc eax, 0x3d8d4800 ; ret
0x0000000000097ca7 : adc eax, 0x48ffff49 ; mov eax, ebx ; pop rbx ; ret
0x0000000000021998 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000009d9c8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009f0dc : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000000365e9 : adc eax, 0x7e0f6600 ; ret 0xd089
0x0000000000139871 : adc eax, 0x83480000 ; ret 0xe910
0x000000000010e40c : adc eax, 0x8948002b ; ret 0x8948
0x00000000000be384 : adc eax, 0x89480030 ; ret 0x8948
0x0000000000078007 : adc eax, 0x89ffffd1 ; ret 0x3f7
0x00000000001959ed : adc eax, 0x95700000 ; in eax, dx ; jmp rsi
0x00000000000a2f9a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000887a7 : adc eax, 0xf000efd ; xchg eax, esi ; ret 0x144
0x000000000006ec5a : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000013d4ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ba79 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000034e67 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000034bfe : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000011c0da : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000cb65d : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x000000000019343c : adc eax, dword ptr [rdi - 0x15] ; jmp qword ptr [rdx]
0x00000000000e3941 : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; call 0x2fbf6
0x0000000000099bd8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013ee9f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000038459 : adc eax, eax ; ret
0x0000000000038596 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000174d05 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000010be50 : adc ebp, ebx ; ret
0x0000000000109e7d : adc ebp, ebx ; xor dword ptr [rcx], 0xffffffc0 ; ret
0x00000000001abb06 : adc ebx, dword ptr [rbp + rsi*8 - 1] ; sbb al, 0xd ; add dword ptr [rbx - 0xb], ebx ; jmp qword ptr [rdx]
0x0000000000073a3d : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000017998c : adc ebx, dword ptr [rbx - 0x6746000c] ; hlt ; jmp qword ptr [rdi]
0x0000000000188841 : adc ebx, ebp ; call rsp
0x000000000003def0 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e945a : adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000007c67c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000a3a5c : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012634d : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001111aa : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000031903 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000049adb : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000000000a365c : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002bd34 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000004bebe : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r11 + rax*8]
0x00000000000616d6 : adc ecx, dword ptr [rcx + rax - 0xe] ; call qword ptr [r11 + rax*8]
0x00000000000a5d61 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4104
0x00000000000b70eb : adc ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000099da4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000099dc4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000099de4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x0000000000099c2e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000195f44 : adc edi, dword ptr [rdx - 0x13] ; jmp qword ptr [rdx]
0x00000000000a5580 : adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x000000000017621e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000b2a0b : adc esi, dword ptr [rcx] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007c1d1 : adc esi, esi ; ret 0xf02
0x00000000001af474 : adc esp, eax ; cmc ; jmp qword ptr [rdx]
0x000000000013f082 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000008c604 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000018d358 : adc r15b, cl ; jmp rsp
0x000000000013bbe0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001af89c : adc r8b, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000011c0d9 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x0000000000038595 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008c6a3 : adc sil, r15b ; ret
0x0000000000186d4c : adc spl, dil ; call rax
0x000000000018bd9f : add ah, ah ; add edi, esi ; jmp rsp
0x00000000001a5033 : add ah, ah ; imul eax, dword ptr [rcx], 0xf4635800 ; jmp qword ptr [rcx]
0x00000000001b5033 : add ah, ah ; imul eax, dword ptr [rdx], 0xf79aa800 ; jmp qword ptr [rcx]
0x000000000018987f : add ah, ah ; in al, dx ; out dx, al ; call rsp
0x0000000000194e53 : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; mov ebp, ebp ; call qword ptr [rax]
0x00000000001a5533 : add ah, ah ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jae 0x1a5537 ; jmp qword ptr [rcx]
0x00000000001aa933 : add ah, ah ; ret 1
0x000000000018c83f : add ah, al ; add al, 0xf8 ; jmp rsp
0x0000000000198e33 : add ah, al ; add byte ptr [r8], al ; test al, 0xed ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000192b13 : add ah, al ; add byte ptr [rax], r8b ; clc ; or al, 0xeb ; jmp rax
0x000000000018c9ff : add ah, al ; and al, bh ; call rsp
0x000000000018d9c7 : add ah, al ; cld ; stc ; call rsp
0x000000000018dcbf : add ah, al ; cli ; jmp rsp
0x000000000018d767 : add ah, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rsp
0x000000000018d8af : add ah, al ; iretd ; stc ; call rsp
0x000000000018b1f7 : add ah, al ; jge 0x18b1f3 ; jmp rsp
0x0000000000188a27 : add ah, al ; jmp 0x188a2f
0x00000000001ac813 : add ah, al ; loope 0x1ac820 ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x0000000000189397 : add ah, al ; mov ch, dh ; call rsp
0x000000000019ce13 : add ah, al ; out 0, eax ; add al, bl ; mov dh, 0xee ; call qword ptr [rax]
0x000000000019d613 : add ah, al ; out dx, eax ; add byte ptr [rax], al ; cwde ; sbb ch, bh ; call qword ptr [rax]
0x0000000000189bb7 : add ah, al ; out dx, eax ; call rsp
0x0000000000188f4f : add ah, al ; pop rsp ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x00000000001a5113 : add ah, al ; push 1 ; add al, bh ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x000000000018c687 : add ah, al ; ret 0xfff7
0x000000000019e413 : add ah, al ; std ; add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x000000000018b39f : add ah, al ; sub dh, ch ; jmp rsp
0x000000000018dbb7 : add ah, al ; xor edi, edx ; jmp rsp
0x00000000000a1bce : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1bf1 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001a504b : add ah, bh ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000000a1ca8 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1bad : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001a2460 : add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001aa94b : add ah, bh ; ret 1
0x00000000001a6d4b : add ah, bh ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a7e4b : add ah, bh ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a7e84 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2e2b : add ah, bl ; add r8b, byte ptr [r8] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x000000000018d20f : add ah, bl ; clc ; call rsp
0x00000000001ac82b : add ah, bl ; loope 0x1ac838 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001ac72b : add ah, bl ; loopne 0x1ac738 ; add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x00000000001a4f2b : add ah, bl ; push 0x61600001 ; hlt ; jmp qword ptr [rax]
0x0000000000186bd4 : add ah, bl ; sti ; jmp rax
0x0000000000187124 : add ah, byte ptr [rax - 4] ; call qword ptr [rdx + 0x22fffc5f]
0x000000000019e65f : add ah, byte ptr [rdi + 0xa] ; ret
0x0000000000099c2b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000192f3b : add ah, ch ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x000000000019a13b : add ah, ch ; mov edx, 0x10e00000 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019ae4b : add ah, ch ; ret
0x000000000019a93b : add ah, ch ; ret 0
0x00000000001aff3b : add ah, ch ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, 0xf6 ; jmp qword ptr [rcx]
0x00000000001a823b : add ah, ch ; wait ; add dword ptr [rax], eax ; loopne 0x1a8279 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2c1b : add ah, cl ; add dword ptr [r8], r8d ; jo 0x1a2bb1 ; jmp qword ptr [rcx]
0x00000000001a551b : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x1a559d ; hlt ; jmp qword ptr [rcx]
0x00000000001b561b : add ah, cl ; outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000019a91b : add ah, cl ; ret 0
0x00000000001aa91b : add ah, cl ; ret 1
0x00000000001a041b : add ah, cl ; sbb eax, 0x41000001 ; int1 ; call rsi
0x00000000001a6743 : add ah, dh ; add byte ptr [rcx], 0 ; call 0x231a5c1d
0x00000000001a3343 : add ah, dh ; add qword ptr [rax], r8 ; call 0x131a2634
0x00000000001a2443 : add ah, dh ; cmp eax, 0xfbe80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000195343 : add ah, dh ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x000000000018adb7 : add ah, dh ; jb 0x18adb2 ; jmp rsp
0x00000000001a8643 : add ah, dh ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x0000000000179495 : add ah, dh ; ljmp ptr [rcx] ; push rbx ; call rcx
0x00000000001ac743 : add ah, dh ; loopne 0x1ac750 ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x000000000018d0ef : add ah, dh ; mov al, 0xf8 ; jmp rsp
0x00000000001a5143 : add ah, dh ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018dd27 : add ah, dh ; push rbp ; cli ; call rsp
0x000000000019e443 : add ah, dh ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x000000000018b30f : add ah, dh ; xlatb ; hlt ; jmp rsp
0x000000000018d9df : add ah, dl ; add dl, bh ; jmp rsp
0x000000000018dca7 : add ah, dl ; cli ; jmp rsp
0x000000000018dc17 : add ah, dl ; cmp bh, dl ; jmp rsp
0x0000000000188c9f : add ah, dl ; int1 ; jmp 0x188ca7
0x00000000001a5723 : add ah, dl ; jo 0x1a5730 ; add al, ch ; js 0x1a5727 ; jmp qword ptr [rcx]
0x000000000018b8f7 : add ah, dl ; mov esi, dr0 ; call rsp
0x000000000019a323 : add ah, dl ; mov esp, 0x18680000 ; out dx, al ; call qword ptr [rcx]
0x0000000000188f77 : add ah, dl ; pop rbp ; in eax, dx ; call rsp
0x000000000018d6ff : add ah, dl ; popfq ; stc ; call rsp
0x00000000001aaa23 : add ah, dl ; ret
0x000000000018976f : add ah, dl ; ret 0xffee
0x0000000000189f47 : add ah, dl ; ret 0xffef
0x000000000018d837 : add ah, dl ; ret 0xfff9
0x000000000018e147 : add ah, dl ; ret 0xfffa
0x00000000001aba23 : add ah, dl ; rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001aff23 : add ah, dl ; sbb byte ptr [rdx], al ; add al, bl ; mov cl, 0xf6 ; call qword ptr [rcx]
0x00000000000be445 : add al, 0 ; add al, ch ; ret
0x000000000006f925 : add al, 0 ; add bl, dh ; ret
0x000000000002733a : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000001265ad : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000048eb8 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000059f3f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000113c48 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000137e2d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c979 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137e51 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f5dac : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000012016f : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a3023 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000003aac6 : add al, 0 ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000127287 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005d2df : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000110f86 : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x0000000000042db9 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000001b7b39 : add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x00000000001b77b1 : add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000102259 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000c0b06 : add al, 0 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000096a74 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000969d4 : add al, 0 ; mov rax, rdi ; ret
0x0000000000108a99 : add al, 0 ; ret
0x0000000000046ec5 : add al, 0x10 ; add bl, dh ; ret
0x0000000000125ef0 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a1c2d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000b0822 : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000fd6bb : add al, 0x16 ; ret
0x0000000000097d61 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000884ca : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001b0354 : add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x000000000018c9c0 : add al, 0x1e ; clc ; jmp rsp
0x000000000012d05a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000010a1ad : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x0000000000133e25 : add al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125095 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f0b48 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000fd584 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fd5e5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000120569 : add al, 0x24 ; call qword ptr [r11]
0x00000000000278c3 : add al, 0x24 ; call qword ptr [rbx]
0x00000000000235b6 : add al, 0x24 ; call rbx
0x00000000000a36d3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000226ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fa473 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021ee1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000036be1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000117f5f : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000018db58 : add al, 0x2e ; cli ; jmp rsp
0x00000000000a0dd9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0deb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008a9ae : add al, 0x31 ; ret
0x00000000001138a1 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008a8aa : add al, 0x37 ; ret
0x000000000001f573 : add al, 0x3a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000751ef : add al, 0x3a ; ret
0x00000000000a188d : add al, 0x41 ; pop rsp ; ret
0x0000000000189f54 : add al, 0x45 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012222b : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e42c4 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096a85 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000096a95 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f37b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000096a35 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000011828e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000015cc79 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000015cc8b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000074753 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000777c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000746ae : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014d0da : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000781fc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000783b2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000074544 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000969f5 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000096995 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000088c84 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021f5a : add al, 0x49 ; lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000107ac4 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000188b28 : add al, 0x54 ; jmp 0x188b2e
0x000000000019c804 : add al, 0x59 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000116b7a : add al, 0x5b ; ret
0x000000000015cc87 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099cbc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001a5754 : add al, 0x71 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x000000000002f8fd : add al, 0x72 ; or bl, dh ; ret
0x00000000000dbd79 : add al, 0x74 ; add al, 0xa8 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x00000000000801e9 : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x00000000000d1fb5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xd1fc9 ; xor eax, eax ; ret
0x00000000000d28a4 : add al, 0x75 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1e5b : add al, 0x75 ; jb 0xd1e59 ; ret 0x7408
0x000000000002bd32 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000084132 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000efe02 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002fde0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe00 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fd40 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fdc0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fce0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fd80 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd20 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fd60 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002fe80 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002fd00 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002fda0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002fcc0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000d643e : add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x000000000006c81c : add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000054b17 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000a1db5 : add al, 0x81 ; je 0xa1d95 ; ret
0x000000000013955b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a1db1 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xa1d99 ; ret
0x000000000013ae33 : add al, 0x81 ; sub eax, edx ; ret
0x00000000000968aa : add al, 0x82 ; add r10, rax ; jmp r10
0x000000000002ddee : add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022aee : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000a1d6a : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1d58 ; ret
0x000000000008efd7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000034e6b : add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000028561 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000736e4 : add al, 0x83 ; loopne 0x736ed ; ret
0x0000000000071382 : add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x000000000011c0db : add al, 0x83 ; ret
0x00000000000d10ef : add al, 0x83 ; ret 0x4101
0x00000000000374b3 : add al, 0x83 ; rol byte ptr [rcx], 0xf7 ; ret 0
0x00000000000a1e92 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xa1e90 ; ret
0x00000000000a391e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000001a6c54 : add al, 0x86 ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x000000000004732e : add al, 0x86 ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x000000000006c8dc : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000b8395 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000127216 : add al, 0x87 ; add rdi, rax ; jmp rdi
0x00000000000a3676 : add al, 0x87 ; test r8d, r8d ; jne 0xa3650 ; ret
0x000000000015cc76 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000099c9b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000096907 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x0000000000037461 : add al, 0x89 ; enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000048d3a : add al, 0x89 ; ret
0x00000000000e4d23 : add al, 0x89 ; ret 0xeeeb
0x00000000000a1d6d : add al, 0x8a ; je 0xa1d55 ; ret
0x00000000000a4b47 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000099c84 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006d421 : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x000000000006d2eb : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000000a3660 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000538d0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000d7ad2 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000010c7d9 : add al, 0x8d ; je 0x10c815 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x00000000001aa5e5 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x000000000004de55 : add al, 0x90 ; add rax, r12 ; jmp rax
0x000000000005f122 : add al, 0x90 ; add rax, r13 ; jmp rax
0x00000000001a7954 : add al, 0x93 ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000fdee9 : add al, 0xa ; ret
0x0000000000189518 : add al, 0xa0 ; out dx, al ; jmp rsp
0x0000000000030722 : add al, 0xa2 ; add rdx, rax ; jmp rdx
0x00000000000dbd7b : add al, 0xa8 ; add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x000000000002f8e6 : add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000012e743 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000030068 : add al, 0xb8 ; ret
0x000000000018d7f8 : add al, 0xba ; stc ; jmp rsp
0x00000000000a1b79 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000018dc6c : add al, 0xc2 ; add al, byte ptr [rax] ; mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x0000000000121359 : add al, 0xc2 ; jmp rax
0x00000000000a3893 : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001aaa54 : add al, 0xc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x0000000000054fef : add al, 0xc6 ; add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000c7786 : add al, 0xce ; jmp 0xc7750
0x00000000000bcc13 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001657a4 : add al, 0xd0 ; and eax, 0 ; add bl, dh ; ret
0x000000000018e508 : add al, 0xd0 ; std ; jmp rsp
0x00000000000376a7 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000002d17b : add al, 0xd8 ; test rax, rax ; je 0x2d18b ; call rax
0x00000000000384ed : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x38549
0x0000000000039c7d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x39cd9
0x00000000000c6b27 : add al, 0xe8 ; ret
0x00000000000aee28 : add al, 0xe8 ; ret 0x4f8
0x0000000000028eec : add al, 0xe9 ; mov esp, 0x89fffffc ; ret 0xe283
0x00000000000e4437 : add al, 0xeb ; ret 0xf66
0x000000000002fce5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000097b71 : add al, 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013766d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000013d105 : add al, 0xf ; sub rax, rdx ; ret
0x000000000013381c : add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000a2ba5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009d79b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000dca09 : add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000dfcde : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000af60a : add al, 0xf ; xchg eax, ebp ; ret 0xc7e9
0x00000000000af466 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x0000000000110e4d : add al, 0xf ; xchg eax, esi ; ret
0x0000000000199fac : add al, 0xf1 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a2671 : add al, 0xf2 ; jmp rdx
0x000000000014d443 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000005dd5b : add al, 0xf3 ; ret
0x0000000000037721 : add al, 0xf6 ; ret 0x7402
0x000000000008c749 : add al, 0xf6 ; ret 0x7408
0x000000000018c841 : add al, 0xf8 ; jmp rsp
0x00000000001b5539 : add al, 0xfb ; jmp qword ptr [rdx]
0x0000000000186d15 : add al, 0xfc ; call rax
0x000000000007127a : add al, 0xff ; or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071374 : add al, 0xff ; or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x000000000007213f : add al, 0xff ; or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x00000000000705cf : add al, 0xff ; or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dda4 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000011493b : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000a2bd8 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000005dcfa : add al, 1 ; ret
0x000000000005dd7a : add al, 1 ; xor eax, eax ; ret
0x0000000000161367 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000054ff1 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000009d8e8 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000056e85 : add al, 7 ; add dword ptr [rax - 0x77], ecx ; dec byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000086e9d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002f8e9 : add al, 7 ; ret
0x0000000000096b66 : add al, 7 ; test r8b, r8b ; jne 0x96b58 ; ret
0x0000000000072fc3 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000019ee54 : add al, 8 ; add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x0000000000097ecf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000019a13f : add al, ah ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a266f : add al, ah ; add al, 0xf2 ; jmp rdx
0x00000000001a551f : add al, ah ; jae 0x1a551b ; jmp qword ptr [rcx]
0x00000000001b3f1f : add al, ah ; jp 0x1b3f1e ; call qword ptr [rdx]
0x00000000001aff3f : add al, ah ; mov cl, 0xf6 ; jmp qword ptr [rcx]
0x00000000001a50ff : add al, ah ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x000000000001b397 : add al, ah ; ret
0x000000000001b0af : add al, ah ; ret 0x3b
0x00000000001aab8f : add al, ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000186bbc : add al, ah ; sti ; jmp rax
0x00000000001a7e4f : add al, ah ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a3a6f : add al, ah ; sub esi, ebx ; jmp rdx
0x00000000001af89f : add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000001a543f : add al, al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a770f : add al, al ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001788ef : add al, al ; push rbp ; call rax
0x000000000019e30f : add al, al ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x000000000001b337 : add al, al ; ret
0x000000000001b04f : add al, al ; ret 0x3b
0x00000000001aa94f : add al, al ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001b1c27 : add al, bh ; add bh, dh ; call qword ptr [rdi]
0x000000000019fc67 : add al, bh ; cld ; jmp qword ptr [rbx]
0x00000000001a8647 : add al, bh ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ab9f7 : add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a5537 : add al, bh ; jae 0x1a5533 ; jmp qword ptr [rcx]
0x000000000019c3f7 : add al, bh ; js 0x19c3ed ; jmp qword ptr [rcx]
0x00000000001b4397 : add al, bh ; mov bh, dh ; call qword ptr [rdx]
0x00000000001a2d77 : add al, bh ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001a5117 : add al, bh ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x0000000000192b17 : add al, bh ; or al, 0xeb ; jmp rax
0x00000000001abc47 : add al, bh ; out 0xf5, al ; call qword ptr [rax]
0x000000000018f6b7 : add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000001b0f7 : add al, bh ; ret 0x3b
0x00000000001aaba7 : add al, bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a7e67 : add al, bh ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001af7a7 : add al, bh ; test dh, dh ; jmp rdx
0x0000000000195347 : add al, bh ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001b5db7 : add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000019d5b7 : add al, bl ; fdivr st(1) ; call qword ptr [rax]
0x00000000001a5457 : add al, bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aff27 : add al, bl ; mov cl, 0xf6 ; call qword ptr [rcx]
0x000000000019ce17 : add al, bl ; mov dh, 0xee ; call qword ptr [rax]
0x000000000009dbeb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001a40d7 : add al, bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x000000000001b37f : add al, bl ; ret
0x000000000001b097 : add al, bl ; ret 0x3b
0x00000000001aa967 : add al, bl ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001995d7 : add al, bl ; stc ; in eax, dx ; call qword ptr [rax]
0x00000000001a8017 : add al, bl ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a83a7 : add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000013ff82 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000086e01 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000018cbc6 : add al, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x000000000018e0fe : add al, byte ptr [rax] ; adc al, 0xbf ; cli ; jmp rsp
0x000000000018d896 : add al, byte ptr [rax] ; adc al, 0xcb ; stc ; call rsp
0x000000000018c8ce : add al, byte ptr [rax] ; adc al, 0xf ; clc ; call rsp
0x000000000018d356 : add al, byte ptr [rax] ; adc r15b, cl ; jmp rsp
0x000000000018c9be : add al, byte ptr [rax] ; add al, 0x1e ; clc ; jmp rsp
0x000000000018db56 : add al, byte ptr [rax] ; add al, 0x2e ; cli ; jmp rsp
0x000000000018d7f6 : add al, byte ptr [rax] ; add al, 0xba ; stc ; jmp rsp
0x00000000000e3942 : add al, byte ptr [rax] ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff4
0x000000000007f6c5 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000002fe37 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000028e14 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000fa476 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008bca3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000042a77 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d7f06 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000858c2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000b3d97 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e6bf1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000008b96e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000034776 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2bfa : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000113d68 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000137fcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013abf1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137ff1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c46a6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000011b2c0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012477f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000012804f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000012779f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000133042 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012ad3d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f621c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f5f8f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000000f5e5b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000f5dd3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001298d1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000012d05c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000fc825 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a3003 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bced7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095466 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000007243f : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000381b9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b561e : add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x0000000000030f23 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x0000000000163b74 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000018cd56 : add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000018cefe : add al, byte ptr [rax] ; and bh, byte ptr [rbp - 8] ; call rsp
0x00000000001b2e2e : add al, byte ptr [rax] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x000000000018dade : add al, byte ptr [rax] ; and r10, rdi ; call rsp
0x00000000001b1c26 : add al, byte ptr [rax] ; clc ; add bh, dh ; call qword ptr [rdi]
0x00000000001b4396 : add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000001af7a6 : add al, byte ptr [rax] ; clc ; test dh, dh ; jmp rdx
0x00000000001b5386 : add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001b11f6 : add al, byte ptr [rax] ; cwde ; fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x000000000018d20e : add al, byte ptr [rax] ; fdivr st(3), st(0) ; clc ; call rsp
0x000000000018e5be : add al, byte ptr [rax] ; fdivr st(5) ; jmp rsp
0x000000000018c3ae : add al, byte ptr [rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x000000000018d0ee : add al, byte ptr [rax] ; hlt ; mov al, 0xf8 ; jmp rsp
0x000000000018dd26 : add al, byte ptr [rax] ; hlt ; push rbp ; cli ; call rsp
0x000000000018c7e6 : add al, byte ptr [rax] ; je 0x18c7f0 ; clc ; jmp rsp
0x000000000018cb96 : add al, byte ptr [rax] ; jnp 0x18cbdb ; clc ; jmp rsp
0x000000000018e0e6 : add al, byte ptr [rax] ; jo 0x18e0ad ; cli ; call rsp
0x00000000001b51ee : add al, byte ptr [rax] ; jo 0x1b51fe ; sti ; jmp qword ptr [rdx]
0x000000000018d08e : add al, byte ptr [rax] ; js 0x18d038 ; clc ; jmp rsp
0x0000000000096a55 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000018d3a6 : add al, byte ptr [rax] ; mov ah, 0x31 ; stc ; call rsp
0x000000000018dc6e : add al, byte ptr [rax] ; mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000018cda6 : add al, byte ptr [rax] ; mov ah, 0x61 ; clc ; jmp rsp
0x000000000018de16 : add al, byte ptr [rax] ; mov ah, 0x65 ; cli ; jmp rsp
0x000000000018df86 : add al, byte ptr [rax] ; mov ah, 0x99 ; cli ; jmp rsp
0x000000000018e04e : add al, byte ptr [rax] ; mov ah, 0xb9 ; cli ; call rsp
0x00000000001b679e : add al, byte ptr [rax] ; mov al, 0xf2 ; cli ; call rcx
0x00000000000969b5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000018e026 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, 0xfa ; call rsp
0x000000000016007b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001111c3 : add al, byte ptr [rax] ; pop r12 ; ret
0x00000000001affa6 : add al, byte ptr [rax] ; pop rbp ; ret
0x00000000000734c7 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f8002 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001b41be : add al, byte ptr [rax] ; push rax ; jg 0x1b41bf ; call qword ptr [rdx]
0x00000000001b143e : add al, byte ptr [rax] ; push rax ; jrcxz 0x1b143e ; call qword ptr [rdi]
0x00000000001b033e : add al, byte ptr [rax] ; push rax ; ret 0xfff6
0x000000000018ca46 : add al, byte ptr [rax] ; push rcx ; and edi, eax ; call rsp
0x000000000018c906 : add al, byte ptr [rax] ; push rsp ; adc bh, al ; call rsp
0x000000000018dc8e : add al, byte ptr [rax] ; push rsp ; cli ; inc esp ; ret 2
0x000000000018d83e : add al, byte ptr [rax] ; push rsp ; ret
0x00000000001b0356 : add al, byte ptr [rax] ; ret 0xfff6
0x00000000001b52be : add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x000000000018d506 : add al, byte ptr [rax] ; stc ; call rsp
0x000000000018d516 : add al, byte ptr [rax] ; stc ; jmp rsp
0x000000000018db36 : add al, byte ptr [rax] ; sub edx, edi ; call rsp
0x000000000018cec6 : add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x000000000018cab6 : add al, byte ptr [rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x000000000018d3be : add al, byte ptr [rax] ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x000000000018dc46 : add al, byte ptr [rax] ; xor al, 0x3d ; cli ; call rsp
0x000000000018d2ee : add al, byte ptr [rax] ; xor al, 2 ; stc ; call rsp
0x00000000001aee1e : add al, byte ptr [rax] ; xor byte ptr [rax - 0xa], bl ; call qword ptr [rdi]
0x000000000019babd : add al, byte ptr [rbx] ; add al, byte ptr [rcx] ; ret
0x000000000010817e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000011d69e : add al, byte ptr [rcx + 0x5c] ; sub eax, 1 ; pop r13 ; ret
0x0000000000197c90 : add al, byte ptr [rcx + 0xa] ; ret
0x000000000010416f : add al, byte ptr [rcx - 0x77] ; call 0xffffffffc35550c3
0x0000000000104ca2 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000114992 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000019babf : add al, byte ptr [rcx] ; ret
0x0000000000037452 : add al, byte ptr [rdi + rcx + 0x45] ; ret 0x8944
0x00000000001ae905 : add al, byte ptr [rdx] ; add byte ptr [rax], cl ; sub esi, esi ; jmp qword ptr [rcx]
0x000000000018c0cd : add al, byte ptr [rdx] ; add byte ptr [rdx + rsi - 9], dh ; call rsp
0x0000000000117c52 : add al, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x00000000001964d5 : add al, byte ptr [rdx] ; pushfq ; ret
0x000000000019c9f5 : add al, byte ptr [rdx] ; ret
0x000000000009d9ea : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000018cab5 : add al, byte ptr ds:[rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x00000000000b3d96 : add al, byte ptr es:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000025495 : add al, ch ; add eax, 0xe9fffff4 ; ret
0x00000000001a8817 : add al, ch ; cmc ; jmp rax
0x00000000000e3944 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff4
0x00000000001a3347 : add al, ch ; fcompi st(2) ; call qword ptr [rdx]
0x0000000000046f4f : add al, ch ; imul ecx, ebx, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000001aba27 : add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000000fd26b : add al, ch ; jmp qword ptr [rcx]
0x00000000001a5727 : add al, ch ; js 0x1a5723 ; jmp qword ptr [rcx]
0x0000000000127541 : add al, ch ; mov dword ptr [rax - 0x76b70010], edx ; ret 0x8d48
0x00000000000488d6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ah, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000c10a5 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x0000000000123424 : add al, ch ; out 0xbf, al ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e30ad : add al, ch ; pop rbp ; ret
0x000000000001b3af : add al, ch ; ret
0x00000000000e00d8 : add al, ch ; ret 0x15
0x000000000001b0c7 : add al, ch ; ret 0x3b
0x00000000000e1d98 : add al, ch ; ret 0xf3d6
0x00000000000aec28 : add al, ch ; ret 0xf80f
0x00000000001294f8 : add al, ch ; ret 0xffd9
0x0000000000081358 : add al, ch ; ret 0xffdb
0x00000000000f7fa1 : add al, ch ; sbb dword ptr [rax], ebp ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000010bd6c : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000028f29 : add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x00000000001a2447 : add al, ch ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000000ef570 : add al, ch ; stosb byte ptr [rdi], al ; ret 0xfff4
0x00000000000e4a9f : add al, ch ; stosd dword ptr [rdi], eax ; ret 0
0x00000000001a7d07 : add al, ch ; sub ch, dh ; call qword ptr [rax]
0x00000000000b3234 : add al, ch ; test byte ptr [rsi], 0xfc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001172c1 : add al, ch ; test eax, 0x8900006a ; ret 0x8b48
0x000000000011f638 : add al, ch ; xchg eax, edx ; ret 0
0x00000000000c10d6 : add al, ch ; xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x00000000001a2c97 : add al, ch ; xchg edx, esi ; jmp qword ptr [rcx]
0x0000000000063913 : add al, ch ; xlatb ; ret 0xfffc
0x00000000001b3ac7 : add al, cl ; jno 0x1b3ac6 ; call qword ptr [rbx]
0x0000000000194bf7 : add al, cl ; jnp 0x194bec ; jmp rcx
0x00000000001a5347 : add al, cl ; push 0xf4 ; jmp qword ptr [rcx]
0x00000000001931b7 : add al, cl ; push rsi ; jmp 0x1931bf
0x000000000001b34f : add al, cl ; ret
0x000000000001b067 : add al, cl ; ret 0x3b
0x0000000000197ed7 : add al, cl ; ret 0xffed
0x00000000001b5637 : add al, cl ; ret 0xfff7
0x00000000001a5ee7 : add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a7cd7 : add al, cl ; sub ch, dh ; jmp qword ptr [rcx]
0x0000000000192067 : add al, cl ; test al, 0xea ; call qword ptr [rcx]
0x00000000001a557f : add al, dh ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000000051b7 : add al, dh ; call qword ptr [rax]
0x00000000001aaf5f : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001aba0f : add al, dh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a2def : add al, dh ; mov dh, dl ; call qword ptr [rcx]
0x00000000001a773f : add al, dh ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001b05ef : add al, dh ; push rcx ; sti ; call rsi
0x000000000001b3c7 : add al, dh ; ret
0x000000000001b0df : add al, dh ; ret 0x3b
0x0000000000197eef : add al, dh ; ret 0xffed
0x000000000019ccff : add al, dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001aa97f : add al, dh ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a802f : add al, dh ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a83bf : add al, dh ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a47af : add al, dl ; clc ; jmp qword ptr [rdi]
0x00000000001a23cf : add al, dl ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001a817f : add al, dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a6d4f : add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a046f : add al, dl ; int1 ; call qword ptr [rdx]
0x000000000017865f : add al, dl ; jl 0x178667 ; push rax ; jge 0x17866b ; call qword ptr [rax]
0x000000000019fd1f : add al, dl ; or cl, dh ; jmp rcx
0x000000000001b367 : add al, dl ; ret
0x000000000000e937 : add al, dl ; ret 0x10
0x000000000001b07f : add al, dl ; ret 0x3b
0x000000000019207f : add al, dl ; test al, 0xea ; call qword ptr [rcx]
0x00000000001a2c7f : add al, dl ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a0c00 : add bh, 0xf1 ; call qword ptr [rbx]
0x0000000000186d91 : add bh, ah ; call qword ptr [rax]
0x0000000000186db1 : add bh, ah ; call rax
0x00000000001abc90 : add bh, ah ; cmc ; call qword ptr [rax]
0x000000000018937f : add bh, ah ; mov esi, ebp ; jmp rsp
0x00000000001b025f : add bh, ah ; ret 0xfff6
0x000000000016605f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001b6a57 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000123bcc : add bh, bh ; loope 0x123b65 ; ret
0x00000000000b0175 : add bh, bh ; ret
0x000000000007a4ad : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000187fa7 : add bh, bl ; jl 0x187f98 ; jmp rsp
0x0000000000186b18 : add bh, bl ; sti ; jmp rax
0x00000000000e4f62 : add bh, byte ptr [rax + 0x16] ; jbe 0xe4f79 ; ret
0x0000000000039e44 : add bh, byte ptr [rax + 1] ; ret
0x00000000000ebc83 : add bh, byte ptr [rax - 1] ; ret
0x0000000000163f42 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001899a9 : add bh, ch ; call rsp
0x000000000018d2f1 : add bh, cl ; call rsp
0x00000000001b1c29 : add bh, dh ; call qword ptr [rdi]
0x00000000000f0b1f : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000c376d : add bh, dh ; ret
0x0000000000036507 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000001785fc : add bl, ah ; int1 ; call qword ptr [rax]
0x00000000001889b7 : add bl, al ; jmp 0x1889bf
0x00000000000a2d20 : add bl, al ; lea rax, qword ptr [rip + 0xbccb7] ; ret
0x00000000000a38e4 : add bl, al ; lea rax, qword ptr [rip + 0xc0673] ; ret
0x000000000008bf94 : add bl, al ; lea rax, qword ptr [rip + 0xd6853] ; ret
0x00000000000d0c0e : add bl, al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000114988 : add bl, al ; mov eax, 0x100 ; nop ; ret
0x00000000000c36ac : add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000097b21 : add bl, al ; mov r10, r8 ; jmp 0x97b1d
0x00000000000c25fc : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000f072d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000123dd9 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000013603a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a4b25 : add bl, al ; ret
0x000000000012791e : add bl, al ; xor eax, eax ; ret
0x00000000001899a7 : add bl, bh ; add bh, ch ; call rsp
0x00000000001ac830 : add bl, bh ; cmc ; call qword ptr [rax]
0x000000000017a077 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000000368a8 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000c647b : add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000018eaac : add bl, byte ptr [rax - 0x17] ; jmp qword ptr [rdx]
0x00000000001aa7e5 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000c647c : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000000c7442 : add bl, byte ptr [rcx - 0x7c0608bf] ; ret 0x8d01
0x0000000000082397 : add bl, ch ; or eax, 0xbf35b10f ; ret
0x0000000000021874 : add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x0000000000046ef4 : add bl, ch ; ret
0x00000000000ba236 : add bl, ch ; ret 0x1f0f
0x0000000000026535 : add bl, ch ; ret 0x8b48
0x00000000000450eb : add bl, ch ; ret 0x9066
0x0000000000134029 : add bl, ch ; ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x000000000009df9f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009dfaf : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000021c02 : add bl, dh ; ret
0x00000000000801b4 : add bl, dl ; loopne 0x80145 ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000097ad6 : add bl, sil ; ret
0x00000000000c2797 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000bda9e : add byte ptr [r13 - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000059d30 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011a7a3 : add byte ptr [r8 - 0x7d], r9b ; ret 0x3108
0x0000000000029e19 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000001931fd : add byte ptr [r8], al ; push rax ; push rdi ; jmp 0x193209
0x0000000000198e35 : add byte ptr [r8], al ; test al, 0xed ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001935f5 : add byte ptr [r8], r8b ; fsub dword ptr [rdx - 0x15] ; jmp qword ptr [rbx]
0x00000000001935dd : add byte ptr [r8], r8b ; shl byte ptr [rdx - 0x15], 1 ; call qword ptr [rdi]
0x00000000000e37c2 : add byte ptr [r9], r15b ; ret 0x870f
0x000000000011498e : add byte ptr [rax + 0x102b8c3], dl ; add byte ptr [rax], al ; ret
0x000000000019d5e7 : add byte ptr [rax + 0x12], ch ; cli ; call qword ptr [rax]
0x000000000019a2f7 : add byte ptr [rax + 0x17], bh ; out dx, al ; call qword ptr [rdi]
0x000000000019a327 : add byte ptr [rax + 0x18], ch ; out dx, al ; call qword ptr [rcx]
0x000000000003649b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000c26bf : add byte ptr [rax + 0x20], bh ; ret
0x000000000019a7a7 : add byte ptr [rax + 0x22], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000019bc0f : add byte ptr [rax + 0x23], al ; out dx, al ; jmp rcx
0x000000000019a93f : add byte ptr [rax + 0x28], al ; out dx, al ; call qword ptr [rdx]
0x0000000000028e04 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4172 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b5705 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051592 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000002733c : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000007d5e5 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000001a7eaf : add byte ptr [rax + 0x2b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ec7 : add byte ptr [rax + 0x2b], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7edf : add byte ptr [rax + 0x2b], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f9f : add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7fb7 : add byte ptr [rax + 0x2c], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f87 : add byte ptr [rax + 0x2c], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a81c7 : add byte ptr [rax + 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x000000000000b43f : add byte ptr [rax + 0x30], ah ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a826f : add byte ptr [rax + 0x30], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8287 : add byte ptr [rax + 0x30], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a85b7 : add byte ptr [rax + 0x38], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a868f : add byte ptr [rax + 0x39], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a86a7 : add byte ptr [rax + 0x39], bl ; cmc ; jmp rbx
0x000000000010c2e3 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf97c
0x0000000000077069 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000002740b : add byte ptr [rax + 0x39], cl ; ret
0x000000000002c1b4 : add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000007e3bc : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000078a6f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000e54f2 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007da6e : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000108310 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000800d7 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000000c270f : add byte ptr [rax + 0x40], bh ; ret
0x00000000001a87c7 : add byte ptr [rax + 0x41], cl ; cmc ; jmp rdi
0x00000000001865dd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000019d6e7 : add byte ptr [rax + 0x46], cl ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001931ff : add byte ptr [rax + 0x57], dl ; jmp 0x193207
0x000000000001f575 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000eb4cf : add byte ptr [rax + 0x5f], bh ; syscall ; ret
0x00000000000fa478 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001a4f2f : add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x000000000019c06f : add byte ptr [rax + 0x62], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a5037 : add byte ptr [rax + 0x63], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000b5417 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d352 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000c2d12 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000034bff : add byte ptr [rax + 0x63], cl ; adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000083664 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000006471f : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000005e5ff : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000034e68 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000000c65a2 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000127213 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000004de52 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r12 ; jmp rax
0x000000000005f11f : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r13 ; jmp rax
0x00000000000a1b76 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000a95f4 : add byte ptr [rax + 0x63], cl ; imul al ; ret
0x000000000006d242 : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rsi, rcx ; jmp rsi
0x0000000000034b97 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000130aa7 : add byte ptr [rax + 0x63], cl ; ret 0x14c
0x000000000005e6fa : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d1ddf : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000021052 : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d6466 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000449f6 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000c8cd4 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000013cf43 : add byte ptr [rax + 0x63], cl ; ret 0xf66
0x0000000000047ded : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000001a504f : add byte ptr [rax + 0x63], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a5147 : add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a525f : add byte ptr [rax + 0x66], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000c1e5f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000c1e7f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000019c18f : add byte ptr [rax + 0x6a], al ; out dx, al ; call qword ptr [rdi]
0x00000000000c1e6f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000001a540f : add byte ptr [rax + 0x6c], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000c1e8f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001a53f7 : add byte ptr [rax + 0x6c], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000c1e4f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000000c208f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001b3c97 : add byte ptr [rax + 0x74], ch ; idiv edi ; ret 0
0x0000000000086dff : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000470a7 : add byte ptr [rax + 0x752fff78], al ; xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x000000000018adcf : add byte ptr [rax + 0x75], bl ; call rsp
0x000000000009e4ef : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001a5787 : add byte ptr [rax + 0x79], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000c25f7 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000c254a : add byte ptr [rax + 0x7f], bh ; ret
0x00000000001a75d7 : add byte ptr [rax + 0xa], bh ; cmc ; call rsp
0x00000000001a76c7 : add byte ptr [rax + 0xb], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000fa8ef : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x0000000000190888 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000002fd84 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007a823 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a815 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000079122 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000086907 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x000000000008c562 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000004fe54 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000b2cd4 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000011a1f2 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c260f : add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002bfcf : add byte ptr [rax + 1], bh ; ret
0x000000000008bca5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e0fe : add byte ptr [rax + 1], cl ; ret
0x00000000000a55ff : add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000095daf : add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000b0597 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df1c9 : add byte ptr [rax + 1], cl ; ret 0x8d4c
0x000000000000668f : add byte ptr [rax + 1], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000001a46c3 : add byte ptr [rax + 1], dh ; add byte ptr [rax], bl ; div ebx ; jmp qword ptr [rax]
0x00000000001a86a3 : add byte ptr [rax + 1], dl ; add byte ptr [rax + 0x39], bl ; cmc ; jmp rbx
0x00000000001215cf : add byte ptr [rax + 2], bh ; ret
0x00000000001a25c7 : add byte ptr [rax + 2], bl ; call rdi
0x0000000000046eef : add byte ptr [rax + 3], bh ; jmp 0x46ec1
0x000000000000e09f : add byte ptr [rax + 5], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b51ef : add byte ptr [rax + 7], dh ; sti ; jmp qword ptr [rdx]
0x00000000001a266b : add byte ptr [rax + rax*2], bl ; add dword ptr [rax], eax ; loopne 0x1a267e ; jmp rdx
0x00000000001ac47b : add byte ptr [rax + rax*4], cl ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000000318ff : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c04c7 : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000009db6c : add byte ptr [rax + rax], 0 ; ret
0x00000000001aad57 : add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019ae47 : add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019ad27 : add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x00000000000be444 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000005d2de : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019a89f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x0000000000081271 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081431 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000063e5 : add byte ptr [rax + rax], cl ; call qword ptr [rcx]
0x00000000000048fd : add byte ptr [rax + rax], cl ; nop ; ret 3
0x00000000000041f5 : add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000000a1dd : add byte ptr [rax + rax], cl ; ret
0x00000000001aa947 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001aaa37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a937 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aa8b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001aa9ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001aa9a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa89f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001aa8e7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001aa98f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001a0efb : add byte ptr [rax + rbp - 0x2f6fffff], ch ; int1 ; call rsi
0x00000000000a35b5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000019ce93 : add byte ptr [rax + rbp*8], al ; add byte ptr [rax - 0x48], bl ; out dx, al ; jmp qword ptr [rdx]
0x000000000019fee3 : add byte ptr [rax + rbx + 0x16380001], dl ; int1 ; jmp qword ptr [rcx]
0x000000000018885f : add byte ptr [rax + rbx - 0x15], ah ; call rsp
0x00000000001a3efb : add byte ptr [rax + rbx*2 + 0x4e000001], ch ; jmp qword ptr [rbx]
0x00000000001a7edb : add byte ptr [rax + rbx*4 + 0x2b700001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ef3 : add byte ptr [rax + rbx*4 + 0x2b880001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e93 : add byte ptr [rax + rbx*4 + 1], al ; add byte ptr [rax], ch ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7eab : add byte ptr [rax + rbx*4 + 1], bl ; add byte ptr [rax + 0x2b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ec3 : add byte ptr [rax + rbx*4 + 1], dh ; add byte ptr [rax + 0x2b], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e7b : add byte ptr [rax + rbx*4], ch ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e63 : add byte ptr [rax + rbx*4], dl ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001abe93 : add byte ptr [rax + rbx*8 + 1], al ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001abedb : add byte ptr [rax + rbx*8 - 0x12afffff], cl ; cmc ; call qword ptr [rax]
0x000000000018e5bf : add byte ptr [rax + rbx*8 - 3], ah ; jmp rsp
0x000000000018fea3 : add byte ptr [rax + rbx], dl ; add byte ptr [rax], bh ; add edx, ebp ; call qword ptr [rdx]
0x00000000000ffc4d : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000c3c7a : add byte ptr [rax + rcx + 0xf], dh ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000f3dcd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000001a2eab : add byte ptr [rax + rcx*2 + 1], bl ; add byte ptr [rax - 0x76], ah ; call qword ptr [rdi]
0x0000000000047646 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001a2efb : add byte ptr [rax + rcx*2 - 0x75afffff], ch ; call qword ptr [rdx]
0x00000000001a6e6b : add byte ptr [rax + rcx*4], bl ; add dword ptr [rax], eax ; rcr ch, 1 ; hlt ; call rbx
0x000000000019ee53 : add byte ptr [rax + rcx], al ; add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x00000000001a1f0b : add byte ptr [rax + rdi - 0x1a7fffff], bh ; int1 ; jmp rsi
0x00000000001a5ee3 : add byte ptr [rax + rdi*2 - 0x5137ffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019df0b : add byte ptr [rax + rdi*8 - 0x73500000], bh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019dedb : add byte ptr [rax + rdi*8 - 0x73600000], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a76f3 : add byte ptr [rax + rdx*4 + 0xba80001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a770b : add byte ptr [rax + rdx*4 + 0xbc00001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a76c3 : add byte ptr [rax + rdx*4 + 1], dh ; add byte ptr [rax + 0xb], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018af2f : add byte ptr [rax + rdx*4], ah ; call rsp
0x00000000001a767b : add byte ptr [rax + rdx*4], ch ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7663 : add byte ptr [rax + rdx*4], dl ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018e507 : add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x000000000018f6b3 : add byte ptr [rax + rdx], ah ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018c07f : add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x00000000001a56f3 : add byte ptr [rax + rsi*2 + 0x78b80001], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000189627 : add byte ptr [rax + rsi*4 - 0x12], dh ; call rsp
0x000000000019d6e3 : add byte ptr [rax + rsi*8 + 0x46480000], dl ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001abedf : add byte ptr [rax - 0x13], dl ; cmc ; call qword ptr [rax]
0x0000000000166790 : add byte ptr [rax - 0x14], bh ; call rax
0x00000000001a2077 : add byte ptr [rax - 0x14], bl ; int1 ; jmp qword ptr [rcx]
0x000000000012635d : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x000000000011247c : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894c
0x00000000001a1fa7 : add byte ptr [rax - 0x16], bl ; int1 ; jmp qword ptr [rcx]
0x0000000000031c4e : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x000000000019d29f : add byte ptr [rax - 0x17], ah ; out dx, al ; call qword ptr [rax]
0x00000000001a33af : add byte ptr [rax - 0x17], al ; jmp rdx
0x0000000000188037 : add byte ptr [rax - 0x17], al ; jmp rsp
0x00000000000e6c33 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b49
0x00000000001ab7f7 : add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ab7df : add byte ptr [rax - 0x1d], dh ; cmc ; call qword ptr [rax]
0x00000000001ab68f : add byte ptr [rax - 0x1f], dl ; cmc ; call qword ptr [rcx]
0x00000000001ab14f : add byte ptr [rax - 0x22], ah ; cmc ; call qword ptr [rax]
0x00000000001ab167 : add byte ptr [rax - 0x22], bl ; cmc ; call qword ptr [rax]
0x00000000001a6dc7 : add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d97 : add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x000000000019d077 : add byte ptr [rax - 0x29], cl ; out dx, al ; jmp rdx
0x000000000000c27f : add byte ptr [rax - 0x29], dl ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001aabef : add byte ptr [rax - 0x2c], al ; cmc ; jmp qword ptr [rsi]
0x00000000001aac07 : add byte ptr [rax - 0x2c], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001aac1f : add byte ptr [rax - 0x2c], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa9f7 : add byte ptr [rax - 0x2d], ch ; cmc ; jmp qword ptr [rsi]
0x0000000000037841 : add byte ptr [rax - 0x2d], cl ; loopne 0x37897 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001aa9df : add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8ef : add byte ptr [rax - 0x2e], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001aa907 : add byte ptr [rax - 0x2e], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001a67bf : add byte ptr [rax - 0x36], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a0be7 : add byte ptr [rax - 0x39], bh ; int1 ; call qword ptr [rbx]
0x000000000003fbc5 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000b14e4 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000b1434 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x0000000000070256 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a300f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2fef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a304f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2fff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a303f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001a0bcf : add byte ptr [rax - 0x39], dh ; int1 ; call qword ptr [rsi]
0x00000000001a080f : add byte ptr [rax - 0x3b], dh ; int1 ; call qword ptr [rdx]
0x00000000000367a5 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000366fe : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x00000000000f2e46 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000364fa : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002c0ad : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000bec9f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a6477 : add byte ptr [rax - 0x42], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018e0e7 : add byte ptr [rax - 0x42], dh ; cli ; call rsp
0x00000000001a648f : add byte ptr [rax - 0x42], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6367 : add byte ptr [rax - 0x45], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a637f : add byte ptr [rax - 0x45], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000b52a4 : add byte ptr [rax - 0x46], cl ; ret
0x000000000019794f : add byte ptr [rax - 0x46], dl ; in eax, dx ; jmp qword ptr [rax]
0x000000000019ce97 : add byte ptr [rax - 0x48], bl ; out dx, al ; jmp qword ptr [rdx]
0x000000000003e8d4 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001a5cbf : add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x000000000018d08f : add byte ptr [rax - 0x5f], bh ; clc ; jmp rsp
0x00000000001a0587 : add byte ptr [rax - 0x65], bh ; int1 ; call qword ptr [rax]
0x00000000001aa5cf : add byte ptr [rax - 0x69], ah ; cmc ; call rsp
0x000000000019ca07 : add byte ptr [rax - 0x6b], cl ; out dx, al ; call qword ptr [rdx]
0x00000000001959ef : add byte ptr [rax - 0x6b], dh ; in eax, dx ; jmp rsi
0x00000000000c4438 : add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x0000000000195287 : add byte ptr [rax - 0x6e], ch ; in eax, dx ; jmp qword ptr [rax]
0x00000000000c7783 : add byte ptr [rax - 0x73], cl ; add al, 0xce ; jmp 0xc7753
0x0000000000021faf : add byte ptr [rax - 0x73], cl ; add eax, 0x15a5ec ; ret
0x0000000000021fbf : add byte ptr [rax - 0x73], cl ; add eax, 0x15c5c3 ; ret
0x00000000000f964e : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8162 ; ret
0x00000000000f948e : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8322 ; ret
0x000000000007e56a : add byte ptr [rax - 0x73], cl ; add eax, 0x3401ee ; ret
0x0000000000022fc2 : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000a35ff : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a360f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000011220f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2b0d69 ; call rax
0x00000000000a35ef : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000f554f : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000463e3 : add byte ptr [rax - 0x73], cl ; xor eax, 0x195 ; call rax
0x000000000006f8b8 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c588 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe480 ; call rax
0x000000000007c188 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe880 ; call rax
0x000000000007aed8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffb30 ; call rax
0x000000000006fc14 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcd4 ; call rax
0x000000000007ac70 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd98 ; call rax
0x000000000019c9cf : add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x00000000000e2537 : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007dbaf : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000121356 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000e54ef : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000048851 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000b30f7 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000133aff : add byte ptr [rax - 0x75], cl ; add eax, 0x287ff9 ; jmp rax
0x0000000000135620 : add byte ptr [rax - 0x75], cl ; add eax, 0x28a268 ; call qword ptr [rax]
0x0000000000133b60 : add byte ptr [rax - 0x75], cl ; add eax, 0x28bd28 ; call qword ptr [rax]
0x000000000007c94f : add byte ptr [rax - 0x75], cl ; add eax, 0x342849 ; ret
0x000000000002c0df : add byte ptr [rax - 0x75], cl ; add eax, 0x3939d9 ; ret
0x000000000002375f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a04e1 ; ret
0x000000000002374f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a0501 ; ret
0x00000000000f255e : add byte ptr [rax - 0x75], cl ; and al, 0x98 ; ret
0x00000000000760e0 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000007b786 : add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000236e8 : add byte ptr [rax - 0x75], cl ; jnp 0x2370a ; call rax
0x0000000000075476 : add byte ptr [rax - 0x75], cl ; js 0x754c1 ; jmp 0x75446
0x000000000006a008 : add byte ptr [rax - 0x75], cl ; lea ebp, dword ptr [rax - 0x76000002] ; ret
0x0000000000070c5f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000f83ef : add byte ptr [rax - 0x75], cl ; or al, 0 ; add byte ptr [rax], al ; ret
0x000000000012e187 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000d7f08 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000136156 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000f83e7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007fff7 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000014464f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000fcbbe : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000065b69 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3583ef ; call rax
0x0000000000064271 : add byte ptr [rax - 0x75], cl ; xor eax, 0x359ce7 ; call rax
0x000000000005edf5 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35f163 ; call rax
0x000000000005608b : add byte ptr [rax - 0x75], cl ; xor eax, 0x367ecd ; call rax
0x000000000004f081 : add byte ptr [rax - 0x75], cl ; xor eax, 0x36eed7 ; call rax
0x0000000000049f3d : add byte ptr [rax - 0x75], cl ; xor eax, 0x37401b ; call rax
0x00000000001a2eaf : add byte ptr [rax - 0x76], ah ; call qword ptr [rdi]
0x00000000001a2eff : add byte ptr [rax - 0x76], dl ; call qword ptr [rdx]
0x00000000000f34aa : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000703ff : add byte ptr [rax - 0x76b80000], al ; ret 0x2d75
0x000000000006e941 : add byte ptr [rax - 0x76b80000], al ; ret 0x3675
0x000000000010a1af : add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x00000000000f369f : add byte ptr [rax - 0x76b80000], al ; ret 0x5e9
0x0000000000120566 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000008ab90 : add byte ptr [rax - 0x77], cl ; add eax, 0x3360d8 ; ret
0x00000000000868ce : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000010c0bf : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003c98f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000077ab8 : add byte ptr [rax - 0x77], cl ; clc ; jmp 0x77a85
0x00000000000f3378 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000108f1f : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x000000000007c97f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000109f61 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000039aac : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a4b17 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x0000000000079e47 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005d52e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000082bc1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000798a3 : add byte ptr [rax - 0x77], cl ; fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x000000000007da3e : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000e3c30 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x0000000000074916 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007471b : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000d8b27 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c8337 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000135c11 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000120b19 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x00000000000858c4 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000113c5b : add byte ptr [rax - 0x77], cl ; inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x0000000000080a67 : add byte ptr [rax - 0x77], cl ; iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000709af : add byte ptr [rax - 0x77], cl ; jmp 0x48f59308
0x00000000000b7163 : add byte ptr [rax - 0x77], cl ; jmp 0x49cdfab9
0x00000000000b75d8 : add byte ptr [rax - 0x77], cl ; jmp 0x49cdff2e
0x000000000006e425 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000078953 : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x000000000008643b : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120172 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000121888 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f622b : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000107736 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000012e422 : add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000082cd9 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000263f3 : add byte ptr [rax - 0x77], cl ; ret
0x000000000011bb04 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000a729f : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000048eba : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000105c64 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000070402 : add byte ptr [rax - 0x77], cl ; ret 0x2d75
0x000000000007e315 : add byte ptr [rax - 0x77], cl ; ret 0x2fe9
0x000000000006e944 : add byte ptr [rax - 0x77], cl ; ret 0x3675
0x000000000010a1b2 : add byte ptr [rax - 0x77], cl ; ret 0x3875
0x000000000006ec5c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000046f54 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000e6bf3 : add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x00000000000f36a2 : add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000c5489 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x0000000000033ebf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ea656 : add byte ptr [rax - 0x77], cl ; ret 0x8845
0x000000000005e5dc : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000503cd : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e96f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f798 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4f6f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f262a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000005ba15 : add byte ptr [rax - 0x77], cl ; ret 0x92e8
0x00000000000f9375 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x000000000006038d : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000001006b2 : add byte ptr [rax - 0x77], cl ; ret 0xb9
0x00000000000bf67e : add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x000000000008b970 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000fc8d3 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000f3a3b : add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000bc558 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000004764a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000bd892 : add byte ptr [rax - 0x77], cl ; ret 0xe6e9
0x000000000009295b : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000d1b79 : add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x0000000000086812 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000004881e : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e24e5 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000057411 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000002ac99 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000096cd2 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x000000000004ddde : add byte ptr [rax - 0x77], cl ; test dword ptr [rax - 0x16000006], ebx ; ret
0x000000000012786c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x127884 ; ret
0x0000000000127884 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x12789c ; ret
0x00000000001280cc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1280e4 ; ret
0x00000000001280e4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1280fc ; ret
0x0000000000128114 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x12812c ; ret
0x000000000010c5b7 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000e1ee4 : add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000001a2bef : add byte ptr [rax - 0x79], al ; jmp qword ptr [rcx]
0x00000000001a2c07 : add byte ptr [rax - 0x79], bl ; jmp qword ptr [rcx]
0x00000000001a2c1f : add byte ptr [rax - 0x79], dh ; jmp qword ptr [rcx]
0x00000000000b2c16 : add byte ptr [rax - 0x7b], cl ; inc dword ptr [rbx + rcx*4 + 0x25] ; call qword ptr [rcx]
0x0000000000074f6a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x000000000011d375 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000ddf5f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000009a493 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000012b9e3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000303dc : add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000015e837 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000082bec : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002fb43 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000080be1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004e280 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ba8f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000603fe : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000011637f : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001657b6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1657c7 ; ret
0x0000000000023217 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000802cf : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000011a7a4 : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a130f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000f2ae3 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000268a1 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000113c4a : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000006f994 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000064d14 : add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x00000000000235ce : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e70f5 : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000074e76 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000039097 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000165b2f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fc0fa : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000096fcf : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000029e1a : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b3fff : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000000001376ef : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002921f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000068337 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000007d58c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008be9f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008be2f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042d3f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a72d7 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000025314 : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x0000000000116ef0 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008b252 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001396d3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000117c6f : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000058f7f : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000137713 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000054aa7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000074a3c : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x0000000000097e0f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002bc56 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000004735f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002d23f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000101a9f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000a95b7 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000006774f : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x17 ; ret 0xfff0
0x0000000000095ed8 : add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000000b159c : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000003cc50 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000073ddd : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000030144 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000014ac6b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019e037 : add byte ptr [rax - 0x80], cl ; cld ; jmp qword ptr [rax]
0x0000000000134782 : add byte ptr [rax - 0x9ffffff], al ; ret
0x00000000001ac34c : add byte ptr [rax - 0xb], ch ; jmp qword ptr [rdx]
0x000000000017877c : add byte ptr [rax - 0xe], cl ; call qword ptr [rax]
0x000000000013302a : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000003577d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036d1d : add byte ptr [rax - 1], bh ; ret
0x000000000007ccfe : add byte ptr [rax - 1], dil ; ret
0x00000000001a2507 : add byte ptr [rax - 4], cl ; int1 ; jmp qword ptr [rcx]
0x000000000019d56f : add byte ptr [rax - 8], ah ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d557 : add byte ptr [rax - 8], ch ; out dx, al ; call qword ptr [rax]
0x00000000001aab8b : add byte ptr [rax*8 - 0x2c1fffff], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001aab5b : add byte ptr [rax*8 - 0x2c4fffff], cl ; cmc ; jmp qword ptr [rsi]
0x000000000003cc54 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000010bd69 : add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000c9165 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000a95f1 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000d6c54 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df1c6 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000000dc562 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a4b0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000016605b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000012e75b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000014d44b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f83e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a3883 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000f6bbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070923 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002dce3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000ed3fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000093aab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e1155 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x00000000000df696 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x00000000000600a6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000160381 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000031e9d : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000036a4f : add byte ptr [rax], 0 ; ret
0x00000000001966c5 : add byte ptr [rax], 0 ; test al, 0xa5 ; in eax, dx ; jmp rbx
0x00000000001a8673 : add byte ptr [rax], ah ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018fe5f : add byte ptr [rax], ah ; add edx, ebp ; call qword ptr [rbx]
0x0000000000010adf : add byte ptr [rax], ah ; call qword ptr [rax]
0x00000000001ac72f : add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x000000000002fdc4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001b206f : add byte ptr [rax], ah ; or dh, bh ; call qword ptr [rsi]
0x00000000001abaaf : add byte ptr [rax], ah ; out 0xf5, al ; call qword ptr [rax]
0x000000000000b46f : add byte ptr [rax], ah ; ret
0x000000000001ae6f : add byte ptr [rax], ah ; ret 0x3b
0x00000000001aa9af : add byte ptr [rax], ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001aa946 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001aaa36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a936 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aa8b6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001aa9ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001aa9a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa89e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001aa8e6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001aa98e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000019fc62 : add byte ptr [rax], al ; adc al, 0x16 ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x000000000018ff62 : add byte ptr [rax], al ; adc al, 0x19 ; add byte ptr [rax], al ; pop rax ; add edx, ebp ; call qword ptr [rcx]
0x00000000001893e6 : add byte ptr [rax], al ; adc al, 0x8e ; out dx, al ; jmp rsp
0x00000000001a7662 : add byte ptr [rax], al ; adc al, 0x90 ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e62 : add byte ptr [rax], al ; adc al, 0x98 ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001aa962 : add byte ptr [rax], al ; adc al, 0xc3 ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001ab162 : add byte ptr [rax], al ; adc al, 0xcb ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x0000000000188c0e : add byte ptr [rax], al ; adc al, 0xe2 ; jmp 0x188c18
0x000000000019d462 : add byte ptr [rax], al ; adc al, 0xee ; add byte ptr [rax], al ; sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x000000000019e566 : add byte ptr [rax], al ; adc al, 0xf0 ; jmp rbx
0x000000000019e562 : add byte ptr [rax], al ; adc al, 0xff ; add byte ptr [rax], al ; adc al, 0xf0 ; jmp rbx
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000063e2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; call qword ptr [rcx]
0x00000000000048fa : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; nop ; ret 3
0x00000000000041f2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000000a1da : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret
0x000000000018f6b2 : add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, bh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000001af89a : add byte ptr [rax], al ; adc r8b, byte ptr [rdx] ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000001aa931 : add byte ptr [rax], al ; add ah, ah ; ret 1
0x00000000001aa949 : add byte ptr [rax], al ; add ah, bh ; ret 1
0x000000000019ae49 : add byte ptr [rax], al ; add ah, ch ; ret
0x000000000019a939 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x000000000019a919 : add byte ptr [rax], al ; add ah, cl ; ret 0
0x00000000001aa919 : add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000001aaa21 : add byte ptr [rax], al ; add ah, dl ; ret
0x00000000000be443 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x00000000001b0352 : add byte ptr [rax], al ; add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x0000000000188b26 : add byte ptr [rax], al ; add al, 0x54 ; jmp 0x188b30
0x00000000001a5752 : add byte ptr [rax], al ; add al, 0x71 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a6c52 : add byte ptr [rax], al ; add al, 0x86 ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001a7952 : add byte ptr [rax], al ; add al, 0x93 ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000189516 : add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rsp
0x00000000001aaa52 : add byte ptr [rax], al ; add al, 0xc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x000000000018e506 : add byte ptr [rax], al ; add al, 0xd0 ; std ; jmp rsp
0x00000000001b561f : add byte ptr [rax], al ; add al, 0xfb ; jmp qword ptr [rdx]
0x000000000019ee52 : add byte ptr [rax], al ; add al, 8 ; add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x000000000001b395 : add byte ptr [rax], al ; add al, ah ; ret
0x000000000001b0ad : add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x00000000001788ed : add byte ptr [rax], al ; add al, al ; push rbp ; call rax
0x000000000001b335 : add byte ptr [rax], al ; add al, al ; ret
0x000000000001b04d : add byte ptr [rax], al ; add al, al ; ret 0x3b
0x000000000001b0f5 : add byte ptr [rax], al ; add al, bh ; ret 0x3b
0x000000000001b37d : add byte ptr [rax], al ; add al, bl ; ret
0x000000000001b095 : add byte ptr [rax], al ; add al, bl ; ret 0x3b
0x0000000000104ca0 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000011ff2b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x000000000001b3ad : add byte ptr [rax], al ; add al, ch ; ret
0x000000000001b0c5 : add byte ptr [rax], al ; add al, ch ; ret 0x3b
0x00000000000e1d96 : add byte ptr [rax], al ; add al, ch ; ret 0xf3d6
0x00000000000aec26 : add byte ptr [rax], al ; add al, ch ; ret 0xf80f
0x0000000000081356 : add byte ptr [rax], al ; add al, ch ; ret 0xffdb
0x000000000010bd6a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000000ef56e : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret 0xfff4
0x00000000000e4a9d : add byte ptr [rax], al ; add al, ch ; stosd dword ptr [rdi], eax ; ret 0
0x00000000001172bf : add byte ptr [rax], al ; add al, ch ; test eax, 0x8900006a ; ret 0x8b48
0x000000000011f636 : add byte ptr [rax], al ; add al, ch ; xchg eax, edx ; ret 0
0x000000000001b34d : add byte ptr [rax], al ; add al, cl ; ret
0x000000000001b065 : add byte ptr [rax], al ; add al, cl ; ret 0x3b
0x000000000001b3c5 : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001b0dd : add byte ptr [rax], al ; add al, dh ; ret 0x3b
0x000000000001b365 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000001b07d : add byte ptr [rax], al ; add al, dl ; ret 0x3b
0x000000000016605d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000123bca : add byte ptr [rax], al ; add bh, bh ; loope 0x123b67 ; ret
0x00000000000d1e37 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000036505 : add byte ptr [rax], al ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000c36aa : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000001281db : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a4b23 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000012791c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000368a6 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000046ef2 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000ba234 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000026533 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x00000000000450e9 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000009df9d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009dfad : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002dce5 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000095ca3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d4170 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b5703 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051590 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007d5e3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000010c2e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf97c
0x0000000000077067 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000027409 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000078a6d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000001865db : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000a95f2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x0000000000130aa5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x14c
0x00000000000d1ddd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000021050 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000dbaf7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000dabe1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000009e4ed : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c2548 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000079120 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000135572 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000079a51 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011a1f0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c260d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000002bfcd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a1f40 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e0fc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a55fd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000095dad : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000d6c55 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000df1c7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000001215cd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000046eed : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; jmp 0x46ec3
0x00000000000318fd : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000c04c5 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x00000000001aad55 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019ae45 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019ad25 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x000000000019a89d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001aa945 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001aaa35 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a935 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aa8b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001aa9ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001aa9a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa89d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001aa8e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001aa98d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000000a35b3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ffc4b : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000f12dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000364f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002c0ab : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000bec9d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000c4666 : add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000a35fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a360d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a35ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007dbad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f255c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0x98 ; ret
0x000000000007b784 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000075474 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x754c3 ; jmp 0x75448
0x00000000000f83e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007fff5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x0000000000120564 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x0000000000077ab6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; jmp 0x77a87
0x000000000007c97d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007da3c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000d8b25 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000086439 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120170 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000121886 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f6229 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012e420 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000040006 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a729d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000cf2bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ccbe3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f796 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000005ba13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x92e8
0x00000000000bc556 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000d1b77 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf7e9
0x000000000007a4b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e1ee2 : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x000000000012b9e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000303da : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0ffc1], al ; ret 0
0x000000000002ea9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000802cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a130d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000269cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000006f992 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000000235cc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000043a5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000165b2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fc0f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000b3ffd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x0000000000139213 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002921d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000008be9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008be2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042d3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000013ad91 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000590f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000013923d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000097e0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000004735d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002d23d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000006774d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x17 ; ret 0xfff0
0x000000000014c464 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000003577b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000036d1b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000001b16d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001ae6d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3b
0x00000000001aa944 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001aaa34 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a934 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aa8b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001aa9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001aa9a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001aa89c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001aa8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001aa98c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000001b393 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001b0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x00000000001788eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; push rbp ; call rax
0x000000000001b333 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001b04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x3b
0x000000000001b0f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x3b
0x000000000001b37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000001b093 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x3b
0x000000000001b3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001b0c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x3b
0x000000000001b34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000001b063 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x3b
0x000000000001b3c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001b0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x3b
0x000000000001b363 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000001b07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x3b
0x000000000009dfab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000007128b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000078a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000d1ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000001324ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000a35fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000a360b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000a35eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007c97b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000e266b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cf2bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000df34b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b4f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000005ba11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x92e8
0x000000000002ea9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000802cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000a130b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000269cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000043a5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000165b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000b3ffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000008be9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008be2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000042d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000598bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000001b16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001ae6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3b
0x00000000000d8d81 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000017721c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b8f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000006692 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000184c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000000d052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000185dca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000004052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001ab1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c9
0x000000000000b8e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000007292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016f202 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x000000000016f6f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x000000000001ae23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x0000000000010a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000017721e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x00000000001b8ae2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b8f1e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001b83c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000001b1b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001aeb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x3b
0x000000000001b153 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001ae53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x3b
0x000000000001b183 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001ae83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x3b
0x000000000001b123 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000001ae3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x3b
0x00000000000a0d6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001b19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001ae9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x3b
0x000000000001b13b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000001aad54 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019ae44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019ad24 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000047f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000083f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000006e31b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000489b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000f98bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000a154b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000007e95b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001376cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008723b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000185dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000bd429 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000a2fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000bcb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f3a89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012eb24 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x12ade6
0x000000000011fade : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000016605c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000184c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017122c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001703dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000001b0f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000001b2d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001afd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x00000000000368a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000000d054 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000004ed2a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000016279c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001627ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001627bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001627cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001627dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016271c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016272c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016273c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016274c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016275c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016276c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016277c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016278c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a35ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a360c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a35fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016270c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000001b7ce8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000015a8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000376f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009e4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009ceec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009debc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009dbbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015a8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a91c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e463c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009dedc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009defc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009deec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000c260c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007c8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001215cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012e75c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010c62c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000010be4b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10be1d
0x000000000014d44c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015a92c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012eaf8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009df1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009df2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000120f5a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f83e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007c96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000097bec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000077ab5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; jmp 0x77a88
0x000000000007c97c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000120066 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000015a8cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009decc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009df9c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009dfac : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000014d59c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000bd42a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000001b2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001afbc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x000000000001b214 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000001af14 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x00000000000fc877 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000489ba : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006e31c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ca8a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000185dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001865da : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000001b1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001aefc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x3b
0x0000000000004054 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ed5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000009784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001ab1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c9
0x000000000000b8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x00000000001701fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170994 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000007294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016f204 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x000000000016f6f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x000000000001ae25 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x0000000000010a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000177220 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000009554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b8f20 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000ec84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001b83c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000019a89c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000a0d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000488c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046dec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000093aac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000001b1b5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000001aeb5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x3b
0x000000000001b155 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000001ae55 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x3b
0x000000000001b185 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x000000000001ae85 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x3b
0x000000000001b125 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000001ae3d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x3b
0x00000000000a0d6d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001b19d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001ae9d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x3b
0x000000000001b13d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000001aad56 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019ae46 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019ad26 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000078990 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b82c0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000047f9d : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000012ea64 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x0000000000125256 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x000000000004cdf4 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rsi ; call qword ptr [rdx]
0x00000000000a4077 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x000000000019c1ee : add byte ptr [rax], al ; add byte ptr [rbp - 0x12], ch ; call qword ptr [rsi]
0x00000000000f813c : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000058a9a : add byte ptr [rax], al ; add byte ptr [rbp - 0x4c7af02e], al ; ret 0xffff
0x0000000000095516 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x0000000000083f7d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000d104d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000005dd55 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000a1bec : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000e1156 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x000000000010ad36 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000014cd2d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000037fd0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002c1ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f50f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007a44d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000004f014 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x00000000000a557b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5559
0x00000000000a7dbb : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa7d99
0x00000000000aa46b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaa449
0x00000000001624b8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001300b0 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x00000000000d1c75 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; pop rcx ; ret 0x2e
0x000000000005fa0c : add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fd20 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000000b70e6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000000489bb : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000020560 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006ff42 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc36340b2
0x00000000000df697 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x00000000000ba2f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d0f1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000113cdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000f98bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cc766 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x00000000000430f6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000015a91d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000114555 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000493fc : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f48bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000015a8fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009defd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000073ac2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000005392f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053861 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000000e10fa : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x00000000000a154d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000600a7 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000006b1bb : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000120067 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f67f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a42a6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a48a1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000f5f9f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007878e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x78730
0x000000000007664e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000074d72 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x70ff8
0x000000000011fe5f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f5dd4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000105a2e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x101d28
0x00000000000f5de3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000e463d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000e37bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000e28ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000010563e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000047864 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000059637 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000002105b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000003ffba : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b7ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000621e5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008b591 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000004574f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000953f7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000007e95d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d4228 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001376cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008723d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000185dcd : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008bfc0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008bfe6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000004869c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d0de3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd0d74
0x00000000000fcf87 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000e1ff0 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000008ad17 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000ceaca : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b90d4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b916e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b7a37 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f114f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000a55a1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5556
0x00000000000a7de1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa7d96
0x00000000000aa491 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaa446
0x000000000003c4aa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000889d4 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x0000000000026116 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001369ad : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000000c100b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000a2ce2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000164562 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000190bde : add byte ptr [rax], al ; add byte ptr [rdi - 0x16], bl ; jmp qword ptr [rsi]
0x000000000014d52d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000014d59d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000027971 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000279bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000006d57d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008bedd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a1b45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000481f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010ae8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cbc5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x84e9
0x0000000000047b41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000133224 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc389
0x00000000000d787f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x00000000000b8fcc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000cdabc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e2ea0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000c5aea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c5034 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000160382 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006acf2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret
0x000000000008bdf2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f5dad : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000e4f65 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000000bd42b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000e4617 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000058af9 : add byte ptr [rax], al ; add cl, ch ; push rdi ; ret 0xffff
0x000000000002c2c2 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060b4d : add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x00000000000b7faf : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x000000000010393d : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000081ef4 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000135ab0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x00000000001639d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000072f94 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000eb7dd : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000df95f : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x0000000000098470 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000098479 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000001a2c92 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; call 0x221a1f2d
0x00000000000d0de4 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5014 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000018febe : add byte ptr [rax], al ; add edx, ebp ; call qword ptr [rbx]
0x000000000018fdff : add byte ptr [rax], al ; add edx, ebp ; call qword ptr [rdx]
0x000000000018fd6f : add byte ptr [rax], al ; add edx, ebp ; call qword ptr [rsi]
0x0000000000026f77 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x26f49
0x00000000001b679a : add byte ptr [rax], al ; add qword ptr [rdx], -0x50d5000 ; call rcx
0x00000000000a2fce : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008bca4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000124781 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000128051 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001277a1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000123bc4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000018fed6 : add byte ptr [rax], al ; add rdx, rbp ; call qword ptr [rbx]
0x000000000018ff36 : add byte ptr [rax], al ; add rdx, rbp ; jmp qword ptr [rax]
0x00000000000bcb2e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bcb56 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000003724a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000036c68 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000012d5c4 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e465e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fbb30 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000036a2a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010c5ab : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000ebcf9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000036f36 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000047651 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008ac1a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000237b7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036422 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a1272 : add byte ptr [rax], al ; and al, 0x2c ; add dword ptr [rax], eax ; cmp dl, dl ; int1 ; jmp qword ptr [rbx]
0x00000000001a2072 : add byte ptr [rax], al ; and al, 0x3a ; add dword ptr [rax], eax ; pop rax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001a2d72 : add byte ptr [rax], al ; and al, 0x47 ; add dword ptr [rax], eax ; clc ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001a8672 : add byte ptr [rax], al ; and al, 0xa0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001aba72 : add byte ptr [rax], al ; and al, 0xd4 ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001abc72 : add byte ptr [rax], al ; and al, 0xd6 ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000019d072 : add byte ptr [rax], al ; and al, 0xea ; add byte ptr [rax], al ; xlatb ; out dx, al ; jmp rdx
0x000000000018f0be : add byte ptr [rax], al ; and byte ptr [rdi - 0x17], ah ; call qword ptr [rax]
0x00000000001996ce : add byte ptr [rax], al ; and dh, bh ; in eax, dx ; jmp rax
0x00000000000fa5df : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000003009b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000019bc0e : add byte ptr [rax], al ; and ebp, esi ; jmp rcx
0x000000000008bede : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000088d27 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008a814 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000019d4f6 : add byte ptr [rax], al ; call 0x1119cebf
0x000000000012eb26 : add byte ptr [rax], al ; call 0x12ade4
0x000000000011f637 : add byte ptr [rax], al ; call 0x12b8d4
0x00000000000b142e : add byte ptr [rax], al ; call 0x136929
0x0000000000192596 : add byte ptr [rax], al ; call 0x1719104e
0x00000000000e3129 : add byte ptr [rax], al ; call 0x1f404
0x0000000000063912 : add byte ptr [rax], al ; call 0x2fbf4
0x00000000000ef56f : add byte ptr [rax], al ; call 0x3b824
0x00000000000eef68 : add byte ptr [rax], al ; call 0xeb1e4
0x00000000000e4a9e : add byte ptr [rax], al ; call 0xf0d54
0x00000000001949e6 : add byte ptr [rax], al ; call 0xffffffffd3193692
0x000000000011fae0 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000016605e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000016e6c2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021ee5 : add byte ptr [rax], al ; call rax
0x00000000000f5db3 : add byte ptr [rax], al ; call rbx
0x00000000000184c6 : add byte ptr [rax], al ; call rcx
0x000000000017122e : add byte ptr [rax], al ; call rdi
0x0000000000031daf : add byte ptr [rax], al ; call rdx
0x00000000001703de : add byte ptr [rax], al ; call rsp
0x00000000001a7fb2 : add byte ptr [rax], al ; cdq ; add dword ptr [rax], eax ; js 0x1a7fef ; cmc ; jmp qword ptr [rcx]
0x000000000019e22f : add byte ptr [rax], al ; cdq ; out dx, eax ; jmp rdi
0x000000000019c3f6 : add byte ptr [rax], al ; clc ; js 0x19c3ee ; jmp qword ptr [rcx]
0x0000000000192b16 : add byte ptr [rax], al ; clc ; or al, 0xeb ; jmp rax
0x000000000018f6b6 : add byte ptr [rax], al ; clc ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000001b0f6 : add byte ptr [rax], al ; clc ; ret 0x3b
0x0000000000195346 : add byte ptr [rax], al ; clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001a504a : add byte ptr [rax], al ; cld ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000001a245f : add byte ptr [rax], al ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001aa94a : add byte ptr [rax], al ; cld ; ret 1
0x00000000001a6d4a : add byte ptr [rax], al ; cld ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a7e4a : add byte ptr [rax], al ; cld ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a7e85 ; cmc ; jmp qword ptr [rcx]
0x000000000011491f : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000019038a : add byte ptr [rax], al ; cmp al, 0x1d ; add byte ptr [rax], al ; sbb ebp, edx ; call qword ptr [rsi]
0x00000000001a648a : add byte ptr [rax], al ; cmp al, 0x7e ; add dword ptr [rax], eax ; jo 0x1a6459 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c8a : add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a868a : add byte ptr [rax], al ; cmp al, 0xa0 ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019a88a : add byte ptr [rax], al ; cmp al, 0xc2 ; add byte ptr [rax], al ; shl byte ptr [rdi], 0xee ; call qword ptr [rsi]
0x00000000001aab8a : add byte ptr [rax], al ; cmp al, 0xc5 ; add dword ptr [rax], eax ; loopne 0x1aab6e ; cmc ; jmp qword ptr [rsi]
0x00000000001abc8a : add byte ptr [rax], al ; cmp al, 0xd6 ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x000000000019c18a : add byte ptr [rax], al ; cmp al, 0xdb ; add byte ptr [rax], al ; push 0xee ; call qword ptr [rdi]
0x000000000015e836 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000019a906 : add byte ptr [rax], al ; cmp byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000001982a6 : add byte ptr [rax], al ; cmp dl, dl ; in eax, dx ; call rcx
0x00000000000a557c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa5598 ; mov edx, eax ; jmp 0xa5558
0x00000000000a7dbc : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa7dd8 ; mov edx, eax ; jmp 0xa7d98
0x00000000000aa46c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xaa488 ; mov edx, eax ; jmp 0xaa448
0x0000000000076ab7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x76ac8 ; pop rbx ; ret
0x00000000000c12b0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xc12c3 ; ret
0x00000000000ba0ae : add byte ptr [rax], al ; cmp esi, 1 ; je 0xba0c9 ; xor eax, eax ; ret
0x00000000000c2688 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xc26c8 ; ret
0x00000000001a7e92 : add byte ptr [rax], al ; cwde ; add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000194ad6 : add byte ptr [rax], al ; cwde ; cmc ; in al, dx ; call qword ptr [rax]
0x000000000001b2d6 : add byte ptr [rax], al ; cwde ; ret
0x000000000001afd6 : add byte ptr [rax], al ; cwde ; ret 0x3b
0x000000000019d616 : add byte ptr [rax], al ; cwde ; sbb ch, bh ; call qword ptr [rax]
0x00000000001ac47f : add byte ptr [rax], al ; div ch ; call qword ptr [rcx]
0x00000000001abe92 : add byte ptr [rax], al ; fadd dword ptr [rcx] ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x000000000019282a : add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], dl ; mov dh, 0xea ; call qword ptr [rdx]
0x00000000001aab2a : add byte ptr [rax], al ; fadd st(4), st(0) ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001a802a : add byte ptr [rax], al ; fcomp qword ptr [rcx + 0x2cf00001] ; cmc ; jmp qword ptr [rcx]
0x000000000019d5b6 : add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x00000000001995d6 : add byte ptr [rax], al ; fdivr st(1) ; in eax, dx ; call qword ptr [rax]
0x00000000001b6dea : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000368a7 : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000369de : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003698e : add byte ptr [rax], al ; fstp st(1) ; ret
0x0000000000190dd6 : add byte ptr [rax], al ; fsub dword ptr [rcx - 0x16] ; jmp qword ptr [rcx]
0x00000000001935f6 : add byte ptr [rax], al ; fsub dword ptr [rdx - 0x15] ; jmp qword ptr [rbx]
0x00000000001a4f2a : add byte ptr [rax], al ; fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x00000000001ac72a : add byte ptr [rax], al ; fsubr st(0), st(0) ; add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ac82a : add byte ptr [rax], al ; fsubr st(1), st(0) ; add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x00000000001a6742 : add byte ptr [rax], al ; hlt ; add byte ptr [rcx], 0 ; call 0x231a5c1e
0x00000000001a3342 : add byte ptr [rax], al ; hlt ; add qword ptr [rax], r8 ; call 0x131a2635
0x00000000001a2442 : add byte ptr [rax], al ; hlt ; cmp eax, 0xfbe80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000195342 : add byte ptr [rax], al ; hlt ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001a8642 : add byte ptr [rax], al ; hlt ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ac742 : add byte ptr [rax], al ; hlt ; loopne 0x1ac751 ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5142 : add byte ptr [rax], al ; hlt ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019e442 : add byte ptr [rax], al ; hlt ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000188726 : add byte ptr [rax], al ; imul edx ; jmp rsp
0x00000000001aac32 : add byte ptr [rax], al ; in al, -0x3b ; add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa932 : add byte ptr [rax], al ; in al, -0x3e ; add dword ptr [rax], eax ; test al, 0xd2 ; cmc ; jmp qword ptr [rsi]
0x00000000001a8132 : add byte ptr [rax], al ; in al, -0x66 ; add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018e732 : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; pop rax ; cmp cl, ch ; call qword ptr [rsi]
0x000000000018ff32 : add byte ptr [rax], al ; in al, 0x18 ; add byte ptr [rax], al ; add rdx, rbp ; jmp qword ptr [rax]
0x00000000001a5032 : add byte ptr [rax], al ; in al, 0x69 ; add dword ptr [rax], eax ; pop rax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a5532 : add byte ptr [rax], al ; in al, 0x6e ; add dword ptr [rax], eax ; clc ; jae 0x1a5538 ; jmp qword ptr [rcx]
0x0000000000192f3a : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x000000000019a13a : add byte ptr [rax], al ; in al, dx ; mov edx, 0x10e00000 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019ae4a : add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a93a : add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001aff3a : add byte ptr [rax], al ; in al, dx ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, 0xf6 ; jmp qword ptr [rcx]
0x00000000001a823a : add byte ptr [rax], al ; in al, dx ; wait ; add dword ptr [rax], eax ; loopne 0x1a827a ; cmc ; jmp qword ptr [rcx]
0x00000000001885b6 : add byte ptr [rax], al ; in eax, -0x16 ; call rsp
0x00000000001a67ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000001a24ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a53af : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b52ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x00000000001a5cba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jbe 0x1a5cc9 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x00000000001b41ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b41c3 ; call qword ptr [rdx]
0x00000000001aa8ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x00000000001a7bba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7cba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x000000000019c1ef : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x0000000000176fbe : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000001a041f : add byte ptr [rax], al ; int1 ; call rsi
0x00000000001b5db2 : add byte ptr [rax], al ; ja 0x1b5dc2 ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000000e4f66 : add byte ptr [rax], al ; jbe 0xe4f75 ; ret
0x0000000000125257 : add byte ptr [rax], al ; je 0x125268 ; add rsp, 0x48 ; ret
0x000000000018883e : add byte ptr [rax], al ; je 0x188858 ; jmp 0x188848
0x0000000000188896 : add byte ptr [rax], al ; je 0x1888be ; jmp 0x1888a0
0x0000000000189626 : add byte ptr [rax], al ; je 0x1895df ; out dx, al ; call rsp
0x00000000001966c2 : add byte ptr [rax], al ; je 0x19664f ; add byte ptr [rax], al ; test al, 0xa5 ; in eax, dx ; jmp rbx
0x000000000019edc2 : add byte ptr [rax], al ; je 0x19edd6 ; add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x00000000001a25c2 : add byte ptr [rax], al ; je 0x1a260e ; add dword ptr [rax], eax ; pop rax ; add dh, dl ; call rdi
0x00000000001a46c2 : add byte ptr [rax], al ; je 0x1a472f ; add dword ptr [rax], eax ; sbb bh, dh ; jmp qword ptr [rax]
0x00000000001a56c2 : add byte ptr [rax], al ; je 0x1a573f ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a6dc2 : add byte ptr [rax], al ; je 0x1a6d56 ; add dword ptr [rax], eax ; js 0x1a6db0 ; hlt ; jmp qword ptr [rcx]
0x00000000001a76c2 : add byte ptr [rax], al ; je 0x1a765f ; add dword ptr [rax], eax ; js 0x1a76de ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ec2 : add byte ptr [rax], al ; je 0x1a7e67 ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a87c2 : add byte ptr [rax], al ; je 0x1a8770 ; add dword ptr [rax], eax ; cmc ; jmp rdi
0x00000000001aa9c2 : add byte ptr [rax], al ; je 0x1aa992 ; add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000848aa : add byte ptr [rax], al ; je 0x848b4 ; ret
0x0000000000086506 : add byte ptr [rax], al ; je 0x86514 ; ret
0x0000000000093ff2 : add byte ptr [rax], al ; je 0x94008 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a35b4 : add byte ptr [rax], al ; je 0xa3628 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000e4618 : add byte ptr [rax], al ; je 0xe4625 ; ret
0x00000000000ffc4c : add byte ptr [rax], al ; je 0xffc60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164563 : add byte ptr [rax], al ; jg 0x164576 ; neg eax ; ret
0x00000000000a2ce3 : add byte ptr [rax], al ; jg 0xa2cef ; neg eax ; ret
0x00000000001882f6 : add byte ptr [rax], al ; jge 0x1882ea ; jmp rsp
0x0000000000191596 : add byte ptr [rax], al ; jge 0x19158a ; jmp rbx
0x00000000001a04ef : add byte ptr [rax], al ; jge 0x1a04e8 ; call qword ptr [rax]
0x00000000001624b9 : add byte ptr [rax], al ; jl 0x1624c6 ; neg eax ; ret
0x00000000001930ca : add byte ptr [rax], al ; jl 0x193121 ; add byte ptr [rax], al ; mov al, 0x41 ; jmp 0x1930dc
0x00000000001959ea : add byte ptr [rax], al ; jl 0x195a0c ; add byte ptr [rax], al ; jo 0x195990 ; in eax, dx ; jmp rsi
0x00000000001996ca : add byte ptr [rax], al ; jl 0x199687 ; add byte ptr [rax], al ; and dh, bh ; in eax, dx ; jmp rax
0x000000000019bdca : add byte ptr [rax], al ; jl 0x19bdae ; add byte ptr [rax], al ; xor byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x00000000001a0bca : add byte ptr [rax], al ; jl 0x1a0bfc ; add dword ptr [rax], eax ; jo 0x1a0ba2 ; int1 ; call qword ptr [rsi]
0x00000000001a23ca : add byte ptr [rax], al ; jl 0x1a2414 ; add dword ptr [rax], eax ; sar dl, 1 ; int1 ; jmp qword ptr [rcx]
0x00000000001a5eca : add byte ptr [rax], al ; jl 0x1a5f4f ; add dword ptr [rax], eax ; mov al, 0xae ; hlt ; jmp qword ptr [rcx]
0x00000000001a7fca : add byte ptr [rax], al ; jl 0x1a7f70 ; add dword ptr [rax], eax ; nop ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a85ca : add byte ptr [rax], al ; jl 0x1a8576 ; add dword ptr [rax], eax ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001aaaca : add byte ptr [rax], al ; jl 0x1aaa9b ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001ac6ca : add byte ptr [rax], al ; jl 0x1ac6b7 ; add dword ptr [rax], eax ; mov al, 0xf8 ; cmc ; call qword ptr [rax]
0x0000000000188c46 : add byte ptr [rax], al ; jle 0x188c36 ; jmp 0x188c50
0x0000000000026534 : add byte ptr [rax], al ; jmp 0x264fd
0x0000000000046ef3 : add byte ptr [rax], al ; jmp 0x46ebd
0x000000000004e042 : add byte ptr [rax], al ; jmp 0x4a267
0x0000000000058afa : add byte ptr [rax], al ; jmp 0x54d5c
0x000000000006a073 : add byte ptr [rax], al ; jmp 0x66300
0x000000000007aaf2 : add byte ptr [rax], al ; jmp 0x7ab0a
0x0000000000082396 : add byte ptr [rax], al ; jmp 0x823af
0x0000000000082406 : add byte ptr [rax], al ; jmp 0x8241d
0x00000000000975ac : add byte ptr [rax], al ; jmp 0x97576
0x00000000000ba235 : add byte ptr [rax], al ; jmp 0xba1fe
0x00000000000c4ea9 : add byte ptr [rax], al ; jmp 0xc4248
0x00000000000d48bd : add byte ptr [rax], al ; jmp 0xd452e
0x00000000001a3eff : add byte ptr [rax], al ; jmp qword ptr [rbx]
0x000000000000d056 : add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000036be5 : add byte ptr [rax], al ; jmp rax
0x0000000000123bcb : add byte ptr [rax], al ; jmp rcx
0x000000000010fc16 : add byte ptr [rax], al ; jne 0x10fbdf ; jmp 0x10fbd7
0x000000000012ea65 : add byte ptr [rax], al ; jne 0x12ea74 ; ret
0x000000000012eaa5 : add byte ptr [rax], al ; jne 0x12eab4 ; ret
0x00000000001959ee : add byte ptr [rax], al ; jo 0x19598c ; in eax, dx ; jmp rsi
0x0000000000188fde : add byte ptr [rax], al ; jp 0x18904a ; in eax, dx ; call rsp
0x000000000019a2f6 : add byte ptr [rax], al ; js 0x19a316 ; out dx, al ; call qword ptr [rdi]
0x000000000019a7a6 : add byte ptr [rax], al ; js 0x19a7d1 ; out dx, al ; jmp qword ptr [rax]
0x00000000000a4078 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x000000000016279e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001627ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001627be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001627ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001627de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001626fd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016271e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016272e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016273e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016274e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016275e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016276e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001626aa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016277e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016278e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a348b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a35ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a360e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a35fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016270e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000021fae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15a5ec] ; ret
0x0000000000021fbe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15c5c3] ; ret
0x000000000007e569 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x3401ee] ; ret
0x00000000000c7782 : add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7754
0x000000000011220e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2b0d69] ; call rax
0x00000000000463e2 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x195] ; call rax
0x000000000006f8b7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007c187 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007c587 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007ac6f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006fc13 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007aed7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x00000000001931fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; push rax ; push rdi ; jmp 0x19320c
0x00000000001a2efa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdx]
0x00000000001a0bfa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, 0xc7800001 ; int1 ; call qword ptr [rbx]
0x00000000001952fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x92 ; in eax, dx ; call qword ptr [rax]
0x00000000001a85fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001ac7fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; loope 0x1ac809 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x000000000019ccfa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out 0, al ; add al, dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a3efa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rsi - 0xd], cl ; jmp qword ptr [rbx]
0x00000000001a50fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push 1 ; add al, ah ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x000000000019a13e : add byte ptr [rax], al ; loopne 0x19a157 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019be9e : add byte ptr [rax], al ; loopne 0x19bee4 ; out dx, al ; call rsp
0x00000000001a2502 : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001a2c02 : add byte ptr [rax], al ; mov ah, 0x45 ; add dword ptr [rax], eax ; pop rax ; xchg edx, esi ; jmp qword ptr [rcx]
0x0000000000188ef6 : add byte ptr [rax], al ; mov ah, 0x53 ; in eax, dx ; jmp rsp
0x00000000001a7d02 : add byte ptr [rax], al ; mov ah, 0x96 ; add dword ptr [rax], eax ; call 0x111a723e
0x00000000001a8102 : add byte ptr [rax], al ; mov ah, 0x9a ; add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019a902 : add byte ptr [rax], al ; mov ah, 0xc2 ; add byte ptr [rax], al ; cmp byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000001aa902 : add byte ptr [rax], al ; mov ah, 0xc2 ; add dword ptr [rax], eax ; js 0x1aa8e5 ; cmc ; jmp qword ptr [rsi]
0x000000000019ca02 : add byte ptr [rax], al ; mov ah, 0xe3 ; add byte ptr [rax], al ; xchg rax, rbp ; out dx, al ; call qword ptr [rdx]
0x000000000019e502 : add byte ptr [rax], al ; mov ah, 0xfe ; add byte ptr [rax], al ; mov dh, ah ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001b7cea : add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x00000000001930ce : add byte ptr [rax], al ; mov al, 0x41 ; jmp 0x1930d8
0x00000000001930cd : add byte ptr [rax], al ; mov al, 0x41 ; jmp 0x1930d9
0x00000000001890e6 : add byte ptr [rax], al ; mov al, 0x60 ; out dx, al ; call rsp
0x000000000019df0e : add byte ptr [rax], al ; mov al, 0x8c ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001952fe : add byte ptr [rax], al ; mov al, 0x92 ; in eax, dx ; call qword ptr [rax]
0x000000000015cc1e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000001588ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000015a8be : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000018ef96 : add byte ptr [rax], al ; mov byte ptr [rdi - 3], bl ; jmp qword ptr [rdx]
0x000000000019e416 : add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x000000000009697e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000376f6 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009e4ee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009ceee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009debe : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000190a26 : add byte ptr [rax], al ; mov byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x000000000011a286 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000017729e : add byte ptr [rax], al ; mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x000000000019e506 : add byte ptr [rax], al ; mov dh, ah ; out dx, eax ; jmp qword ptr [rbx]
0x000000000009dbbe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000020bee : add byte ptr [rax], al ; mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x000000000015a8fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a91e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a90e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015a8ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e463e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009dede : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000969be : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009defe : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009df0e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009deee : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000054365 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000039d94 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000120efe : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000120f3e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000120f2e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e4e84 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fa7f6 : add byte ptr [rax], al ; mov dword ptr fs:[rsi], 0x16 ; ret
0x000000000009cefe : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000c26be : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000eb4ce : add byte ptr [rax], al ; mov eax, 0x5f ; syscall ; ret
0x00000000000c1e5e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000c1e7e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000c1e6e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000c1e8e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000c208e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000c2549 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000fa8ee : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000c260e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000133029 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003577c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036d1c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bfce : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001215ce : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000046eee : add byte ptr [rax], al ; mov eax, 3 ; jmp 0x46ec2
0x00000000001abeda : add byte ptr [rax], al ; mov eax, ds ; add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x000000000016000e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c69e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000120e6c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000012e75e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e462e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000072fee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000754be : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000037c5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38642a] ; ret
0x00000000000f48c0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085eaa : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010c62e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000022c3a : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010402e : add byte ptr [rax], al ; mov eax, edi ; sub eax, esi ; ret
0x0000000000100243 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000493fd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005df19 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005e25e : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001095b0 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000c1e48 : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000001aa9da : add byte ptr [rax], al ; mov ebx, es ; add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000009cf2e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001ab7da : add byte ptr [rax], al ; mov ecx, ss ; add dword ptr [rax], eax ; jo 0x1ab7ce ; cmc ; call qword ptr [rax]
0x000000000010be4d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10be1b
0x000000000014cd2e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009cf1e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070b5c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x70b1d
0x00000000000715c7 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7158b
0x0000000000071bac : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71b74
0x0000000000071d18 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71cd6
0x0000000000072007 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71fcb
0x000000000007878f : add byte ptr [rax], al ; mov edx, r8d ; jmp 0x7872f
0x00000000000f5dae : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000019bc0a : add byte ptr [rax], al ; mov esp, 0x400000d5 ; and ebp, esi ; jmp rcx
0x00000000001a540a : add byte ptr [rax], al ; mov esp, 0x6000016d ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000019780a : add byte ptr [rax], al ; mov esp, 0x80000091 ; mov bh, 0xed ; jmp qword ptr [rdx]
0x00000000001a1f0a : add byte ptr [rax], al ; mov esp, 0x80000138 ; in eax, -0xf ; jmp rsi
0x00000000001aaa0a : add byte ptr [rax], al ; mov esp, 0x800001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000019df0a : add byte ptr [rax], al ; mov esp, 0xb00000f8 ; mov edi, gs ; jmp qword ptr [rdx]
0x000000000019e30a : add byte ptr [rax], al ; mov esp, 0xc00000fc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001a770a : add byte ptr [rax], al ; mov esp, 0xc0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001aba0a : add byte ptr [rax], al ; mov esp, 0xf00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x0000000000107735 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000015a93e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a95e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a96e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a97e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a98e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a99e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a9ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a94e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015a92e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000012e421 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000091f66 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000012eafa : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009df1e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009df3e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009df5e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009df6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009df7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009df8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009df4e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009df2e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000071ddc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012786b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000120eac : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d383 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e455c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000120e7c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007d608 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000010c5b6 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000120565 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000003014a : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012ad3f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000ba22f : add byte ptr [rax], al ; mov r11d, 1 ; jmp 0xba204
0x0000000000036c84 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000a2fee : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000a2ffe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000a300e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000a301e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000a302e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000a303e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000a304e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000076ad0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b785 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f83e6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000048850 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bd32e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000070c5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c96e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013561f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a268] ; call qword ptr [rax]
0x0000000000133b5f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28bd28] ; call qword ptr [rax]
0x000000000007c94e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x342849] ; ret
0x000000000002375e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a04e1] ; ret
0x000000000002374e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a0501] ; ret
0x00000000000f255d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x68] ; ret
0x0000000000114d16 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079e46 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005d52d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003cb18 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003570c : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000035716 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000010c0be : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000077ab7 : add byte ptr [rax], al ; mov rax, rdi ; jmp 0x77a86
0x000000000007c97e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000133c86 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000082cd8 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ecb3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000a48a2 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000075475 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x75447
0x00000000000236e7 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f5fa0 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000120068 : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000f67f6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000105a2f : add byte ptr [rax], al ; mov rdi, r14 ; call 0x101d27
0x00000000000f5de4 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000074d73 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x70ff7
0x000000000011fe60 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f5dd5 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000129714 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120171 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000121887 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000f622a : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006d82d : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006ceb2 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000858c3 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000012d05e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009cf5e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000085620 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000a42a7 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000007664f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000110f87 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000065b68 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3583ef] ; call rax
0x0000000000064270 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x359ce7] ; call rax
0x000000000005edf4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35f163] ; call rax
0x000000000005608a : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367ecd] ; call rax
0x000000000004f080 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36eed7] ; call rax
0x0000000000049f3c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37401b] ; call rax
0x0000000000085410 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000851a2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008643a : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001a7eda : add byte ptr [rax], al ; mov word ptr [rax + 0x2b700001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000001a53da : add byte ptr [rax], al ; mov word ptr [rbp + 1], gs ; add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000015a8de : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a8ce : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001a6dda : add byte ptr [rax], al ; mov word ptr [rdi - 0x226fffff], es ; hlt ; jmp qword ptr [rcx]
0x000000000009dece : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000096a3e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009699e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003d3cd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d414 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009df9e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009dfae : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001935f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; fsub dword ptr [rdx - 0x15] ; jmp qword ptr [rbx]
0x00000000001a7ef2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019c3f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add al, bh ; js 0x19c3f2 ; jmp qword ptr [rcx]
0x00000000001a53f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x0000000000188346 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jle 0x18833a ; call rsp
0x000000000019a2f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov esp, 0x17780000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a76f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001893fe : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; nop ; out dx, al ; jmp rsp
0x000000000019d4f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; call 0x1119cec3
0x000000000018905e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab7f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ab9f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x000000000006d176 : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000014cebe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000014d59e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014d52e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000192f3e : add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x00000000000bd42c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000010c63d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000001b2be : add byte ptr [rax], al ; nop ; ret
0x000000000001afbe : add byte ptr [rax], al ; nop ; ret 0x3b
0x000000000019baae : add byte ptr [rax], al ; nop ; sbb dh, ch ; call qword ptr [rbx]
0x000000000019059e : add byte ptr [rax], al ; nop ; xor ebp, edx ; call qword ptr [rdx]
0x00000000000fff19 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000019035a : add byte ptr [rax], al ; or al, 0x1d ; add byte ptr [rax], al ; push rax ; sbb ebp, edx ; call qword ptr [rax]
0x00000000001a245a : add byte ptr [rax], al ; or al, 0x3e ; add dword ptr [rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a495a : add byte ptr [rax], al ; or al, 0x63 ; add dword ptr [rax], eax ; mov al, 0xfc ; call qword ptr [rsi]
0x00000000001a605a : add byte ptr [rax], al ; or al, 0x7a ; add dword ptr [rax], eax ; mov al, 0xb2 ; hlt ; call qword ptr [rsi]
0x00000000001ac47a : add byte ptr [rax], al ; or al, 0x80 ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000001a725a : add byte ptr [rax], al ; or al, 0x8c ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x00000000001a865a : add byte ptr [rax], al ; or al, 0xa0 ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001aab5a : add byte ptr [rax], al ; or al, 0xc5 ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000000f0a06 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x000000000007a71e : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x7a6ed
0x0000000000036f79 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x000000000018937e : add byte ptr [rax], al ; out -0x77, eax ; out dx, al ; jmp rsp
0x00000000001abc8f : add byte ptr [rax], al ; out -0xb, eax ; call qword ptr [rax]
0x0000000000189517 : add byte ptr [rax], al ; out dx, al ; jmp rsp
0x000000000019d5b2 : add byte ptr [rax], al ; out dx, eax ; add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x000000000019d6e6 : add byte ptr [rax], al ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001890ae : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; pop rsp ; out dx, al ; jmp rsp
0x0000000000073ac3 : add byte ptr [rax], al ; pop r12 ; ret
0x0000000000053930 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053862 : add byte ptr [rax], al ; pop r14 ; ret
0x000000000018ff66 : add byte ptr [rax], al ; pop rax ; add edx, ebp ; call qword ptr [rcx]
0x000000000018e736 : add byte ptr [rax], al ; pop rax ; cmp cl, ch ; call qword ptr [rsi]
0x00000000000fa477 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x000000000001b216 : add byte ptr [rax], al ; pop rax ; ret
0x000000000001af16 : add byte ptr [rax], al ; pop rax ; ret 0x3b
0x00000000001b4392 : add byte ptr [rax], al ; pop rbp ; add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x0000000000187f8e : add byte ptr [rax], al ; pop rbp ; js 0x187f81 ; jmp rsp
0x00000000000a18da : add byte ptr [rax], al ; pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000fc827 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a1bed : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000489bc : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006ff43 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000006f55f : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010ad37 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000070735 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f08dd : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000001fef1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002199a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f510 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007a44e : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002ca8c : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000185dce : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a7eaa : add byte ptr [rax], al ; pop rsp ; cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000188f3e : add byte ptr [rax], al ; pop rsp ; in eax, dx ; push rsp ; ret 0
0x000000000019adba : add byte ptr [rax], al ; pop rsp ; ret
0x000000000019c18e : add byte ptr [rax], al ; push 0xee ; call qword ptr [rdi]
0x000000000018feee : add byte ptr [rax], al ; push rax ; add edx, ebp ; call qword ptr [rbx]
0x000000000018ff4e : add byte ptr [rax], al ; push rax ; add edx, ebp ; call qword ptr [rcx]
0x000000000018e77e : add byte ptr [rax], al ; push rax ; cmp cl, ch ; call qword ptr [rax]
0x00000000001865dc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001931fe : add byte ptr [rax], al ; push rax ; push rdi ; jmp 0x193208
0x000000000001b1fe : add byte ptr [rax], al ; push rax ; ret
0x000000000001aefe : add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000019035e : add byte ptr [rax], al ; push rax ; sbb ebp, edx ; call qword ptr [rax]
0x000000000012eb0e : add byte ptr [rax], al ; push rbx ; call 0x12adb5
0x00000000001af7a2 : add byte ptr [rax], al ; push rsp ; adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x00000000001a67a2 : add byte ptr [rax], al ; push rsp ; add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x00000000001a1fa2 : add byte ptr [rax], al ; push rsp ; cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x16], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001a83a2 : add byte ptr [rax], al ; push rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001982a2 : add byte ptr [rax], al ; push rsp ; pushfq ; add byte ptr [rax], al ; cmp dl, dl ; in eax, dx ; call rcx
0x000000000019a8a2 : add byte ptr [rax], al ; push rsp ; ret 0
0x000000000018975e : add byte ptr [rax], al ; push rsp ; ret 0xffee
0x00000000001aa8a2 : add byte ptr [rax], al ; push rsp ; ret 1
0x000000000019a7a2 : add byte ptr [rax], al ; push rsp ; rol dword ptr [rax], 0 ; js 0x19a7d5 ; out dx, al ; jmp qword ptr [rax]
0x00000000001abca2 : add byte ptr [rax], al ; push rsp ; salc ; add dword ptr [rax], eax ; clc ; out 0xf5, al ; call qword ptr [rax]
0x000000000018fea2 : add byte ptr [rax], al ; push rsp ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; add edx, ebp ; call qword ptr [rdx]
0x00000000001a7ba2 : add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ca2 : add byte ptr [rax], al ; push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a2bea : add byte ptr [rax], al ; pushfq ; add dword ptr [r8], r8d ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a82b2 : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a24ea : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; xor ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000019c1ea : add byte ptr [rax], al ; pushfq ; fild dword ptr [rax] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001b51ea : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rdx], 0 ; jo 0x1b5202 ; sti ; jmp qword ptr [rdx]
0x00000000001b4fea : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x00000000001aa8ea : add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001788ee : add byte ptr [rax], al ; rcl byte ptr [rbp - 0xe], 0xff ; rcl byte ptr [rbp - 0xe], 1 ; jmp rax
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000000ed5e : add byte ptr [rax], al ; ret 0
0x0000000000009786 : add byte ptr [rax], al ; ret 0x10
0x000000000016e7c6 : add byte ptr [rax], al ; ret 0x12
0x000000000000a30e : add byte ptr [rax], al ; ret 0x16
0x000000000001ab1e : add byte ptr [rax], al ; ret 0x17c9
0x000000000000b8e6 : add byte ptr [rax], al ; ret 0x1a
0x00000000001701fe : add byte ptr [rax], al ; ret 0x1d4
0x0000000000170996 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000007296 : add byte ptr [rax], al ; ret 0x21
0x000000000000e86e : add byte ptr [rax], al ; ret 0x23
0x000000000016f206 : add byte ptr [rax], al ; ret 0x24
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000005b56 : add byte ptr [rax], al ; ret 0x2f
0x000000000016f6f6 : add byte ptr [rax], al ; ret 0x33
0x0000000000007236 : add byte ptr [rax], al ; ret 0x3a
0x000000000001ae27 : add byte ptr [rax], al ; ret 0x3b
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x0000000000010a76 : add byte ptr [rax], al ; ret 0x51
0x000000000016dfc6 : add byte ptr [rax], al ; ret 0xc
0x000000000016e3c6 : add byte ptr [rax], al ; ret 0xf
0x0000000000177222 : add byte ptr [rax], al ; ret 0xfffd
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x000000000000ec86 : add byte ptr [rax], al ; ret 3
0x0000000000171bc2 : add byte ptr [rax], al ; ret 4
0x000000000016d7ee : add byte ptr [rax], al ; ret 5
0x0000000000171fc2 : add byte ptr [rax], al ; ret 6
0x00000000000018ea : add byte ptr [rax], al ; ret 7
0x00000000001723c2 : add byte ptr [rax], al ; ret 8
0x000000000016dbc6 : add byte ptr [rax], al ; ret 9
0x0000000000171bbe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001b713e : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x000000000019a89e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001a046a : add byte ptr [rax], al ; sbb al, 0x1e ; add dword ptr [rax], eax ; rol byte ptr [rsi - 0xf], 1 ; call qword ptr [rdx]
0x00000000001a266a : add byte ptr [rax], al ; sbb al, 0x40 ; add dword ptr [rax], eax ; loopne 0x1a267f ; jmp rdx
0x00000000001a3a6a : add byte ptr [rax], al ; sbb al, 0x54 ; add dword ptr [rax], eax ; loopne 0x1a3aa6 ; jmp rdx
0x00000000001ab68a : add byte ptr [rax], al ; sbb al, 0x72 ; add dword ptr [rax], eax ; push rax ; loope 0x1ab691 ; call qword ptr [rcx]
0x00000000001a6e6a : add byte ptr [rax], al ; sbb al, 0x88 ; add dword ptr [rax], eax ; rcr ch, 1 ; hlt ; call rbx
0x00000000001a826a : add byte ptr [rax], al ; sbb al, 0x9c ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001aaa6a : add byte ptr [rax], al ; sbb al, 0xc4 ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x000000000018885e : add byte ptr [rax], al ; sbb bl, ch ; call rsp
0x000000000003744e : add byte ptr [rax], al ; sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x00000000001a0392 : add byte ptr [rax], al ; sbb eax, 0x40080001 ; int1 ; jmp qword ptr [rcx]
0x000000000019038e : add byte ptr [rax], al ; sbb ebp, edx ; call qword ptr [rsi]
0x000000000019a88e : add byte ptr [rax], al ; shl byte ptr [rdi], 0xee ; call qword ptr [rsi]
0x00000000001935de : add byte ptr [rax], al ; shl byte ptr [rdx - 0x15], 1 ; call qword ptr [rdi]
0x00000000001ac82f : add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001a637a : add byte ptr [rax], al ; sub al, 0x7d ; add dword ptr [rax], eax ; jo 0x1a6346 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d7a : add byte ptr [rax], al ; sub al, 0x87 ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a767a : add byte ptr [rax], al ; sub al, 0x90 ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e7a : add byte ptr [rax], al ; sub al, 0x98 ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a817a : add byte ptr [rax], al ; sub al, 0x9b ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f3f : add byte ptr [rax], al ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018e77a : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; push rax ; cmp cl, ch ; call qword ptr [rax]
0x000000000019d466 : add byte ptr [rax], al ; sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x0000000000160dcc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f1150 : add byte ptr [rax], al ; sub eax, edx ; ret
0x000000000003678d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000103dda : add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x000000000007bf06 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000103e6e : add byte ptr [rax], al ; sub r8d, eax ; mov eax, r8d ; ret
0x00000000000886e1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000011637e : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000019a93e : add byte ptr [rax], al ; sub sil, bpl ; call qword ptr [rdx]
0x00000000000cb75b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000108165 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000c1e53 : add byte ptr [rax], al ; syscall ; ret
0x000000000019e446 : add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x00000000001966c6 : add byte ptr [rax], al ; test al, 0xa5 ; in eax, dx ; jmp rbx
0x0000000000198e36 : add byte ptr [rax], al ; test al, 0xed ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aabd2 : add byte ptr [rax], al ; test al, ch ; add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000194ad2 : add byte ptr [rax], al ; test byte ptr [rax + rax], ah ; cwde ; cmc ; in al, dx ; call qword ptr [rax]
0x000000000018fed2 : add byte ptr [rax], al ; test byte ptr [rax], bl ; add byte ptr [rax], al ; add rdx, rbp ; call qword ptr [rbx]
0x00000000001a2bd2 : add byte ptr [rax], al ; test byte ptr [rbp + 1], al ; add byte ptr [rax], bh ; xchg edx, esi ; jmp qword ptr [rax]
0x00000000001a75d2 : add byte ptr [rax], al ; test byte ptr [rdi + 0xa780001], cl ; cmc ; call rsp
0x00000000001995d2 : add byte ptr [rax], al ; test byte ptr [rdi - 0x6280000], ch ; in eax, dx ; call qword ptr [rax]
0x0000000000190dd2 : add byte ptr [rax], al ; test byte ptr [rdi], ah ; add byte ptr [rax], al ; fsub dword ptr [rcx - 0x16] ; jmp qword ptr [rcx]
0x00000000001a40d2 : add byte ptr [rax], al ; test byte ptr [rdx + 1], bl ; add al, bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x00000000001a7cd2 : add byte ptr [rax], al ; test byte ptr [rsi + 0x28c80001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a24d2 : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; sbb ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000a84dc : add byte ptr [rax], al ; test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa8500
0x000000000005dd56 : add byte ptr [rax], al ; test ecx, ecx ; je 0x5dd67 ; ret
0x00000000000f813d : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x00000000001978de : add byte ptr [rax], al ; test rbp, rax ; call rdx
0x000000000012b9e2 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x12b9d8 ; pop rbx ; ret
0x00000000001a6d92 : add byte ptr [rax], al ; xchg dword ptr [rcx], r8d ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a0be2 : add byte ptr [rax], al ; xchg eax, esp ; and eax, 0xc7780001 ; int1 ; call qword ptr [rbx]
0x00000000001a5ee2 : add byte ptr [rax], al ; xchg eax, esp ; js 0x1a5ef1 ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a85e2 : add byte ptr [rax], al ; xchg eax, esp ; lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019d6e2 : add byte ptr [rax], al ; xchg eax, esp ; lock add byte ptr [rax], al ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001ac7e2 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x1ac7f1 ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad8f2 : add byte ptr [rax], al ; xchg eax, esp ; out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x0000000000188aee : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; jmp 0x188af8
0x0000000000189766 : add byte ptr [rax], al ; xchg eax, esp ; ret 0xffee
0x00000000001abde2 : add byte ptr [rax], al ; xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000019ca06 : add byte ptr [rax], al ; xchg rax, rbp ; out dx, al ; call qword ptr [rdx]
0x000000000019d076 : add byte ptr [rax], al ; xlatb ; out dx, al ; jmp rdx
0x00000000001a0582 : add byte ptr [rax], al ; xor al, 0x1f ; add dword ptr [rax], eax ; js 0x1a052e ; int1 ; call qword ptr [rax]
0x00000000001b5382 : add byte ptr [rax], al ; xor al, 0x6d ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a5782 : add byte ptr [rax], al ; xor al, 0x71 ; add dword ptr [rax], eax ; jns 0x1a5788 ; jmp qword ptr [rcx]
0x00000000001a7f82 : add byte ptr [rax], al ; xor al, 0x99 ; add dword ptr [rax], eax ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8282 : add byte ptr [rax], al ; xor al, 0x9c ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001aaa82 : add byte ptr [rax], al ; xor al, 0xc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001ab082 : add byte ptr [rax], al ; xor al, 0xca ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000000e4f74 : add byte ptr [rax], al ; xor al, al ; ret
0x000000000019bdce : add byte ptr [rax], al ; xor byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x00000000001907ee : add byte ptr [rax], al ; xor byte ptr [rbx - 0x16], cl ; jmp rsp
0x00000000000f07ca : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000a0d6e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000842cc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000001369ae : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000008356e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012167e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000121637 : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003c4ab : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013553f : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003c04a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000385d6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003d0bb : add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a55a2 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5555
0x00000000000a7de2 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7d95
0x00000000000aa492 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa445
0x000000000008ab71 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f5d20 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f5d45 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f5d69 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f5d89 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f5cfb : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000008be8d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a868b : add byte ptr [rax], bh ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000018fea7 : add byte ptr [rax], bh ; add edx, ebp ; call qword ptr [rdx]
0x00000000001abe97 : add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001a6107 : add byte ptr [rax], bh ; mov ch, 0xf4 ; call rdi
0x0000000000194e57 : add byte ptr [rax], bh ; mov ebp, ebp ; call qword ptr [rax]
0x000000000001b1b7 : add byte ptr [rax], bh ; ret
0x000000000001aeb7 : add byte ptr [rax], bh ; ret 0x3b
0x00000000001a1277 : add byte ptr [rax], bh ; sal cl, cl ; jmp qword ptr [rbx]
0x00000000001aa9c7 : add byte ptr [rax], bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001982a7 : add byte ptr [rax], bh ; shr ch, cl ; call rcx
0x000000000019a907 : add byte ptr [rax], bh ; sub dh, ch ; call qword ptr [rdx]
0x00000000001a2bd7 : add byte ptr [rax], bh ; xchg edx, esi ; jmp qword ptr [rax]
0x000000000018fe47 : add byte ptr [rax], bl ; add edx, ebp ; call qword ptr [rbx]
0x00000000001a24d7 : add byte ptr [rax], bl ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001ac747 : add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a46c7 : add byte ptr [rax], bl ; div ebx ; jmp qword ptr [rax]
0x00000000001a53c7 : add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a5757 : add byte ptr [rax], bl ; jns 0x1a5753 ; jmp qword ptr [rcx]
0x00000000001927e7 : add byte ptr [rax], bl ; mov dh, 0xea ; call qword ptr [rax]
0x00000000001a7667 : add byte ptr [rax], bl ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001aba77 : add byte ptr [rax], bl ; out 0xf5, al ; call qword ptr [rax]
0x000000000001b157 : add byte ptr [rax], bl ; ret
0x000000000001ae57 : add byte ptr [rax], bl ; ret 0x3b
0x00000000001ac7e7 : add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x000000000018fe77 : add byte ptr [rax], ch ; add edx, ebp ; call qword ptr [rbx]
0x00000000001a8107 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8677 : add byte ptr [rax], ch ; cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000196737 : add byte ptr [rax], ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; call rcx
0x000000000019d467 : add byte ptr [rax], ch ; imul esi ; call qword ptr [rcx]
0x000000000001b187 : add byte ptr [rax], ch ; ret
0x000000000001ae87 : add byte ptr [rax], ch ; ret 0x3b
0x00000000001a7e97 : add byte ptr [rax], ch ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a865b : add byte ptr [rax], cl ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018fe17 : add byte ptr [rax], cl ; add edx, ebp ; call qword ptr [rbx]
0x00000000001a0397 : add byte ptr [rax], cl ; int1 ; jmp qword ptr [rcx]
0x0000000000193657 : add byte ptr [rax], cl ; jmp 0x19365f
0x000000000002fd24 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001abc77 : add byte ptr [rax], cl ; out -0xb, eax ; call qword ptr [rax]
0x000000000001b127 : add byte ptr [rax], cl ; ret
0x000000000001ae3f : add byte ptr [rax], cl ; ret 0x3b
0x00000000001aa997 : add byte ptr [rax], cl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ac817 : add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ae907 : add byte ptr [rax], cl ; sub esi, esi ; jmp qword ptr [rcx]
0x000000000018fe8f : add byte ptr [rax], dh ; add edx, ebp ; call qword ptr [rbx]
0x00000000001a24ef : add byte ptr [rax], dh ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001b147f : add byte ptr [rax], dh ; in al, -0xa ; jmp rdx
0x00000000000a0d6f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001a53df : add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a767f : add byte ptr [rax], dh ; or esi, ebp ; jmp qword ptr [rcx]
0x0000000000004527 : add byte ptr [rax], dh ; ret
0x000000000001ae9f : add byte ptr [rax], dh ; ret 0x3b
0x00000000001a7f6f : add byte ptr [rax], dh ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x000000000019bdcf : add byte ptr [rax], dh ; xor dh, ch ; call qword ptr [rsi]
0x000000000000977f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a307 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000005d675 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005d683 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000018fe2f : add byte ptr [rax], dl ; add edx, ebp ; call qword ptr [rdx]
0x00000000001a80ef : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a865f : add byte ptr [rax], dl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001b115f : add byte ptr [rax], dl ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001a554f : add byte ptr [rax], dl ; je 0x1a554b ; jmp qword ptr [rcx]
0x00000000001a618f : add byte ptr [rax], dl ; mov bh, 0xf4 ; call rdi
0x00000000001b00df : add byte ptr [rax], dl ; mov ch, 0xf6 ; call qword ptr [rdi]
0x00000000001927ff : add byte ptr [rax], dl ; mov dh, 0xea ; call qword ptr [rdx]
0x000000000002fe04 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000000dcbf : add byte ptr [rax], dl ; ret
0x00000000001ac7ff : add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x00000000001a7e7f : add byte ptr [rax], dl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000000063e1 : add byte ptr [rax], r8b ; adc al, byte ptr [rax] ; or al, 0 ; call qword ptr [rcx]
0x00000000001aad58 : add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019ae48 : add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019ad28 : add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000192b15 : add byte ptr [rax], r8b ; clc ; or al, 0xeb ; jmp rax
0x000000000003698d : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x000000000011a285 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000969bd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000c26bd : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x0000000000074625 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000037c95 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c36a5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000012b9ed : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000754bd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x000000000007092d : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x000000000010402d : add byte ptr [rax], r8b ; mov eax, edi ; sub eax, esi ; ret
0x000000000009cf1d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000091f65 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000010c5b5 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000bd32d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000470d5 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000035715 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x0000000000091725 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000009cf5d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009699d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000007a71d : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x7a6ee
0x00000000000d278d : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000470cd : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000012eb0d : add byte ptr [rax], r8b ; push rbx ; call 0x12adb6
0x000000000002ef55 : add byte ptr [rax], r8b ; ret
0x0000000000103e6d : add byte ptr [rax], r8b ; sub r8d, eax ; mov eax, r8d ; ret
0x00000000000e32bd : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000d248d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000488ed : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000385d5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000a2ced : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000001362e7 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x0000000000165ffb : add byte ptr [rbp + 0x1e], dh ; ret
0x0000000000133f47 : add byte ptr [rbp + 0x23], dh ; mov eax, edx ; add rsp, 8 ; ret
0x00000000001361b9 : add byte ptr [rbp + 0x24], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000078992 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b82c2 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004798e : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000008abee : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000005d60e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000a18db : add byte ptr [rbp + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x00000000000539f5 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000001181d7 : add byte ptr [rbp + 0x63], cl ; ret
0x00000000001a4be3 : add byte ptr [rbp + 0x6f80001], dl ; hlt ; jmp rdx
0x0000000000118a75 : add byte ptr [rbp + 0x6f], dh ; add rsp, 8 ; ret
0x0000000000194bf3 : add byte ptr [rbp + 0x7bc80000], ah ; in eax, dx ; jmp rcx
0x0000000000136273 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000038c7f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000038b6f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001a0bcb : add byte ptr [rbp + 1], bh ; add byte ptr [rax - 0x39], dh ; int1 ; call qword ptr [rsi]
0x00000000000487fa : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000105ecd : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ea66 : add byte ptr [rbp + 7], dh ; ret
0x0000000000125258 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000001889af : add byte ptr [rbp + rax*2 - 0x15], dh ; inc esp ; lahf ; add byte ptr [rax], al ; ret
0x00000000001a2c03 : add byte ptr [rbp + rax*2 - 0x78a7ffff], dh ; jmp qword ptr [rcx]
0x00000000001a2beb : add byte ptr [rbp + rax*2 - 0x78bfffff], bl ; jmp qword ptr [rcx]
0x00000000001a2bd3 : add byte ptr [rbp + rax*2 - 0x78c7ffff], al ; jmp qword ptr [rax]
0x00000000001aaba3 : add byte ptr [rbp + rax*8 + 1], dl ; add al, bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001aac03 : add byte ptr [rbp + rax*8 - 0x2ba7ffff], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001aabeb : add byte ptr [rbp + rax*8 - 0x2bbfffff], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001aabd3 : add byte ptr [rbp + rax*8 - 0x2bd7ffff], al ; cmc ; jmp qword ptr [rsi]
0x00000000000c2798 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018caf7 : add byte ptr [rbp + rbp - 8], ah ; jmp rsp
0x00000000001a53db : add byte ptr [rbp + rbp*2 + 0x6c300001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a53f3 : add byte ptr [rbp + rbp*2 + 0x6c480001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a540b : add byte ptr [rbp + rbp*2 + 0x6c600001], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a53ab : add byte ptr [rbp + rbp*2 + 1], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a53c3 : add byte ptr [rbp + rbp*2 + 1], dh ; add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a0393 : add byte ptr [rbp + rbx + 1], al ; add byte ptr [rax], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001b4393 : add byte ptr [rbp + rbx*2 + 2], al ; add al, bh ; mov bh, dh ; call qword ptr [rdx]
0x00000000001a83bb : add byte ptr [rbp + rbx*4 + 1], ch ; add al, dh ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a83a3 : add byte ptr [rbp + rbx*4 + 1], dl ; add al, bl ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000019c3f3 : add byte ptr [rbp + rbx*8 + 0x78f80000], ah ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a33ab : add byte ptr [rbp + rcx*2 + 1], bl ; add byte ptr [rax - 0x17], al ; jmp rdx
0x000000000004cdf6 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rsi ; call qword ptr [rdx]
0x00000000000a4079 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000d4b77 : add byte ptr [rbp + rcx*4 + 0x65], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000001a23cb : add byte ptr [rbp + rdi + 1], bh ; add al, dl ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001882f7 : add byte ptr [rbp + rdi*2 - 0x16], ah ; jmp rsp
0x00000000001a63db : add byte ptr [rbp + rdi*2 - 0x43cfffff], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000186974 : add byte ptr [rbp + rdi*8 - 0x25b2f01], ah ; call rax
0x000000000019bc0b : add byte ptr [rbp + rdx*8 + 0x23400000], bh ; out dx, al ; jmp rcx
0x00000000001959eb : add byte ptr [rbp + rdx], bh ; add byte ptr [rax - 0x6b], dh ; in eax, dx ; jmp rsi
0x000000000019c1f0 : add byte ptr [rbp - 0x12], ch ; call qword ptr [rsi]
0x00000000001885b7 : add byte ptr [rbp - 0x16], ah ; call rsp
0x00000000001a0bfb : add byte ptr [rbp - 0x387fffff], ch ; int1 ; call qword ptr [rbx]
0x00000000001a0be3 : add byte ptr [rbp - 0x3887ffff], dl ; int1 ; call qword ptr [rbx]
0x0000000000165518 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x00000000000f813e : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000010fc17 : add byte ptr [rbp - 0x3e], dh ; jmp 0x10fbd6
0x00000000000a84dd : add byte ptr [rbp - 0x476b313], al ; setne dl ; jmp 0xa84ff
0x0000000000058a9c : add byte ptr [rbp - 0x4c7af02e], al ; ret 0xffff
0x0000000000187a5c : add byte ptr [rbp - 0x536f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001786b0 : add byte ptr [rbp - 0x698f0004], dl ; cld ; jmp rax
0x0000000000095518 : add byte ptr [rbp - 0x73], cl ; dec dword ptr [r13 - 0x77] ; ret
0x00000000000bda9f : add byte ptr [rbp - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000047410 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000095468 : add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x0000000000049627 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000012eb5b : add byte ptr [rbp - 0x7b], al ; div byte ptr [rbp + 0xf] ; call 0x12adb8
0x00000000000a5d00 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa5d21
0x00000000000aabb0 : add byte ptr [rbp - 0x7b], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xaabd1
0x0000000000078aef : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x000000000003aac8 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x00000000000d104f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000083bd5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000036bc5 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000005dd57 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000001a04f0 : add byte ptr [rbp - 0xf], bh ; call qword ptr [rax]
0x0000000000187038 : add byte ptr [rbp - 4], ah ; call qword ptr [rax + 0x20fffc64]
0x000000000018d507 : add byte ptr [rbp - 7], al ; call rsp
0x000000000018c347 : add byte ptr [rbp - 9], ah ; call rsp
0x00000000001b5383 : add byte ptr [rbp*2 + 0x6380002], dh ; sti ; jmp qword ptr [rdx]
0x0000000000010a6f : add byte ptr [rbp], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000139559 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000072fef : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000018dadf : add byte ptr [rbx + 0x21], cl ; cli ; call rsp
0x00000000000a1bee : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000076ab8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000fc8cd : add byte ptr [rbx + 0x2c50cc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007c9d5 : add byte ptr [rbx + 0x343fe705], al ; add byte ptr [rcx], al ; ret
0x0000000000032126 : add byte ptr [rbx + 0x391f430d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000031d58 : add byte ptr [rbx + 0x3923113d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4073 : add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x00000000000e1158 : add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x000000000018cb97 : add byte ptr [rbx + 0x3c], bh ; clc ; jmp rsp
0x00000000001a037b : add byte ptr [rbx + 0x3ff00001], ch ; int1 ; jmp qword ptr [rcx]
0x00000000000c2020 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010ad38 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000009cf2f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000015cc5f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016000f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x0000000000037075 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000c0ca3 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; ret
0x000000000009f34f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000006f560 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000188a47 : add byte ptr [rbx + 0x4c], ah ; jmp 0x188a4f
0x000000000014cd2f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000116b76 : add byte ptr [rbx + 0x5b04d044], cl ; ret
0x0000000000070736 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000f08de : add byte ptr [rbx + 0x5d], bl ; mov eax, r9d ; pop r12 ; ret
0x00000000000247fd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002199b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f511 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007a44f : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x00000000000736ef : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000001239ce : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x000000000009d619 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e462f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000004f016 : add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000072fbf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000ba0af : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x00000000000a557d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa5557
0x00000000000a7dbd : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa7d97
0x00000000000aa46d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaa447
0x000000000019c7b8 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001af288 : add byte ptr [rbx + 0xe], dl ; adc byte ptr [rbx + 0x1990302], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000b27f : add byte ptr [rbx + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b713b : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000001624ba : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001aa993 : add byte ptr [rbx + rax*8 + 1], al ; add byte ptr [rax], cl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001aa9ab : add byte ptr [rbx + rax*8 + 1], bl ; add byte ptr [rax], ah ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001aa9c3 : add byte ptr [rbx + rax*8 + 1], dh ; add byte ptr [rax], bh ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000189777 : add byte ptr [rbx + rax*8 - 0x12], ah ; jmp rsp
0x00000000001aaa0b : add byte ptr [rbx + rax*8 - 0x2c7fffff], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa9f3 : add byte ptr [rbx + rax*8 - 0x2c97ffff], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001aa9db : add byte ptr [rbx + rax*8 - 0x2cafffff], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa963 : add byte ptr [rbx + rax*8], dl ; add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001b51eb : add byte ptr [rbx + rbp*2 + 0x7700002], bl ; sti ; jmp qword ptr [rdx]
0x00000000001a820b : add byte ptr [rbx + rbx*4 + 0x2f900001], bh ; cmc ; call qword ptr [rsi]
0x00000000001a81c3 : add byte ptr [rbx + rbx*4 + 1], dh ; add byte ptr [rax + 0x2f], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a817b : add byte ptr [rbx + rbx*4], ch ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000019c1eb : add byte ptr [rbx + rbx*8 + 0x6d000000], bl ; out dx, al ; call qword ptr [rsi]
0x000000000019c18b : add byte ptr [rbx + rbx*8], bh ; add byte ptr [rax], al ; push 0xee ; call qword ptr [rdi]
0x0000000000074f02 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001931fb : add byte ptr [rbx + rcx*2 + 0x57500000], ch ; jmp 0x19320b
0x00000000001931b3 : add byte ptr [rbx + rcx*2], ah ; add al, cl ; push rsi ; jmp 0x1931c3
0x0000000000031f69 : add byte ptr [rbx + rcx*4 + 0x15], al ; jmp qword ptr [rax]
0x00000000000846d5 : add byte ptr [rbx + rcx*4 + 0x25], cl ; ret
0x00000000001300b2 : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000039d17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000038587 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000da2bf : add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x000000000016200f : add byte ptr [rbx + rcx*4 + 5], cl ; pop rcx ; ret 0x25
0x00000000000d1c77 : add byte ptr [rbx + rcx*4 + 5], cl ; pop rcx ; ret 0x2e
0x00000000001ab163 : add byte ptr [rbx + rcx*8], dl ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000018d897 : add byte ptr [rbx + rcx*8], dl ; stc ; call rsp
0x000000000018b3b7 : add byte ptr [rbx + rdi - 0xb], al ; call rsp
0x00000000001b5620 : add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000001a7953 : add byte ptr [rbx + rdx*4], al ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001ab9f3 : add byte ptr [rbx + rdx*8 - 0x1a07ffff], ah ; cmc ; call qword ptr [rax]
0x00000000001aba0b : add byte ptr [rbx + rdx*8 - 0x1a0fffff], bh ; cmc ; call qword ptr [rax]
0x000000000005fa0e : add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fd22 : add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x00000000000e5884 : add byte ptr [rbx - 0x17bbdb84], cl ; ret 0x66
0x00000000000c1e17 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xc1e2a ; ret
0x000000000002e9ff : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000076a37 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a1c78 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a1c71 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a1c6a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a1c63 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a1c5c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a1c7f : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000002ca8d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x2ca61 ; pop rbx ; ret
0x000000000011c2b6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x11c2c8 ; ret
0x000000000010822f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x108249 ; ret
0x00000000000b70e8 : add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x00000000001949e3 : add byte ptr [rbx - 0x5f180000], dl ; in al, dx ; call rdx
0x00000000000efba9 : add byte ptr [rbx - 0x6117c385], cl ; ret
0x000000000019ca03 : add byte ptr [rbx - 0x6ab80000], dh ; out dx, al ; call qword ptr [rdx]
0x0000000000119670 : add byte ptr [rbx - 0x71f0f905], al ; ret 1
0x0000000000047ebf : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000064d0f : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x0000000000048854 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000221fc : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000000fa68a : add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x0000000000020562 : add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000011c977 : add byte ptr [rbx - 0x77], al ; scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x000000000006ff44 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc36340b0
0x0000000000021dff : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000eeb7a : add byte ptr [rbx - 0x7acfdb84], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x0000000000030f25 : add byte ptr [rbx - 0x7af0fa08], al ; ret 0xfffa
0x0000000000075e50 : add byte ptr [rbx - 0x7af0fe08], al ; ret
0x000000000004db64 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xfffc
0x00000000000ed5f3 : add byte ptr [rbx - 0x7bf0cfbd], cl ; ret
0x0000000000163b76 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000df699 : add byte ptr [rbx - 0x7bf0f008], al ; ret 0x16
0x0000000000115980 : add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000ba2f7 : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000d0f1f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000007a0df : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x0000000000113cdf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000ca3b7 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4408
0x00000000000227cf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0xc601
0x00000000000804e8 : add byte ptr [rbx - 0x7d], cl ; cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000803ff : add byte ptr [rbx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000f98bf : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000cc768 : add byte ptr [rbx - 0x9f43], al ; jmp qword ptr [rdx]
0x0000000000178a98 : add byte ptr [rbx - 0xe], ch ; jmp qword ptr [rax]
0x00000000001879a8 : add byte ptr [rbx - 4], bh ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000019c9cb : add byte ptr [rbx], bh ; add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x00000000001a495b : add byte ptr [rbx], cl ; add dword ptr [rax], eax ; mov al, 0xfc ; call qword ptr [rsi]
0x000000000000ed58 : add byte ptr [rcx + 0x12], dh ; add byte ptr [rax], al ; ret 0
0x0000000000054366 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x000000000018ca47 : add byte ptr [rcx + 0x23], dl ; clc ; call rsp
0x00000000000430f8 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000015a91f : add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000113d42 : add byte ptr [rcx + 0x39], al ; ret
0x0000000000114557 : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000008c886 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000641ec : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000493fe : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f48c1 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000709f2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000015a8ff : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009deff : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007bb96 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000008019c : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x00000000000e1b35 : add byte ptr [rcx + 0x5bc03128], cl ; pop rbp ; pop r12 ; ret
0x0000000000133a56 : add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000021aa0 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000053931 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053863 : add byte ptr [rcx + 0x5e], al ; ret
0x0000000000142d1e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006d177 : add byte ptr [rcx + 0x63], cl ; add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000016007c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009cda8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000c767f : add byte ptr [rcx + 0x63], cl ; ret
0x0000000000188f6f : add byte ptr [rcx + 0x74ffed5d], dh ; ret
0x000000000002fecf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000e10fc : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x00000000000490d2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000cf445 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8d47
0x000000000007d63d : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000000b1d23 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x0000000000105d22 : add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x00000000001a47ab : add byte ptr [rcx + 1], bl ; add al, dl ; clc ; jmp qword ptr [rdi]
0x00000000000a154f : add byte ptr [rcx + 1], cl ; ret
0x00000000000600a9 : add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a87c3 : add byte ptr [rcx + 1], dh ; add byte ptr [rax + 0x41], cl ; cmc ; jmp rdi
0x00000000001899c7 : add byte ptr [rcx + 2], bl ; out dx, eax ; call rsp
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000839b3 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000018c7e7 : add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x000000000018b71f : add byte ptr [rcx + rax*2 - 0xa], dl ; call rsp
0x00000000001a67bb : add byte ptr [rcx + rax*4 + 1], ch ; add byte ptr [rax - 0x36], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019a7a3 : add byte ptr [rcx + rax*8], dl ; add byte ptr [rax + 0x22], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000018e77b : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; push rax ; cmp cl, ch ; call qword ptr [rax]
0x00000000000a318f : add byte ptr [rcx + rbp - 0x40], al ; ret
0x000000000018db37 : add byte ptr [rcx + rbp - 6], ah ; call rsp
0x0000000000189ecf : add byte ptr [rcx + rbp*4 - 0x11], ah ; jmp rsp
0x000000000019cfe3 : add byte ptr [rcx + rbp*8 - 0x43680000], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000001a7fb3 : add byte ptr [rcx + rbx*4 + 1], ah ; add byte ptr [rax + 0x2c], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f9b : add byte ptr [rcx + rbx*4 + 1], cl ; add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a7f83 : add byte ptr [rcx + rbx*4], dh ; add dword ptr [rax], eax ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018ff63 : add byte ptr [rcx + rbx], dl ; add byte ptr [rax], al ; pop rax ; add edx, ebp ; call qword ptr [rcx]
0x000000000016dbbf : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000107aec : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000be7d0 : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 0x18 ; ret
0x00000000000be87e : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 8 ; ret
0x000000000006b1bd : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000091f67 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000080917 : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000120069 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x00000000000f67f7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000a42a8 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a48a3 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000f5fa1 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000085411 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000085621 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000f09b4 : add byte ptr [rcx + rcx*4 - 0x38], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078790 : add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x7872e
0x00000000000851a3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000076650 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000006fc80 : add byte ptr [rcx + rcx*4 - 1], al ; call 0xebf5f
0x0000000000074d74 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x70ff6
0x000000000011fe61 : add byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x00000000000f5dd6 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000110f88 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x0000000000105a30 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x101d26
0x00000000000f5de5 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000023f6c : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000f393f : add byte ptr [rcx + rcx*8 - 0x7cb78e8c], al ; ret
0x00000000001a1fa3 : add byte ptr [rcx + rdi + 1], dl ; add byte ptr [rax - 0x16], bl ; int1 ; jmp qword ptr [rcx]
0x0000000000086194 : add byte ptr [rcx + rdi*2 + 0x48], dh ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000001af7a3 : add byte ptr [rcx + rdx + 2], dl ; add al, bh ; test dh, dh ; jmp rdx
0x000000000018883f : add byte ptr [rcx + rdx - 0x15], dh ; call rsp
0x000000000019780b : add byte ptr [rcx + rdx*4 - 0x48800000], bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab7db : add byte ptr [rcx + rdx*8 - 0x1c8fffff], cl ; cmc ; call qword ptr [rax]
0x00000000001ab7f3 : add byte ptr [rcx + rdx*8 - 0x1c97ffff], ah ; cmc ; jmp rbx
0x00000000001a5753 : add byte ptr [rcx + rsi*2], al ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a5783 : add byte ptr [rcx + rsi*2], dh ; add dword ptr [rax], eax ; jns 0x1a5787 ; jmp qword ptr [rcx]
0x00000000001886bf : add byte ptr [rcx + rsi*8 - 0x16], dl ; call rsp
0x0000000000189537 : add byte ptr [rcx - 0x12], dl ; jmp rsp
0x000000000000245f : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000001a080b : add byte ptr [rcx - 0x3a8fffff], bh ; int1 ; call qword ptr [rdx]
0x00000000000e1cdd : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d112f4
0x00000000000ee4da : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d1daf1
0x00000000000e463f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000004506d : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ba230 : add byte ptr [rcx - 0x45], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xba203
0x00000000000975a7 : add byte ptr [rcx - 0x48], al ; cmp eax, 0xeb000000 ; ret
0x00000000001ac7e3 : add byte ptr [rcx - 0x4e7ffff], dl ; cmc ; call qword ptr [rax]
0x00000000001ac7fb : add byte ptr [rcx - 0x4efffff], ch ; cmc ; call qword ptr [rax]
0x0000000000187c34 : add byte ptr [rcx - 0x4f6f0004], dh ; cld ; jmp qword ptr [rax]
0x00000000000342b5 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x00000000000e37bf : add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x870f
0x00000000000e28ef : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000105640 : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001313df : add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x000000000012f967 : add byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000047866 : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000b378a : add byte ptr [rcx - 0x76dbdbbc], cl ; ret
0x00000000000969bf : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000c658b : add byte ptr [rcx - 0x77], al ; ret
0x0000000000020bef : add byte ptr [rcx - 0x77], al ; xor al, 0x89 ; inc dword ptr [rdi + 4] ; ret
0x000000000004bfef : add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x0000000000059639 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000002105d : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000047314 : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x0000000000033d05 : add byte ptr [rcx - 0x77], cl ; ret 0x65e9
0x000000000003ffbc : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004b7ee : add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000621e7 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000008b593 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000005c3a2 : add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x0000000000035d1b : add byte ptr [rcx - 0x77], cl ; ret 0xf41
0x0000000000045751 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000022917 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000249ce : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d20ff : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000007e95f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000d422a : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001376cf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008723f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008030d : add byte ptr [rcx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e9f17 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000e9e87 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00000000000805dc : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000c1e1a : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x0000000000185dcf : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000001787b4 : add byte ptr [rcx - 0xe], cl ; jmp qword ptr [rax]
0x00000000001a0420 : add byte ptr [rcx - 0xf], al ; call rsi
0x000000000008bfc2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008bfe8 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000094414 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012f90c : add byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret 0x894c
0x00000000001ac47d : add byte ptr [rcx], 0 ; add dh, dh ; cmc ; call qword ptr [rcx]
0x0000000000134783 : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001a6745 : add byte ptr [rcx], 0 ; call 0x231a5c1b
0x00000000001b3666 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; push rax ; ret
0x0000000000191e8e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001a08be : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf174
0x00000000001a1136 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17d
0x00000000001a9d26 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf4ec
0x00000000001ab296 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf559
0x00000000001ab90e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001b361e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; xchg eax, ecx ; ret
0x000000000018a1af : add byte ptr [rcx], ah ; out dx, eax ; jmp rsp
0x0000000000186740 : add byte ptr [rcx], ah ; sti ; push rax ; and ebx, edi ; jmp rax
0x000000000017aaeb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000000722f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000085bdf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000002c2c0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000030099 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x000000000006a071 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x66302
0x000000000011498b : add byte ptr [rcx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000012a1c3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008baf1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000886df : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000010d720 : add byte ptr [rcx], al ; jmp 0x10d4f3
0x000000000010dad8 : add byte ptr [rcx], al ; jmp 0x10d8c3
0x000000000002fde4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007d44e : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000012e74f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007c9db : add byte ptr [rcx], al ; ret
0x00000000001322c5 : add byte ptr [rcx], al ; ret 0x59e9
0x000000000012f90f : add byte ptr [rcx], al ; ret 0x894c
0x000000000004869e : add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000d0de5 : add byte ptr [rcx], al ; setg dl ; jmp 0xd0d72
0x00000000000fcf89 : add byte ptr [rcx], bh ; ret
0x00000000000e37c3 : add byte ptr [rcx], bh ; ret 0x870f
0x00000000000e1ff2 : add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000080cd1 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000b25d5 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000189d97 : add byte ptr [rcx], bl ; out dx, eax ; jmp rsp
0x00000000000889dd : add byte ptr [rcx], ch ; ret
0x00000000000b2420 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000ceacc : add byte ptr [rcx], ch ; ret 0x850f
0x00000000000b90d6 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b9170 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b7a39 : add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1151 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000186cbc : add byte ptr [rcx], cl ; cld ; jmp rax
0x0000000000045c7a : add byte ptr [rcx], cl ; ret 0x840f
0x000000000003673c : add byte ptr [rcx], cl ; ret 0xd089
0x0000000000186e9c : add byte ptr [rcx], dh ; cld ; jmp rax
0x00000000000b2a0d : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007dfef : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000007df9e : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x0000000000111f75 : add byte ptr [rcx], dh ; fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000a55a3 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa5554
0x00000000000a7de3 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa7d94
0x00000000000aa493 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaa444
0x000000000012a5f6 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c4ac : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000889d6 : add byte ptr [rcx], dh ; ret
0x000000000002fedf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000026118 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000a5617 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000003c2eb : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001369af : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000134bfa : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008ab72 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000117862 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000c100d : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000d1ecf : add byte ptr [rcx], dh ; sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x000000000018e637 : add byte ptr [rcx], dh ; std ; jmp rsp
0x00000000000f5cfc : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000001890af : add byte ptr [rdi + 0x5c], ch ; out dx, al ; jmp rsp
0x000000000014ab7a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000019bab8 : add byte ptr [rdi + 0xe], cl ; adc byte ptr [rbx + 0x1020302], al ; ret
0x00000000000a2ce4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000164564 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001a2deb : add byte ptr [rdi + rax*2 - 0x750fffff], bl ; call qword ptr [rcx]
0x00000000001a2d73 : add byte ptr [rdi + rax*2], ah ; add dword ptr [rax], eax ; clc ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001a6d93 : add byte ptr [rdi + rax*4 + 1], al ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6dc3 : add byte ptr [rdi + rax*4 + 1], dh ; add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e0b : add byte ptr [rdi + rax*4 - 0x223fffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6df3 : add byte ptr [rdi + rax*4 - 0x2257ffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a6ddb : add byte ptr [rdi + rax*4 - 0x226fffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d7b : add byte ptr [rdi + rax*4], ch ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001995d3 : add byte ptr [rdi + rbp*4 - 0x6280000], al ; in eax, dx ; call qword ptr [rax]
0x000000000019d5e3 : add byte ptr [rdi + rbp*8 + 0x12680000], dl ; cli ; call qword ptr [rax]
0x000000000019d5b3 : add byte ptr [rdi + rbp*8], ah ; add al, bl ; fdivr st(1) ; call qword ptr [rax]
0x00000000001b05eb : add byte ptr [rdi + rbx + 0x51f00002], bl ; sti ; call rsi
0x0000000000188897 : add byte ptr [rdi + rbx - 0x15], dh ; call rsp
0x00000000001a85e3 : add byte ptr [rdi + rbx*4 + 0x38980001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a85fb : add byte ptr [rdi + rbx*4 + 0x38b00001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a85b3 : add byte ptr [rdi + rbx*4 + 1], ah ; add byte ptr [rax + 0x38], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a0583 : add byte ptr [rdi + rbx], dh ; add dword ptr [rax], eax ; js 0x1a052d ; int1 ; call qword ptr [rax]
0x000000000004f65e : add byte ptr [rdi + rcx + 0x44], cl ; jmp 0xffffffffc24905bb
0x000000000016e3bf : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000000c4c6c : add byte ptr [rdi + rcx - 0x7b], bl ; xor ah, 0xff ; push rsi ; ret
0x00000000001935db : add byte ptr [rdi + rcx*2 + 0x62d00000], cl ; jmp 0x1935eb
0x00000000001935f3 : add byte ptr [rdi + rcx*2 + 0x62d80000], ah ; jmp 0x193603
0x00000000001a75d3 : add byte ptr [rdi + rcx*4 + 0xa780001], al ; cmc ; call rsp
0x000000000002fce4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000018c8cf : add byte ptr [rdi + rcx], dl ; clc ; call rsp
0x00000000001a25c3 : add byte ptr [rdi + rdi + 1], dh ; add byte ptr [rax + 2], bl ; call rdi
0x00000000001aa5cb : add byte ptr [rdi + rdi*4 + 1], bh ; add byte ptr [rax - 0x69], ah ; cmc ; call rsp
0x000000000018e0ff : add byte ptr [rdi + rdi*4], dl ; cli ; jmp rsp
0x000000000019e563 : add byte ptr [rdi + rdi*8], dl ; add byte ptr [rax], al ; adc al, 0xf0 ; jmp rbx
0x000000000018cbc7 : add byte ptr [rdi + rdi], dl ; clc ; jmp rsp
0x00000000001a7deb : add byte ptr [rdi + rdx*4 + 0x2aa00001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e03 : add byte ptr [rdi + rdx*4 + 0x2ab80001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018981f : add byte ptr [rdi + rdx*8 - 0x12], dh ; call rsp
0x00000000001abde3 : add byte ptr [rdi + rdx*8 - 0x1527ffff], dl ; cmc ; jmp qword ptr [rax]
0x000000000018e597 : add byte ptr [rdi + rdx*8 - 3], al ; jmp rsp
0x000000000019bdcb : add byte ptr [rdi + rdx*8], bh ; add byte ptr [rax], dh ; xor dh, ch ; call qword ptr [rsi]
0x00000000001b5db3 : add byte ptr [rdi + rsi*2 + 2], ah ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x0000000000188727 : add byte ptr [rdi + rsi*8 - 0x16], al ; jmp rsp
0x0000000000190be0 : add byte ptr [rdi - 0x16], bl ; jmp qword ptr [rsi]
0x00000000001a637b : add byte ptr [rdi*2 - 0x448fffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6363 : add byte ptr [rdi*2 - 0x44a7ffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000003667e : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000176fbb : add byte ptr [rdi], bl ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x0000000000186eb8 : add byte ptr [rdi], ch ; cld ; jmp rax
0x000000000014c4f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000014d52f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000fbcb1 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fe7d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2fe0e ; loopne 0x2fe8e ; ret
0x00000000000fd8ec : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xfd87d ; loopne 0xfd8fd ; ret
0x000000000007b2d7 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000014d59f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000c45da : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000027973 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000279bd : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000033a80 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006d57f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000884df : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016008f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008c06f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009708f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009709f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009707f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000093a6f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008beff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008beef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008bedf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000189d07 : add byte ptr [rdi], cl ; out dx, eax ; call rsp
0x00000000000a1b47 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000364b7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000481f7 : add byte ptr [rdi], cl ; ret 0x2ce9
0x000000000010ae8f : add byte ptr [rdi], cl ; ret 0x8348
0x00000000000cbc60 : add byte ptr [rdi], cl ; ret 0x84e9
0x0000000000047b43 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000031c6b : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000133226 : add byte ptr [rdi], cl ; ret 0xc389
0x0000000000042dbb : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000d7881 : add byte ptr [rdi], cl ; ret 0xc931
0x0000000000114920 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000011495b : add byte ptr [rdi], cl ; ret 0xff83
0x00000000000a19b2 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b8fce : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x000000000011aed1 : add byte ptr [rdi], cl ; shr r9b, 1 ; ret 0xfffe
0x00000000000e5629 : add byte ptr [rdi], cl ; test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a4d6e : add byte ptr [rdi], cl ; test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a520e : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c46e5 : add byte ptr [rdi], cl ; test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x000000000007ca11 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x000000000006f921 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007df45 : add byte ptr [rdi], cl ; test dword ptr [rsi], ebp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000005c35e : add byte ptr [rdi], cl ; xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000059f3b : add byte ptr [rdi], cl ; xchg dword ptr [rsp + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000cdabe : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b196f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x00000000000490dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000001126f9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000e2ea2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000b1cf7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf749
0x00000000000887aa : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x000000000001f4c1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000df96f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x00000000000c5aed : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000c5037 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000005362c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e3901 : add byte ptr [rdx + 0x1d6], bh ; call 0x2fbf8
0x00000000000e393f : add byte ptr [rdx + 0x213], bh ; call 0x2fbf8
0x00000000000e3920 : add byte ptr [rdx + 0x215], bh ; call 0x2fbf8
0x000000000015cc1f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000001588ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009f30f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000795e6 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000188fdf : add byte ptr [rdx + 0x63], bh ; in eax, dx ; call rsp
0x00000000000e73d8 : add byte ptr [rdx + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000648be : add byte ptr [rdx + 0x63], cl ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000003071f : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x000000000006390e : add byte ptr [rdx + 0x826], bh ; call 0x2fbf8
0x00000000001b7b3b : add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000000e567 : add byte ptr [rdx + 3], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b77b3 : add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x00000000000f4c52 : add byte ptr [rdx + rax + 0x5b], dh ; ret
0x000000000018dc8f : add byte ptr [rdx + rax*2 - 6], dl ; inc esp ; ret 2
0x000000000019a903 : add byte ptr [rdx + rax*8 + 0x28380000], dh ; out dx, al ; call qword ptr [rdx]
0x00000000001aa903 : add byte ptr [rdx + rax*8 - 0x2d87ffff], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001aa8eb : add byte ptr [rdx + rax*8 - 0x2d9fffff], bl ; cmc ; jmp qword ptr [rsi]
0x000000000019a88b : add byte ptr [rdx + rax*8], bh ; add byte ptr [rax], al ; shl byte ptr [rdi], 0xee ; call qword ptr [rsi]
0x000000000018d2ef : add byte ptr [rdx + rax], dh ; stc ; call rsp
0x00000000001a50fb : add byte ptr [rdx + rbp*2 + 0x63e00001], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019d073 : add byte ptr [rdx + rbp*8], ah ; add byte ptr [rax], al ; xlatb ; out dx, al ; jmp rdx
0x00000000001a40d3 : add byte ptr [rdx + rbx*2 + 0x6fd80001], al ; jmp rax
0x00000000001a80eb : add byte ptr [rdx + rbx*4 + 0x2e100001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8103 : add byte ptr [rdx + rbx*4 + 0x2e280001], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000093ff3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000018aebf : add byte ptr [rdx + rcx*4 - 0xd], bl ; jmp rsp
0x00000000001ab083 : add byte ptr [rdx + rcx*8], dh ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000001a6103 : add byte ptr [rdx + rdi*2 - 0x4ac7ffff], dh ; hlt ; call rdi
0x00000000001a605b : add byte ptr [rdx + rdi*2], cl ; add dword ptr [rax], eax ; mov al, 0xb2 ; hlt ; call qword ptr [rsi]
0x000000000018d7f7 : add byte ptr [rdx + rdi*4], al ; stc ; jmp rsp
0x00000000001a2073 : add byte ptr [rdx + rdi], ah ; add dword ptr [rax], eax ; pop rax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x000000000016e7bf : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000001af89b : add byte ptr [rdx + rdx + 2], cl ; add al, ah ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000018d357 : add byte ptr [rdx + rdx - 7], al ; jmp rsp
0x000000000018c907 : add byte ptr [rdx + rdx - 8], dl ; call rsp
0x000000000018c0cf : add byte ptr [rdx + rsi - 9], dh ; call rsp
0x00000000001ab68b : add byte ptr [rdx + rsi*2], bl ; add dword ptr [rax], eax ; push rax ; loope 0x1ab690 ; call qword ptr [rcx]
0x000000000018773c : add byte ptr [rdx - 0x766f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000001787d4 : add byte ptr [rdx - 0xe], cl ; jmp qword ptr [rax]
0x000000000018a677 : add byte ptr [rdx - 0xf], dl ; jmp rsp
0x000000000010024f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010024e : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000187250 : add byte ptr [rdx - 4], ah ; call qword ptr [rax + 0x20fffc61]
0x000000000018d3bd : add byte ptr [rdx], 0 ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x00000000001b7b37 : add byte ptr [rdx], ah ; add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000018ceff : add byte ptr [rdx], ah ; jge 0x18ceff ; call rsp
0x0000000000030148 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002fe36 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011be36 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010225b : add byte ptr [rdx], al ; call rax
0x000000000002fd44 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000000404f : add byte ptr [rdx], bh ; add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000000f6ecf : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186f40 : add byte ptr [rdx], dh ; cld ; call rax
0x00000000000063e3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; call qword ptr [rcx]
0x00000000000048fb : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x00000000000041f3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000000a1db : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret
0x0000000000188c0f : add byte ptr [rdx], dl ; jmp 0x188c17
0x000000000006ecb0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000365e8 : add byte ptr [rip + 0x7e0f6600], dl ; ret 0xd089
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000001a9782 : add byte ptr [rip + 0xe01fa03], 0x20 ; ret
0x00000000000fa5e0 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000c12b1 : add byte ptr [rip - 0xfff], bh ; jae 0xc12c2 ; ret
0x000000000012a7e7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000160384 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006acf4 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret
0x00000000000d1829 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; call 0x1cf9b81
0x00000000000f9c16 : add byte ptr [rsi + 0xf], ah ; ret
0x0000000000096f9c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008bdf4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000f5daf : add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f5f9c : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000000f5e68 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000000f5de0 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000000f621a : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000000f5f8d : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000000f5e59 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000000f5dd1 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000012016d : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000e4f67 : add byte ptr [rsi + 6], dh ; ret
0x00000000001a2c93 : add byte ptr [rsi + rax*2 + 1], al ; add al, ch ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a6c53 : add byte ptr [rsi + rax*4], al ; add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001b79c7 : add byte ptr [rsi + rax], ch ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000018b3df : add byte ptr [rsi + rbp*2 - 0xb], ah ; inc esp ; ret
0x000000000019d4f3 : add byte ptr [rsi + rbp*8 - 0x42180000], ah ; stc ; call qword ptr [rax]
0x000000000019d463 : add byte ptr [rsi + rbp*8], dl ; add byte ptr [rax], al ; sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x000000000018db57 : add byte ptr [rsi + rbp], al ; cli ; jmp rsp
0x00000000001a04eb : add byte ptr [rsi + rbx + 0x7d000001], bl ; int1 ; call qword ptr [rax]
0x000000000018cd57 : add byte ptr [rsi + rbx*2], ah ; clc ; jmp rsp
0x000000000018c9bf : add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x00000000001a046b : add byte ptr [rsi + rbx], bl ; add dword ptr [rax], eax ; rol byte ptr [rsi - 0xf], 1 ; call qword ptr [rdx]
0x00000000001893e7 : add byte ptr [rsi + rcx*4], dl ; out dx, al ; jmp rsp
0x00000000001a24bb : add byte ptr [rsi + rdi + 1], ch ; add byte ptr [rax], al ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001a2503 : add byte ptr [rsi + rdi - 0x3b7ffff], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001a24eb : add byte ptr [rsi + rdi - 0x3cfffff], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001a24d3 : add byte ptr [rsi + rdi - 0x3e7ffff], al ; int1 ; jmp qword ptr [rcx]
0x00000000001a648b : add byte ptr [rsi + rdi*2], bh ; add dword ptr [rax], eax ; jo 0x1a6458 ; hlt ; jmp qword ptr [rcx]
0x000000000019e503 : add byte ptr [rsi + rdi*8 - 0x19780000], dh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018c767 : add byte ptr [rsi + rdi*8 - 9], dh ; call rsp
0x00000000001a245b : add byte ptr [rsi + rdi], cl ; add dword ptr [rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001b3c93 : add byte ptr [rsi + rdx*2 + 2], al ; add byte ptr [rax + 0x74], ch ; idiv edi ; ret 0
0x00000000001a7cd3 : add byte ptr [rsi + rdx*4 + 0x28c80001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d03 : add byte ptr [rsi + rdx*4 + 0x28e80001], dh ; cmc ; call qword ptr [rax]
0x00000000001a7c8b : add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000000e3c83 : add byte ptr [rsi + rdx*8 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001abca3 : add byte ptr [rsi + rdx*8 + 1], dl ; add al, bh ; out 0xf5, al ; call qword ptr [rax]
0x000000000018e427 : add byte ptr [rsi + rdx*8 - 5], al ; call rsp
0x00000000001abc73 : add byte ptr [rsi + rdx*8], ah ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x00000000001abc8b : add byte ptr [rsi + rdx*8], bh ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x000000000019fc63 : add byte ptr [rsi + rdx], dl ; add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000001a5cbb : add byte ptr [rsi + rsi*2 + 1], ch ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000188c47 : add byte ptr [rsi - 0x19], bh ; jmp 0x188c4f
0x000000000019ccfb : add byte ptr [rsi - 0x61100000], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000002373d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000747ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000bd42d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000037c4d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38644a] ; ret
0x0000000000187564 : add byte ptr [rsi - 0x7a6f0004], al ; cld ; jmp qword ptr [rax]
0x00000000001a3f00 : add byte ptr [rsi - 0xd], cl ; jmp qword ptr [rbx]
0x0000000000178900 : add byte ptr [rsi - 0xe], dl ; call qword ptr [rax]
0x0000000000178564 : add byte ptr [rsi - 0xf], ah ; call qword ptr [rax]
0x000000000018d517 : add byte ptr [rsi - 7], al ; jmp rsp
0x00000000001a1cab : add byte ptr [rsi], 0xd ; mov dword ptr [rcx + 0xd1cfff1], ecx ; ret
0x00000000001b366b : add byte ptr [rsi], 0xd ; push rax ; ret
0x0000000000191e93 : add byte ptr [rsi], 0xd ; ret
0x00000000001a08c3 : add byte ptr [rsi], 0xd ; ret 0xf174
0x00000000001a113b : add byte ptr [rsi], 0xd ; ret 0xf17d
0x00000000001a9d2b : add byte ptr [rsi], 0xd ; ret 0xf4ec
0x00000000001ab29b : add byte ptr [rsi], 0xd ; ret 0xf559
0x00000000001ab913 : add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001b3623 : add byte ptr [rsi], 0xd ; xchg eax, ecx ; ret
0x0000000000186f58 : add byte ptr [rsi], ch ; cld ; jmp rax
0x000000000000d04f : add byte ptr [rsi], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000018a107 : add byte ptr [rsi], dh ; shr bh, 1 ; call rsp
0x0000000000060b4b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xffec
0x0000000000186710 : add byte ptr [rsi], dl ; sti ; call rax
0x00000000000e4d21 : add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000e4619 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000005beb4 : add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000001aaafb : add byte ptr [rsp + rax*8 - 0x2c4fffff], ch ; cmc ; jmp qword ptr [rsi]
0x00000000001aaae3 : add byte ptr [rsp + rax*8 - 0x3bf7ffff], dl ; clc ; jmp qword ptr [rsi]
0x000000000018e14f : add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x00000000001aaa53 : add byte ptr [rsp + rax*8], al ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001aaa6b : add byte ptr [rsp + rax*8], bl ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001aaa83 : add byte ptr [rsp + rax*8], dh ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001952fb : add byte ptr [rsp + rbp*2 - 0x6d500000], ch ; in eax, dx ; call qword ptr [rax]
0x000000000019d29b : add byte ptr [rsp + rbp*8], cl ; add byte ptr [rax - 0x17], ah ; out dx, al ; call qword ptr [rax]
0x00000000001a1273 : add byte ptr [rsp + rbp], ah ; add dword ptr [rax], eax ; cmp dl, dl ; int1 ; jmp qword ptr [rbx]
0x0000000000188f3f : add byte ptr [rsp + rbx*2 - 0x13], ah ; push rsp ; ret 0
0x00000000001a826b : add byte ptr [rsp + rbx*4], bl ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a8283 : add byte ptr [rsp + rbx*4], dh ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001982a3 : add byte ptr [rsp + rbx*4], dl ; add byte ptr [rax], bh ; shr ch, cl ; call rcx
0x000000000018a17f : add byte ptr [rsp + rbx*8 - 0x11], dl ; jmp rsp
0x000000000016dfbf : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000001a725b : add byte ptr [rsp + rcx*4], cl ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x0000000000189be7 : add byte ptr [rsp + rdi - 0x11], al ; call rsp
0x00000000001a6303 : add byte ptr [rsp + rdi*2 - 0x45c7ffff], dh ; hlt ; jmp qword ptr [rcx]
0x000000000019a2f3 : add byte ptr [rsp + rdi*4 + 0x17780000], ah ; out dx, al ; call qword ptr [rdi]
0x000000000019e30b : add byte ptr [rsp + rdi*8 - 0x63400000], bh ; out dx, eax ; call qword ptr [rdi]
0x00000000001877a4 : add byte ptr [rsp + rdi*8 - 1], bh ; jo 0x18782c ; cld ; jmp rax
0x00000000001b3ac3 : add byte ptr [rsp + rdx*2 + 2], dh ; add al, cl ; jno 0x1b3aca ; call qword ptr [rbx]
0x0000000000188b27 : add byte ptr [rsp + rdx*2], al ; jmp 0x188b2f
0x00000000001a3a6b : add byte ptr [rsp + rdx*2], bl ; add dword ptr [rax], eax ; loopne 0x1a3aa5 ; jmp rdx
0x00000000001abaab : add byte ptr [rsp + rdx*8 + 1], bl ; add byte ptr [rax], ah ; out 0xf5, al ; call qword ptr [rax]
0x00000000001aba73 : add byte ptr [rsp + rdx*8], ah ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x000000000018b0cf : add byte ptr [rsp + rdx], dh ; hlt ; call rsp
0x000000000018b61f : add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x000000000018b13f : add byte ptr [rsp + rsi - 0xc], dh ; jmp rsp
0x00000000001886ef : add byte ptr [rsp + rsi*8 - 0x16], dl ; jmp rsp
0x0000000000194ad3 : add byte ptr [rsp - 0xa680000], al ; in al, dx ; call qword ptr [rax]
0x00000000000f4c51 : add byte ptr ds:[rdx + rax + 0x5b], dh ; ret
0x00000000000378fa : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f813b : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000000b70e5 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x50f0ec18], al ; ret 0x8941
0x0000000000194ad5 : add byte ptr fs:[rax], al ; cwde ; cmc ; in al, dx ; call qword ptr [rax]
0x000000000007a430 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ceadb : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret 0x850f
0x00000000001134d3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f09b3 : add byte ptr gs:[rcx + rcx*4 - 0x38], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000539f4 : add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000005d5d7 : add byte ptr ss:[rbx + 0x5d], bl ; ret
0x000000000005beb3 : add byte ptr ss:[rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000001b78b7 : add ch, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x00000000001899c9 : add ch, bh ; call rsp
0x00000000000c6282 : add ch, bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003698f : add ch, bl ; fpatan ; ret
0x000000000018935f : add ch, bl ; mov dh, ch ; call rsp
0x0000000000186b34 : add ch, bl ; sti ; jmp rax
0x00000000000c61c2 : add ch, bl ; xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000176d5c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000176d5d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000b240a : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000007531a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000187b08 : add ch, byte ptr [rdi - 0x516d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000058d5f : add ch, cl ; ret
0x00000000000c4b2a : add ch, cl ; xchg eax, edx ; idiv edi ; push rsi ; ret
0x000000000007137f : add cl, al ; out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x00000000000f9fe7 : add cl, bl ; ret 0xcad9
0x00000000000f7ff5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000099c6c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000a3a25 : add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a3999 : add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000b0431 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000a3a0d : add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x000000000003e92f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000117c53 : add cl, byte ptr [rax + 0x39] ; rcr dword ptr [rcx], -0x40 ; ret
0x000000000007718d : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000073f8a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x00000000000855a6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000061a59 : add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x00000000000f7ff6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000002c677 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x00000000000504f4 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x000000000007ff61 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x0000000000099c6d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000968e7 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000187610 : add cl, byte ptr [rax - 0x786d0004] ; cld ; jmp qword ptr [rdx]
0x000000000007c682 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000f3a12 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000027c5b : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000086d90 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000ae51d : add cl, byte ptr [rax - 0x7d] ; ret 0x491e
0x00000000000c3c80 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000001fbeb : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000c375d : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x000000000012e419 : add cl, byte ptr [rax - 0x7d] ; ret 0xb804
0x000000000006cd69 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000086df3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000012e445 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x000000000012343b : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x000000000004982c : add cl, byte ptr [rbp + 0x39] ; ret
0x000000000014d372 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000003e909 : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000a644c : add cl, byte ptr [rcx + 0x39] ; ret
0x00000000001ae1de : add cl, byte ptr [rcx + 0xd1cfff5] ; jp 0x1ae177 ; cmc ; jmp qword ptr [rdx]
0x0000000000049588 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x495a4
0x0000000000125462 : add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x00000000000d7d3a : add cl, byte ptr [rcx - 0x7d] ; ret 0x4510
0x0000000000047fb0 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000476a9 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000002fd04 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000ebd3c : add cl, byte ptr [rdi] ; ret 0xb9eb
0x0000000000114975 : add cl, byte ptr [rdi] ; ret 0xf3c3
0x00000000000ebc2c : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000cda6f : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000006d767 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000013ceab : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000504f3 : add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000001a96a4 : add cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000000b42cf : add cl, ch ; int 0xfa
0x0000000000058afb : add cl, ch ; push rdi ; ret 0xffff
0x000000000002c2c4 : add cl, ch ; ret
0x0000000000045f58 : add cl, ch ; ret 0xffe1
0x0000000000060b4f : add cl, ch ; ret 0xffec
0x00000000000b7fb1 : add cl, ch ; ret 0xfff3
0x000000000010393f : add cl, ch ; ret 0xfffd
0x00000000000c2e98 : add cl, ch ; ret 0xfffe
0x000000000006a0ae : add cl, ch ; ret 0xffff
0x0000000000179519 : add dh, ah ; jmp rcx
0x0000000000046ec3 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011a287 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000010d71a : add dh, al ; add eax, 0x2b520e ; add ecx, ebp ; ret
0x000000000017a07b : add dh, bh ; jmp rdi
0x0000000000171227 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000014d523 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000036f97 : add dh, bl ; ret
0x00000000000bf67c : add dh, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x00000000000a0dab : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001269b2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001935bd : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000dbc3d : add dh, byte ptr [rcx] ; imul al ; jnp 0xdbc53 ; sti ; call rcx
0x00000000001269b1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001ac480 : add dh, dh ; cmc ; call qword ptr [rcx]
0x0000000000081aec : add dh, dh ; ret
0x0000000000135ab2 : add dh, dh ; ret 0x7402
0x000000000008c738 : add dh, dh ; ret 0x7404
0x000000000006e327 : add dh, dh ; ret 0x7420
0x00000000001625a7 : add dh, dh ; ret 0x7501
0x00000000001625b4 : add dh, dh ; ret 0x7502
0x00000000001625c1 : add dh, dh ; ret 0x7504
0x0000000000072f96 : add dh, dh ; ret 0x7508
0x0000000000162579 : add dh, dh ; ret 0x7510
0x0000000000162586 : add dh, dh ; ret 0x7520
0x00000000000eb7bf : add dh, dh ; ret 0x7540
0x00000000000df961 : add dh, dh ; ret 0xf10
0x0000000000098472 : add dh, dh ; ret 0xf20
0x000000000004f735 : add dh, dh ; ret 0xf3f
0x000000000009847b : add dh, dh ; ret 0xf40
0x00000000001a25c9 : add dh, dl ; call rdi
0x00000000000b0174 : add dil, r15b ; ret
0x000000000018d9e1 : add dl, bh ; jmp rsp
0x000000000019fd31 : add dl, byte ptr [rax + 0x41100e0a] ; ret
0x00000000001af299 : add dl, byte ptr [rbp + 0xa] ; ret
0x00000000001b019e : add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x0000000000187324 : add dl, byte ptr [rsi - 4] ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x00000000001b77af : add dl, ch ; add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x000000000019d6a4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000047eee : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000258f0 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x0000000000108f8f : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x00000000001a2d75 : add dword ptr [r8], r8d ; clc ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001a2c1d : add dword ptr [r8], r8d ; jo 0x1a2baf ; jmp qword ptr [rcx]
0x0000000000189f55 : add dword ptr [r8], r8d ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a2c05 : add dword ptr [r8], r8d ; pop rax ; xchg edx, esi ; jmp qword ptr [rcx]
0x000000000018a17d : add dword ptr [r8], r8d ; push rsp ; fsub st(7), st(0) ; jmp rsp
0x00000000001a2bed : add dword ptr [r8], r8d ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000000d20d4 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000a18df : add dword ptr [r9 + 0x5c], eax ; ret
0x0000000000028564 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000d0cb8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000015cc21 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000004fe03 : add dword ptr [rax + 0x29], ecx ; ret 0x8944
0x0000000000047109 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000283fe : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000966e1 : add dword ptr [rax + 0x39], ecx ; ret 0x1a75
0x000000000009346e : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x00000000000932ad : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000003958d : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000aea72 : add dword ptr [rax + 0x39], ecx ; ret 0xe877
0x000000000003d8df : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000ad355 : add dword ptr [rax + 0x39], ecx ; ret 0xed77
0x0000000000098170 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x000000000003827b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000051abd : add dword ptr [rax + 0x58b4801], ebp ; stc ; ret 0x36
0x00000000001239d1 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x00000000001020a7 : add dword ptr [rax + 0xf], eax ; ret 0xc3f3
0x00000000000a6444 : add dword ptr [rax + 0xf], ecx ; ret 0xc148
0x000000000005a232 : add dword ptr [rax + 1], ecx ; ret
0x000000000005bbb2 : add dword ptr [rax + 1], ecx ; ret 0x148
0x0000000000035426 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d0c33 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000007e56f : add dword ptr [rax + rax], esi ; ret
0x00000000000310d3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000f7ff2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000099c46 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000158882 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000968be : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x0000000000056e87 : add dword ptr [rax - 0x77], ecx ; dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000ba1db : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x000000000007b42b : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007373d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000088881 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000c4610 : add dword ptr [rax - 0x77], ecx ; ret 0x97e9
0x00000000000c4880 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000002c516 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000117db0 : add dword ptr [rax - 0x78], eax ; ja 0x117dbb ; ret
0x0000000000082e9e : add dword ptr [rax - 0x7b], ecx ; ret 0x2c75
0x0000000000082622 : add dword ptr [rax - 0x7b], ecx ; ret 0x7075
0x000000000007f510 : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x00000000000d1ccd : add dword ptr [rax - 0x7cb7e9f4], ecx ; ret 0x4401
0x0000000000110e49 : add dword ptr [rax - 0x7d], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000015e83a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000e4d1c : add dword ptr [rax - 0x7d], ecx ; jns 0xe4d22 ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x0000000000097488 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000022f5a : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000113ce2 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000047a1c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000ca3ba : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x000000000003aa79 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000937bb : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000003afaf : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000bcae9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000258f1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000000a64f7 : add dword ptr [rax - 0x7d], ecx ; ret 0x7901
0x00000000000dce3f : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000002ea05 : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000c38ec : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006cc7c : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000006d67b : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000227b2 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000227d2 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x00000000000ef9be : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x0000000000054ff3 : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d3dc4 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d9b75 : add dword ptr [rax - 0x7d], r9d ; ret
0x0000000000188475 : add dword ptr [rax], 0xea9ede00 ; call rsp
0x00000000000fcbc4 : add dword ptr [rax], 1 ; ret
0x00000000001aabbe : add dword ptr [rax], eax ; adc ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001aaa0e : add dword ptr [rax], eax ; adc bl, 0xf5 ; jmp qword ptr [rsi]
0x00000000001ac7fe : add dword ptr [rax], eax ; adc bl, bh ; cmc ; call qword ptr [rax]
0x000000000019ecae : add dword ptr [rax], eax ; adc byte ptr [rax - 0x10], bl ; jmp rsi
0x00000000001acbae : add dword ptr [rax], eax ; adc byte ptr [rax], al ; idiv bh ; ret 3
0x00000000001a7e7e : add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a865e : add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a80ee : add dword ptr [rax], eax ; adc byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a245e : add dword ptr [rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a0bfe : add dword ptr [rax], eax ; add bh, 0xf1 ; call qword ptr [rbx]
0x00000000001abc8e : add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000000c376b : add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000011497e : add dword ptr [rax], eax ; add bl, al ; ret
0x00000000001ac82e : add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x000000000006e42a : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000b111c : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000045db8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005e6f8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d6464 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000a71d6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000012f378 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c4436 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x00000000000c7781 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0xce ; jmp 0xc7755
0x00000000000e2535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000d817a : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000bc937 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e562d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000094415 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e96d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000092959 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000e24e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x00000000000b2c14 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; inc dword ptr [rbx + rcx*4 + 0x25] ; call qword ptr [rcx]
0x0000000000074f68 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000082bea : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000005c15a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2ae1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000002689f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000010869d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e70f3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000d3f20 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000013816d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007d58a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000008b250 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000013e60f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001380c1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002bc54 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000095ed6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000073ddb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000017122a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001703da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000170202 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001701fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170992 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000f918a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f277f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011f635 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x12b8d6
0x00000000000eef66 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xeb1e6
0x00000000000f5db1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000164561 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x164578 ; neg eax ; ret
0x00000000000a2ce1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xa2cf1 ; neg eax ; ret
0x00000000001624b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x1624c8 ; neg eax ; ret
0x0000000000058af8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x54d5e
0x00000000000ba233 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xba200
0x000000000004bb6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000012ea63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12ea76 ; ret
0x000000000012eaa3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12eab6 ; ret
0x00000000000a4076 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x0000000000039d92 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000123d4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000085ea8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000012e41f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000120eaa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f5f9e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f5e6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000105a2d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x101d29
0x00000000000f5de2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000074d71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x70ff9
0x000000000011fe5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000129712 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6228 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006d82b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006ceb0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000073ac1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x000000000005392e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053860 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000074ffc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d3e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f9123 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002bfd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005dd6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a55a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5557
0x00000000000a7de0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7d97
0x00000000000aa490 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa447
0x00000000000d99d6 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001a04ee : add dword ptr [rax], eax ; add byte ptr [rbp - 0xf], bh ; call qword ptr [rax]
0x0000000000070734 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000eb444 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021999 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000846d3 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret
0x00000000000da2bd : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret 0xc148
0x00000000000efba7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6117c385], cl ; ret
0x0000000000075e4e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fe08], al ; ret
0x000000000008540f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x000000000008561f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000851a1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000094794 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000249cc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001a041e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xf], al ; call rsi
0x000000000012f90d : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x00000000000b25d3 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b729e : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000e1a08 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011491e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000114959 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000000df96d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x000000000000a1d9 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret
0x0000000000096f9a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001a3efe : add dword ptr [rax], eax ; add byte ptr [rsi - 0xd], cl ; jmp qword ptr [rbx]
0x000000000013461b : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x000000000006a0ac : add dword ptr [rax], eax ; add cl, ch ; ret 0xffff
0x00000000001ac47e : add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x0000000000134784 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001625a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001625b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001625bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000162577 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000162584 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000162591 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000f0bf4 : add dword ptr [rax], eax ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f06f1 : add dword ptr [rax], eax ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000054530 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000018af2e : add dword ptr [rax], eax ; and al, 0x90 ; call rsp
0x000000000018a1ae : add dword ptr [rax], eax ; and al, 0xe1 ; out dx, eax ; jmp rsp
0x00000000001aa9ae : add dword ptr [rax], eax ; and bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a1f0e : add dword ptr [rax], eax ; and ch, 0xf1 ; jmp rsi
0x00000000001a664e : add dword ptr [rax], eax ; and cl, al ; hlt ; jmp qword ptr [rsi]
0x00000000001abaae : add dword ptr [rax], eax ; and dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac72e : add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001a7d06 : add dword ptr [rax], eax ; call 0x111a723a
0x00000000001a3346 : add dword ptr [rax], eax ; call 0x131a2631
0x00000000001aba26 : add dword ptr [rax], eax ; call 0x141ab017
0x00000000001a2446 : add dword ptr [rax], eax ; call 0x221a164d
0x00000000001a2c96 : add dword ptr [rax], eax ; call 0x221a1f29
0x00000000001a5726 : add dword ptr [rax], eax ; call 0x221a4baa
0x00000000001a62b6 : add dword ptr [rax], eax ; call 0x221a577b
0x00000000001a6746 : add dword ptr [rax], eax ; call 0x231a5c1a
0x00000000001a8816 : add dword ptr [rax], eax ; call 0xffffffffe11a7d64
0x000000000018a13e : add dword ptr [rax], eax ; call rax
0x000000000019fc66 : add dword ptr [rax], eax ; clc ; cld ; jmp qword ptr [rbx]
0x00000000001a8646 : add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ab9f6 : add dword ptr [rax], eax ; clc ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a5536 : add dword ptr [rax], eax ; clc ; jae 0x1a5534 ; jmp qword ptr [rcx]
0x00000000001a2d76 : add dword ptr [rax], eax ; clc ; mov edx, esi ; jmp qword ptr [rdi]
0x00000000001a5116 : add dword ptr [rax], eax ; clc ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001abc46 : add dword ptr [rax], eax ; clc ; out 0xf5, al ; call qword ptr [rax]
0x00000000001aaba6 : add dword ptr [rax], eax ; clc ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a7e66 : add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a2506 : add dword ptr [rax], eax ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001a87c6 : add dword ptr [rax], eax ; cmc ; jmp rdi
0x0000000000189d06 : add dword ptr [rax], eax ; cmovnp ebp, edi ; call rsp
0x0000000000189be6 : add dword ptr [rax], eax ; cmp al, 0xef ; call rsp
0x00000000001aa9c6 : add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a85ce : add dword ptr [rax], eax ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7956 : add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x000000000019fee6 : add dword ptr [rax], eax ; cmp byte ptr [rsi], dl ; int1 ; jmp qword ptr [rcx]
0x00000000001abe96 : add dword ptr [rax], eax ; cmp ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a6c56 : add dword ptr [rax], eax ; cmp dl, bl ; hlt ; call qword ptr [rax]
0x00000000001a67a6 : add dword ptr [rax], eax ; cmp dl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a1276 : add dword ptr [rax], eax ; cmp dl, dl ; int1 ; jmp qword ptr [rbx]
0x00000000001a868e : add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000018b3b6 : add dword ptr [rax], eax ; cmp r14d, ebp ; call rsp
0x00000000001a85e6 : add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a2196 : add dword ptr [rax], eax ; cwde ; int1 ; int1 ; jmp qword ptr [rdx]
0x00000000001aaa26 : add dword ptr [rax], eax ; cwde ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a5eb6 : add dword ptr [rax], eax ; cwde ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a7ca6 : add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001aa966 : add dword ptr [rax], eax ; fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x000000000019ed96 : add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x00000000001a6cb6 : add dword ptr [rax], eax ; fcomp st(2) ; hlt ; call qword ptr [rdx]
0x00000000001a83a6 : add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001a40d6 : add dword ptr [rax], eax ; fsubr dword ptr [rdi - 0xd] ; jmp rax
0x00000000001abde6 : add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000018adb6 : add dword ptr [rax], eax ; hlt ; jb 0x18adb3 ; jmp rsp
0x000000000018b30e : add dword ptr [rax], eax ; hlt ; xlatb ; hlt ; jmp rsp
0x000000000018987e : add dword ptr [rax], eax ; in al, -0x14 ; out dx, al ; call rsp
0x000000000018aaae : add dword ptr [rax], eax ; in al, -0x57 ; call rsp
0x00000000001a53f6 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018981e : add dword ptr [rax], eax ; je 0x1897fe ; out dx, al ; call rsp
0x000000000018b13e : add dword ptr [rax], eax ; je 0x18b17b ; hlt ; jmp rsp
0x00000000001a5786 : add dword ptr [rax], eax ; jns 0x1a5784 ; jmp qword ptr [rcx]
0x00000000001a080e : add dword ptr [rax], eax ; jo 0x1a07dc ; int1 ; call qword ptr [rdx]
0x00000000001a0bce : add dword ptr [rax], eax ; jo 0x1a0b9e ; int1 ; call qword ptr [rsi]
0x00000000001a2c1e : add dword ptr [rax], eax ; jo 0x1a2bae ; jmp qword ptr [rcx]
0x00000000001a504e : add dword ptr [rax], eax ; jo 0x1a50ba ; hlt ; jmp qword ptr [rcx]
0x00000000001a637e : add dword ptr [rax], eax ; jo 0x1a6342 ; hlt ; jmp qword ptr [rcx]
0x00000000001a648e : add dword ptr [rax], eax ; jo 0x1a6455 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7ede : add dword ptr [rax], eax ; jo 0x1a7f12 ; cmc ; jmp qword ptr [rcx]
0x00000000001aac1e : add dword ptr [rax], eax ; jo 0x1aabfb ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7de : add dword ptr [rax], eax ; jo 0x1ab7ca ; cmc ; call qword ptr [rax]
0x00000000001a0586 : add dword ptr [rax], eax ; js 0x1a052a ; int1 ; call qword ptr [rax]
0x00000000001a0be6 : add dword ptr [rax], eax ; js 0x1a0bb6 ; int1 ; call qword ptr [rbx]
0x00000000001a6dc6 : add dword ptr [rax], eax ; js 0x1a6dac ; hlt ; jmp qword ptr [rcx]
0x00000000001a75d6 : add dword ptr [rax], eax ; js 0x1a75e9 ; cmc ; call rsp
0x00000000001a76c6 : add dword ptr [rax], eax ; js 0x1a76da ; cmc ; jmp qword ptr [rcx]
0x00000000001a7fb6 : add dword ptr [rax], eax ; js 0x1a7feb ; cmc ; jmp qword ptr [rcx]
0x00000000001aa906 : add dword ptr [rax], eax ; js 0x1aa8e1 ; cmc ; jmp qword ptr [rsi]
0x00000000001a266e : add dword ptr [rax], eax ; loopne 0x1a267b ; jmp rdx
0x00000000001a266d : add dword ptr [rax], eax ; loopne 0x1a267c ; jmp rdx
0x00000000001a3a6e : add dword ptr [rax], eax ; loopne 0x1a3aa2 ; jmp rdx
0x00000000001a50fe : add dword ptr [rax], eax ; loopne 0x1a516a ; hlt ; jmp qword ptr [rcx]
0x00000000001a551e : add dword ptr [rax], eax ; loopne 0x1a559a ; hlt ; jmp qword ptr [rcx]
0x00000000001a7e4e : add dword ptr [rax], eax ; loopne 0x1a7e81 ; cmc ; jmp qword ptr [rcx]
0x00000000001a823e : add dword ptr [rax], eax ; loopne 0x1a8276 ; cmc ; jmp qword ptr [rcx]
0x00000000001aab8e : add dword ptr [rax], eax ; loopne 0x1aab6a ; cmc ; jmp qword ptr [rsi]
0x000000000018a81e : add dword ptr [rax], eax ; mov ah, 0xcc ; int1 ; call rsp
0x00000000001aac36 : add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a7cbe : add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001a80be : add dword ptr [rax], eax ; mov al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a85fe : add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x000000000019fe1e : add dword ptr [rax], eax ; mov al, 0xa ; int1 ; call qword ptr [rcx]
0x000000000019fd9e : add dword ptr [rax], eax ; mov al, 0xa ; int1 ; jmp qword ptr [rcx]
0x00000000001a5ece : add dword ptr [rax], eax ; mov al, 0xae ; hlt ; jmp qword ptr [rcx]
0x00000000001a5fbe : add dword ptr [rax], eax ; mov al, 0xb1 ; hlt ; jmp qword ptr [rcx]
0x00000000001a605e : add dword ptr [rax], eax ; mov al, 0xb2 ; hlt ; call qword ptr [rsi]
0x00000000001aaa3e : add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001ac6ce : add dword ptr [rax], eax ; mov al, 0xf8 ; cmc ; call qword ptr [rax]
0x00000000001a495e : add dword ptr [rax], eax ; mov al, 0xfc ; call qword ptr [rsi]
0x00000000001a56c6 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a82b6 : add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ef6 : add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8136 : add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ac916 : add dword ptr [rax], eax ; mov dl, bh ; cmc ; jmp rsp
0x000000000018a006 : add dword ptr [rax], eax ; mov ecx, esp ; out dx, eax ; call rsp
0x0000000000096da5 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000108f90 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000096cd1 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000018a726 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dl, 0xf1 ; call rsp
0x000000000018aa4e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, esi ; jmp rsp
0x0000000000189f56 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a725e : add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x00000000001aa91e : add dword ptr [rax], eax ; nop ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a0efe : add dword ptr [rax], eax ; nop ; sal cl, 1 ; call rsi
0x00000000001a7fce : add dword ptr [rax], eax ; nop ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001aaa56 : add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x00000000001abc76 : add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac816 : add dword ptr [rax], eax ; or bl, bh ; cmc ; call qword ptr [rax]
0x00000000001aa996 : add dword ptr [rax], eax ; or bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a0396 : add dword ptr [rax], eax ; or byte ptr [rax - 0xf], al ; jmp qword ptr [rcx]
0x000000000018b3de : add dword ptr [rax], eax ; outsb dx, byte ptr fs:[rsi] ; cmc ; inc esp ; ret
0x00000000001a25c6 : add dword ptr [rax], eax ; pop rax ; add dh, dl ; call rdi
0x00000000001a86a6 : add dword ptr [rax], eax ; pop rax ; cmp ebp, esi ; jmp rbx
0x00000000001ab166 : add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a2076 : add dword ptr [rax], eax ; pop rax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x000000000018adce : add dword ptr [rax], eax ; pop rax ; jne 0x18adcb ; call rsp
0x00000000001a5036 : add dword ptr [rax], eax ; pop rax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a7ec6 : add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a2c06 : add dword ptr [rax], eax ; pop rax ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a8286 : add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001899c6 : add dword ptr [rax], eax ; pop rcx ; add ch, bh ; call rsp
0x000000000018aebe : add dword ptr [rax], eax ; pop rsp ; mov dh, bl ; jmp rsp
0x00000000001abede : add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x00000000001ab68e : add dword ptr [rax], eax ; push rax ; loope 0x1ab68d ; call qword ptr [rcx]
0x00000000001a2efe : add dword ptr [rax], eax ; push rax ; mov dh, dl ; call qword ptr [rdx]
0x00000000001aa9de : add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000018a17e : add dword ptr [rax], eax ; push rsp ; fsub st(7), st(0) ; jmp rsp
0x000000000018a7b6 : add dword ptr [rax], eax ; push rsp ; ret 0xfff1
0x00000000001aa94e : add dword ptr [rax], eax ; rcl dl, 0xf5 ; jmp qword ptr [rsi]
0x00000000001a6d4e : add dword ptr [rax], eax ; rcr ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e0e : add dword ptr [rax], eax ; rcr ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a6e6e : add dword ptr [rax], eax ; rcr ch, 1 ; hlt ; call rbx
0x0000000000086c59 : add dword ptr [rax], eax ; ret
0x0000000000189f86 : add dword ptr [rax], eax ; ret 0xefca
0x00000000001ad8f6 : add dword ptr [rax], eax ; ret 0xf619
0x00000000001a046e : add dword ptr [rax], eax ; rol byte ptr [rsi - 0xf], 1 ; call qword ptr [rdx]
0x000000000019fd1e : add dword ptr [rax], eax ; ror byte ptr [rax], 1 ; int1 ; jmp rcx
0x00000000001a770e : add dword ptr [rax], eax ; ror byte ptr [rbx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a0e3e : add dword ptr [rax], eax ; ror dl, 0xf1 ; jmp qword ptr [rax]
0x000000000018e426 : add dword ptr [rax], eax ; salc ; sti ; call rsp
0x00000000001a47ae : add dword ptr [rax], eax ; sar al, 1 ; jmp qword ptr [rdi]
0x00000000001a23ce : add dword ptr [rax], eax ; sar dl, 1 ; int1 ; jmp qword ptr [rcx]
0x00000000001a24d6 : add dword ptr [rax], eax ; sbb ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a46c6 : add dword ptr [rax], eax ; sbb bh, dh ; jmp qword ptr [rax]
0x00000000001ac7e6 : add dword ptr [rax], eax ; sbb bl, bh ; cmc ; call qword ptr [rax]
0x00000000001a7666 : add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a5756 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001aba76 : add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ac746 : add dword ptr [rax], eax ; sbb dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ab086 : add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x0000000000189d96 : add dword ptr [rax], eax ; sbb dword ptr [rbp - 0x11], ecx ; jmp rsp
0x00000000001a7bbe : add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf5 ; jmp qword ptr [rcx]
0x000000000018a106 : add dword ptr [rax], eax ; shr bh, 1 ; call rsp
0x00000000001a817e : add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001899a6 : add dword ptr [rax], eax ; sti ; add bh, ch ; call rsp
0x00000000001aabd6 : add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a7f86 : add dword ptr [rax], eax ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7c8e : add dword ptr [rax], eax ; sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7e96 : add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8676 : add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8106 : add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7eae : add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7ba6 : add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a76f6 : add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001aa936 : add dword ptr [rax], eax ; test al, 0xd2 ; cmc ; jmp qword ptr [rsi]
0x00000000001a6df6 : add dword ptr [rax], eax ; test al, 0xdd ; hlt ; jmp qword ptr [rcx]
0x00000000001a2026 : add dword ptr [rax], eax ; test al, 0xeb ; int1 ; call qword ptr [rdx]
0x0000000000189c8e : add dword ptr [rax], eax ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x0000000000189966 : add dword ptr [rax], eax ; xchg eax, esp ; cld ; out dx, al ; jmp rsp
0x000000000018b3d6 : add dword ptr [rax], eax ; xchg eax, esp ; imul esi, ebp, -1 ; pop rsp ; ret
0x000000000018e3e6 : add dword ptr [rax], eax ; xchg eax, esp ; push rdx ; sti ; call rsp
0x000000000018bfce : add dword ptr [rax], eax ; xchg eax, esp ; sub esi, edi ; call rsp
0x00000000001a2bee : add dword ptr [rax], eax ; xchg edx, esi ; jmp qword ptr [rcx]
0x000000000018e596 : add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x00000000001a24ee : add dword ptr [rax], eax ; xor ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000018b0ce : add dword ptr [rax], eax ; xor al, 0x14 ; hlt ; call rsp
0x000000000018e636 : add dword ptr [rax], eax ; xor al, 0xe1 ; std ; jmp rsp
0x000000000018b61e : add dword ptr [rax], eax ; xor al, 0xf6 ; jmp rsp
0x00000000001a826e : add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a767e : add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a6d7e : add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000091713 : add dword ptr [rax], edi ; ret 0x4788
0x000000000008b795 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a2c95 : add dword ptr [rax], r8d ; call 0x221a1f2a
0x00000000001a2c94 : add dword ptr [rax], r8d ; call 0x221a1f2b
0x00000000000c87eb : add dword ptr [rbp + 0x1441204], ecx ; ret 0xc8d
0x000000000009636b : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000d82b3 : add dword ptr [rbp + 0x39], eax ; ret 0x677e
0x00000000000d3d83 : add dword ptr [rbp + 0x39], eax ; ret 0x8e0f
0x00000000000c84f1 : add dword ptr [rbp + 0x75], ebx ; jmp 0xc8544
0x00000000000376ea : add dword ptr [rbp + 0xb], esi ; xor eax, eax ; nop ; ret
0x0000000000108f6c : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000b8f8f : add dword ptr [rbp + 1], ecx ; ret
0x00000000000a32b7 : add dword ptr [rbp - 0x1a], esi ; mov rax, rbx ; pop rbx ; ret
0x0000000000097cd8 : add dword ptr [rbp - 0x1b], esi ; mov rax, rbx ; pop rbx ; ret
0x00000000000382a4 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x0000000000097ad1 : add dword ptr [rbp - 0x3c], esi ; nop dword ptr [rax] ; ret
0x000000000007d6bf : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000d1ed4 : add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x000000000010bec9 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x000000000009763c : add dword ptr [rbp - 0xf], esi ; ret
0x000000000009748c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000014d3e2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000095db6 : add dword ptr [rbx + 0x294803e0], eax ; ret
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000080ccb : add dword ptr [rbx + 0x33d4fe05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000034633 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x00000000000dbd7d : add dword ptr [rbx + rcx*4 - 0xa], esi ; ret 0x7408
0x0000000000112da1 : add dword ptr [rbx - 0x2037b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002ea02 : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000000d0f58 : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d353d : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000001abb0c : add dword ptr [rbx - 0xb], ebx ; jmp qword ptr [rdx]
0x000000000007d44f : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001b131a : add dword ptr [rbx], eax ; ret
0x0000000000127891 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000a37af : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000d95de : add dword ptr [rcx + 0x39], eax ; ret 0x267e
0x0000000000113c61 : add dword ptr [rcx + 0x39], eax ; ret 0xd975
0x00000000000d9604 : add dword ptr [rcx + 0x39], eax ; ret 0xda7f
0x0000000000092298 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000012d1fc : add dword ptr [rcx + 0x48], esi ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a18e0 : add dword ptr [rcx + 0x5c], eax ; ret
0x000000000011d6a3 : add dword ptr [rcx + 0x5d], eax ; ret
0x0000000000097b03 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x0000000000040a1c : add dword ptr [rcx + 1], ecx ; ret
0x0000000000028df5 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000011ab7a : add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x00000000000479b4 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x00000000000b23cd : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000002a76b : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x0000000000099c86 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000123d39 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000005c722 : add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x00000000000476a6 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000000a8cc3 : add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28dd4d3
0x000000000002a965 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000117fcf : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a7c75 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x00000000000d892f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x00000000001a67a5 : add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x00000000001a67bd : add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000000a34eb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000114985 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000000000d3876 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4d02e8d
0x00000000000d3878 : add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4d02e8b
0x00000000000fcefb : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e367b : add dword ptr [rcx], edi ; ret
0x00000000000e346c : add dword ptr [rcx], edi ; ret 0x8c0f
0x0000000000047363 : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000000d7810 : add dword ptr [rcx], edi ; ret 0xd675
0x00000000000dc6db : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0xc339
0x000000000012e740 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012e750 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001657ba : add dword ptr [rdi + 3], esi ; ret
0x0000000000035ad6 : add dword ptr [rdi + rbx*2], edi ; je 0x35af1 ; jmp 0x35aa5
0x0000000000092ce7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000000941bc : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026f7a : add dword ptr [rdi], 1 ; jmp 0x26f46
0x00000000001aa621 : add dword ptr [rdi], 3 ; add dword ptr [rdx], r9d ; ret
0x0000000000119120 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d0de6 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5016 : add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000002fde5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000049c1b : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000011a7a0 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000097bd0 : add dword ptr [rdi], ecx ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000b742e : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000015a6fe : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000c418f : add dword ptr [rdi], ecx ; xchg byte ptr [rdi - 0xa000000], bh ; ret
0x0000000000111f7b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000047c21 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000a1db2 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x0000000000099c44 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000001adeee : add dword ptr [rdx + 0xd1cfff5], ecx ; loopne 0x1ade86 ; cmc ; jmp qword ptr [rdx]
0x000000000005dcf8 : add dword ptr [rdx + 4], 1 ; ret
0x000000000005dd78 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000fc90b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000195efc : add dword ptr [rdx - 0x13], edi ; jmp qword ptr [rdx]
0x000000000019089d : add dword ptr [rdx], 0x44 ; ret
0x00000000001a088c : add dword ptr [rdx], 0x4a ; ret
0x000000000019c574 : add dword ptr [rdx], 0x51 ; ret
0x00000000001aae45 : add dword ptr [rdx], 0x57 ; ret
0x0000000000193464 : add dword ptr [rdx], 0x63 ; ret
0x000000000019c57d : add dword ptr [rdx], 0x65 ; ret
0x00000000001b6785 : add dword ptr [rdx], 0xf7f9c800 ; call qword ptr [rax]
0x00000000001b679d : add dword ptr [rdx], 0xfaf2b000 ; call rcx
0x00000000001964d4 : add dword ptr [rdx], 2 ; pushfq ; ret
0x000000000019c9f4 : add dword ptr [rdx], 2 ; ret
0x000000000019babc : add dword ptr [rdx], 3 ; add al, byte ptr [rcx] ; ret
0x000000000018c07d : add dword ptr [rdx], eax ; add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x000000000018e878 : add dword ptr [rdx], ecx ; ret
0x000000000012ad73 : add dword ptr [rdx], esi ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000001aa624 : add dword ptr [rdx], r9d ; ret
0x000000000007d449 : add dword ptr [rip + 0x343630], 1 ; pop rbx ; ret
0x000000000007c9d6 : add dword ptr [rip + 0x343fe7], 1 ; ret
0x00000000000d3344 : add dword ptr [rip + 0x438d0000], eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab18e : add dword ptr [rip - 0x47b80000], eax ; ret 0xffff
0x0000000000099bd5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013d189 : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; ret 0xf66
0x0000000000099c57 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000019bf30 : add dword ptr [rsi], 2 ; out 0xa, al ; ret
0x000000000019c678 : add dword ptr [rsi], 2 ; ret
0x000000000019d6a5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001b3667 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; push rax ; ret
0x0000000000191e8f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000001a08bf : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf174
0x00000000001a1137 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf17d
0x00000000001a9d27 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf4ec
0x00000000001ab297 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf559
0x00000000001ab90f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf55b
0x00000000001b361f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; xchg eax, ecx ; ret
0x00000000001a245d : add dword ptr ds:[rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a2505 : add dword ptr ds:[rax], eax ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001a24d5 : add dword ptr ds:[rax], eax ; sbb ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a24ed : add dword ptr ds:[rax], eax ; xor ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001400a7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189c8d : add dword ptr es:[rax], eax ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x00000000000a71d5 : add dword ptr ss:[rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000007878c : add eax, 0 ; add byte ptr [rax], al ; mov edx, r8d ; jmp 0x78732
0x0000000000004051 : add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000117846 : add eax, 0x10 ; ret
0x0000000000088ed6 : add eax, 0x10f35 ; ret
0x0000000000086c56 : add eax, 0x11595 ; ret
0x0000000000021fb2 : add eax, 0x15a5ec ; ret
0x0000000000048599 : add eax, 0x15b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000021fc2 : add eax, 0x15c5c3 ; ret
0x00000000000b4467 : add eax, 0x16e ; ret
0x000000000008bf7c : add eax, 0x1f ; ret
0x0000000000191d34 : add eax, 0x2300e44 ; ret
0x0000000000133b02 : add eax, 0x287ff9 ; jmp rax
0x0000000000133ab2 : add eax, 0x288041 ; pop r12 ; jmp rax
0x0000000000133a52 : add eax, 0x288099 ; pop r12 ; jmp rax
0x0000000000135623 : add eax, 0x28a268 ; call qword ptr [rax]
0x0000000000133b63 : add eax, 0x28bd28 ; call qword ptr [rax]
0x000000000008ad16 : add eax, 0x29000000 ; ret
0x00000000000b7937 : add eax, 0x2907fbc1 ; ret 0x8944
0x000000000012ae02 : add eax, 0x293081 ; add rsp, 8 ; ret
0x000000000012add2 : add eax, 0x293119 ; add rsp, 8 ; ret
0x000000000012ad72 : add eax, 0x293201 ; add rsp, 8 ; ret
0x000000000012ada2 : add eax, 0x293241 ; add rsp, 8 ; ret
0x00000000000b7a75 : add eax, 0x2941c229 ; ret
0x000000000002a217 : add eax, 0x29480000 ; ret 0x8b49
0x00000000001b78b9 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000011c592 : add eax, 0x2a1a59 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011fbfa : add eax, 0x2a3b41 ; add rsp, 8 ; ret
0x000000000011fbe1 : add eax, 0x2a3b5a ; test eax, eax ; je 0x11fbf9 ; ret
0x000000000011efaa : add eax, 0x2a46f1 ; pop rbx ; ret
0x000000000011ef72 : add eax, 0x2a4729 ; pop rbx ; ret
0x000000000011eeb3 : add eax, 0x2a47e8 ; pop rbx ; ret
0x000000000011be1b : add eax, 0x2a75b0 ; test eax, eax ; je 0x11be31 ; ret
0x0000000000112312 : add eax, 0x2ad6d9 ; ret
0x0000000000112190 : add eax, 0x2ad853 ; add rsp, 8 ; ret
0x000000000010d71c : add eax, 0x2b520e ; add ecx, ebp ; ret
0x000000000010c597 : add eax, 0x2b6274 ; add rsp, 0x28 ; jmp rax
0x00000000000fd522 : add eax, 0x2c0939 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000015a784 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000f9e3f : add eax, 0x2c79fc ; add rsp, 0x18 ; ret
0x00000000000f9ddc : add eax, 0x2c7a9f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f98a8 : add eax, 0x2c7f43 ; add rsp, 8 ; ret
0x00000000000f9849 : add eax, 0x2c7fc2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9651 : add eax, 0x2c8162 ; ret
0x00000000000f9491 : add eax, 0x2c8322 ; ret
0x00000000000f92be : add eax, 0x2c84f5 ; add rsp, 8 ; ret
0x00000000000f2626 : add eax, 0x2cd2f5 ; mov rdx, rax ; jmp 0xf25c6
0x00000000000f2590 : add eax, 0x2cd38b ; add rsp, 8 ; ret
0x00000000000f3aab : add eax, 0x2cdb80 ; add rsp, 8 ; ret
0x00000000000f3a37 : add eax, 0x2cdbf4 ; mov rdx, rax ; jmp 0xf3a17
0x00000000000ebc58 : add eax, 0x2d584f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019d6a3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000b0778 : add eax, 0x310623 ; add rsp, 0x28 ; ret
0x00000000000b2220 : add eax, 0x311bf3 ; add rsp, 8 ; ret
0x000000000008abd5 : add eax, 0x336096 ; add rsp, 8 ; ret
0x000000000008ab93 : add eax, 0x3360d8 ; ret
0x0000000000082730 : add eax, 0x33b79b ; mov qword ptr [rax], rdi ; ret
0x0000000000080b79 : add eax, 0x33d23a ; xor edi, edi ; call qword ptr [rax]
0x0000000000082741 : add eax, 0x33e306 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007e56d : add eax, 0x3401ee ; ret
0x000000000007c952 : add eax, 0x342849 ; ret
0x000000000007d44a : add eax, 0x343630 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007ca36 : add eax, 0x343f89 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124954 : add eax, 0x358d4800 ; ret 0x5aa
0x000000000005d5d4 : add eax, 0x363357 ; pop rbx ; pop rbp ; ret
0x0000000000037ca4 : add eax, 0x3863e7 ; mov eax, edx ; ret
0x0000000000037c61 : add eax, 0x38642a ; ret
0x0000000000037c51 : add eax, 0x38644a ; ret
0x000000000003d1d2 : add eax, 0x386bbf ; add rsp, 8 ; ret
0x000000000002f9fe : add eax, 0x38e3d5 ; mov qword ptr [rax], rdx ; ret
0x000000000002c0e2 : add eax, 0x3939d9 ; ret
0x0000000000021a9c : add eax, 0x39c78f ; pop r12 ; ret
0x000000000001f571 : add eax, 0x3a04da ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023762 : add eax, 0x3a04e1 ; ret
0x0000000000023752 : add eax, 0x3a0501 ; ret
0x00000000000223ec : add eax, 0x3a180f ; ret
0x00000000000221a3 : add eax, 0x3a1a58 ; pop rbx ; ret
0x000000000012cecd : add eax, 0x3d8d4800 ; ret
0x00000000001b7fe5 : add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000000e536e : add eax, 0x41000000 ; pop rsp ; ret
0x0000000000108a96 : add eax, 0x42045 ; ret
0x00000000000d3345 : add eax, 0x438d0000 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000108b36 : add eax, 0x44a75 ; ret
0x000000000006ecb1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000015ccb8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000158968 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009cfb6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000119122 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000012525a : add eax, 0x48c48348 ; ret
0x000000000009691a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000015cd39 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001589a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000016d7e9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x0000000000171dbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000888d3 : add eax, 0x5c415d5b ; ret
0x0000000000091753 : add eax, 0x6878 ; ret
0x0000000000186cf5 : add eax, 0x6f0fffc ; cld ; call rax
0x0000000000186dd9 : add eax, 0x730fffc ; cld ; jmp qword ptr [rax]
0x000000000008cd52 : add eax, 0x79 ; ret
0x000000000009d7be : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000eca6b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000137d5d : add eax, 0x83480000 ; ret 0x4910
0x000000000013a8b1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000137cb1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000015ccbb : add eax, 0x8428d48 ; ret
0x00000000000a6a99 : add eax, 0x850f0000 ; ret 0xd
0x000000000013550c : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000108a43 : add eax, 0x89c78944 ; ret
0x00000000000b22e9 : add eax, 0x89d02944 ; ret
0x000000000009ee62 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000012adc6 : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000012adf6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000091767 : add eax, 0xb1464 ; ret
0x000000000008ae63 : add eax, 0xb2258 ; ret
0x000000000008aad3 : add eax, 0xb24c8 ; ret
0x0000000000088643 : add eax, 0xb4818 ; ret
0x00000000000ab18f : add eax, 0xb8480000 ; ret 0xffff
0x00000000000a2d24 : add eax, 0xbccb7 ; ret
0x00000000000a38e0 : add eax, 0xbddbb ; ret
0x00000000000e7782 : add eax, 0xbe0f4101 ; ret 0xe883
0x000000000013553e : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x00000000001610ba : add eax, 0xc0310000 ; ret
0x00000000000a38e8 : add eax, 0xc0673 ; ret
0x00000000000d353b : add eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000008c6f6 : add eax, 0xc0ec5 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000015cd3d : add eax, 0xc428d48 ; ret
0x000000000009e5fd : add eax, 0xc478d48 ; ret
0x00000000000328be : add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a38cc : add eax, 0xc84f ; ret
0x000000000008a7b6 : add eax, 0xce245 ; ret
0x000000000008cbe6 : add eax, 0xce995 ; ret
0x0000000000088536 : add eax, 0xced15 ; ret
0x000000000008cd06 : add eax, 0xd0085 ; ret
0x000000000008bf90 : add eax, 0xd40cb ; ret
0x000000000009f43d : add eax, 0xd478d48 ; ret
0x00000000000a2d1c : add eax, 0xd48f ; ret
0x000000000008bf98 : add eax, 0xd6853 ; ret
0x0000000000086e43 : add eax, 0xdb688 ; ret
0x00000000000b7fae : add eax, 0xe9000000 ; ret 0xfff3
0x0000000000025497 : add eax, 0xe9fffff4 ; ret
0x00000000000f624c : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000000f6271 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000000f63ba : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000000f6453 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000014d3d3 : add eax, 0xf7f0ff3 ; ret
0x000000000004e27f : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ba8e : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000b24de : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000001088ba : add eax, 0xfff0003d ; dec dword ptr [rax - 0x77] ; ret 0x1376
0x0000000000092cb3 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x0000000000092c9c : add eax, 0xfffffaef ; ret
0x0000000000047361 : add eax, 1 ; cmp edx, eax ; jg 0x47328 ; ret
0x000000000008cb8b : add eax, 1 ; ret
0x00000000000235b2 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000a2fb8 : add eax, 2 ; ret
0x00000000000a2fd1 : add eax, 3 ; ret
0x00000000000870a6 : add eax, 5 ; ret
0x000000000008cdb5 : add eax, 6 ; ret
0x00000000001180c0 : add eax, 8 ; ret
0x0000000000088f22 : add eax, 9 ; ret
0x00000000000226e9 : add eax, dword ptr [0] ; ret
0x00000000000e30ab : add eax, dword ptr [rax] ; add al, ch ; pop rbp ; ret
0x0000000000028f27 : add eax, dword ptr [rax] ; add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x0000000000028e02 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000251e3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000137efd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013aa51 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137f21 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fc516 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000046ef1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x46ebf
0x00000000000f677d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f67d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000105a65 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x101d29
0x00000000000f6854 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012ab65 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6954 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001299b1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f8507 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a3013 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000113824 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000d4071 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x000000000011597e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x0000000000108175 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001322c3 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x00000000000c45d8 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a19b0 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000f2377 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a1bd0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1bf3 : add eax, dword ptr [rax] ; ret
0x00000000000b23e5 : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x0000000000028e0a : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000000d0d62 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x00000000000345ae : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x0000000000117dad : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x117dbe ; ret
0x000000000001fc1d : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x000000000015a749 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000018981d : add eax, dword ptr [rcx] ; add byte ptr [rdi + rdx*8 - 0x12], dh ; call rsp
0x00000000000356f8 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000019e63a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rbx + 0xac90204], al ; ret
0x00000000000b23d1 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000001369a0 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136268 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000fdee8 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000015a849 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000fd6ba : add eax, dword ptr [rsi + rdx] ; ret
0x00000000000a1c95 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006c81f : add eax, eax ; jmp rax
0x000000000004f2d0 : add eax, eax ; mov eax, r8d ; ret
0x00000000000971b8 : add eax, eax ; ret
0x000000000005f125 : add eax, ebp ; jmp rax
0x0000000000020847 : add eax, ebp ; ret
0x00000000000e48f8 : add eax, ebp ; ret 0xfa41
0x0000000000034e6e : add eax, ebx ; jmp rax
0x0000000000091c02 : add eax, ecx ; jmp rax
0x000000000008bcaa : add eax, ecx ; ret
0x00000000000971b5 : add eax, edi ; add rax, r8 ; ret
0x000000000008bca7 : add eax, edi ; add rax, rcx ; ret
0x00000000000b8398 : add eax, edi ; jmp rax
0x000000000018c7e9 : add eax, edi ; jmp rsp
0x000000000008a81b : add eax, edi ; ret
0x000000000013ceba : add eax, edi ; sub rax, rsi ; ret
0x0000000000121d7d : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cb88d : add eax, edx ; cmp rdi, rsi ; ja 0xcb888 ; ret
0x000000000002ddf1 : add eax, edx ; jmp r8
0x0000000000054c49 : add eax, edx ; jmp rax
0x0000000000121d9e : add eax, edx ; ret
0x00000000000360fd : add eax, edx ; shr rax, 0x3f ; ret
0x0000000000088c6e : add eax, edx ; sub rax, rdi ; ret
0x00000000000f2375 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000047331 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x000000000012782b : add eax, esi ; jmp rax
0x00000000000b16e1 : add eax, esi ; ret
0x000000000004de58 : add eax, esp ; jmp rax
0x0000000000105b40 : add ebp, 0x30 ; call 0x101dd5
0x000000000004f1ff : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000b0a65 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000011f1e1 : add ebp, dword ptr [rcx] ; ret 0x828d
0x000000000003a2ee : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x000000000019ad5c : add ebp, edi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000000314a : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000c487e : add ebx, 1 ; mov rdx, rax ; jmp 0xc4825
0x000000000007b5d3 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fa3f4 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000032fb9 : add ebx, dword ptr [rbx + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019c894 : add ebx, dword ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x0000000000107acc : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000385d1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000000374a : add ebx, ebp ; in al, -0x12 ; jne 0x3730 ; ret 0x975
0x0000000000026f7c : add ebx, ebp ; ret
0x00000000000565d4 : add ebx, ebp ; ret 0x9d8b
0x00000000000e2cbb : add ebx, edx ; jmp rbx
0x000000000014d593 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000008c678 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8c669 ; ret
0x0000000000035ad4 : add ecx, 1 ; cmp al, 0x5f ; je 0x35af3 ; jmp 0x35aa7
0x000000000010bec7 : add ecx, 1 ; test r8d, r8d ; jne 0x10bec1 ; ret
0x0000000000118075 : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000099cda : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000012a1ad : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x0000000000115a8a : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e8e4 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000010458d : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x0000000000116ec4 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000869d5 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000a1773 : add ecx, dword ptr [rax - 0x2f] ; call 0xffffffffc316a4cf
0x00000000000ed054 : add ecx, dword ptr [rax - 0x68] ; ret
0x000000000011825c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000f3284 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00000000000968fa : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000093fd9 : add ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000f7a8b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000006f35a : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003aae6 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x00000000000f5fc1 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000102a5f : add ecx, dword ptr [rbp - 0x77] ; ret
0x000000000014d302 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001aa5ea : add ecx, dword ptr [rbx + 1] ; ret
0x00000000000472a8 : add ecx, dword ptr [rcx + 0x29] ; ret
0x000000000009cf54 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a979 : add ecx, dword ptr [rcx + 0x39] ; ret
0x0000000000086920 : add ecx, dword ptr [rcx + rcx*4 + 0x4b] ; mov rdi, r9 ; call rcx
0x0000000000099cdb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000055b8b : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000e1de9 : add ecx, dword ptr [rcx] ; ret 0xf983
0x00000000001aa5e7 : add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x000000000009d780 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000345b1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000007076a : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000d387a : add ecx, eax ; jmp 0x4d02e89
0x0000000000054b1a : add ecx, eax ; jmp rcx
0x0000000000049718 : add ecx, ebp ; ret
0x000000000013665d : add ecx, ebx ; call rax
0x0000000000142beb : add ecx, ebx ; jmp r9
0x0000000000160082 : add ecx, ebx ; jmp rcx
0x00000000000fa2c4 : add ecx, ebx ; ret
0x000000000006d358 : add ecx, edx ; jmp rcx
0x00000000000a1c54 : add ecx, esi ; jmp rcx
0x000000000012475d : add edi, 0x10 ; jmp rcx
0x000000000011f550 : add edi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000012167a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000121633 : add edi, 0x23b0 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000128054 : add edi, 0x58 ; jmp rcx
0x00000000001277a4 : add edi, 0x68 ; jmp rcx
0x0000000000123bc7 : add edi, 0xc8 ; jmp rcx
0x00000000000968bc : add edi, 1 ; mov rax, rdi ; ret
0x00000000000c6132 : add edi, 1 ; test dl, dl ; jne 0xc611d ; ret
0x00000000000c615c : add edi, 1 ; test dl, dl ; jne 0xc614a ; ret
0x00000000000968e5 : add edi, 2 ; mov rax, rdi ; ret
0x00000000000968f8 : add edi, 3 ; mov rax, rdi ; ret
0x0000000000096905 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000096918 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000096932 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000019618e : add edi, dword ptr [rbp + rbp*8 - 1] ; sbb al, 0xd ; mov al, 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000127219 : add edi, eax ; jmp rdi
0x0000000000142be8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000118045 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000018bda1 : add edi, esi ; jmp rsp
0x00000000000374b6 : add edi, esi ; ret 0
0x0000000000186cf1 : add edi, esp ; call qword ptr [rax]
0x0000000000186cb1 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000186d11 : add edi, esp ; push rax ; add al, 0xfc ; call rax
0x00000000000fcdfb : add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000fcbac : add edx, 1 ; mov word ptr [rax], dx ; ret
0x0000000000117fd1 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000970b8 : add edx, eax ; jl 0x97127 ; add rax, rdi ; ret
0x00000000000970c8 : add edx, eax ; jl 0x97129 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000970e8 : add edx, eax ; jl 0x97129 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000097108 : add edx, eax ; jl 0x97129 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000968ad : add edx, eax ; jmp r10
0x0000000000022af1 : add edx, eax ; jmp rdx
0x00000000000391d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000018fe19 : add edx, ebp ; call qword ptr [rbx]
0x000000000018ff51 : add edx, ebp ; call qword ptr [rcx]
0x000000000018fe01 : add edx, ebp ; call qword ptr [rdx]
0x000000000018fd71 : add edx, ebp ; call qword ptr [rsi]
0x000000000018ff39 : add edx, ebp ; jmp qword ptr [rax]
0x000000000001f6a6 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f680
0x00000000000dedf7 : add edx, ecx ; jmp rdx
0x0000000000034c05 : add edx, edi ; jmp rdx
0x00000000000616d8 : add edx, esi ; call qword ptr [r11 + rax*8]
0x00000000000a1c14 : add edx, esi ; jmp rdx
0x000000000004bec0 : add edx, esp ; call qword ptr [r11 + rax*8]
0x0000000000063190 : add esi, -1 ; dec dword ptr [rbp + 1] ; loop 0x6318a ; scasb al, byte ptr [rdi] ; ret
0x00000000001267c5 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177c : add esi, 8 ; jmp 0x21741
0x00000000000a0e09 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000011823d : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000129a76 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0x0000000000129ede : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000887c6 : add esi, dword ptr [rdi + rbx + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x0000000000121342 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000096da3 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000101aa3 : add esi, eax ; jmp qword ptr [rax]
0x000000000006c8df : add esi, eax ; jmp rsi
0x000000000012e3e3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000014d4b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000006d248 : add esi, ecx ; jmp rsi
0x000000000018bdf1 : add esi, edi ; call rsp
0x00000000001624bc : add esi, edi ; fadd st(3) ; ret
0x00000000000a1cab : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000142be5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000002e2a1 : add esi, edx ; jmp r14
0x000000000008c4b0 : add esi, esi ; ret
0x00000000000376da : add esi, esi ; ret 0xf304
0x0000000000193a3c : add esp, -0x15 ; jmp qword ptr [rdx]
0x00000000000f229f : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f911f : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000085cb4 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000111bf1 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122184 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000f9e7c : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070077 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000000346b1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c70e : add esp, 0x10 ; pop rbx ; ret
0x0000000000121c30 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c741 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008baef : add esp, 0x100 ; ret
0x00000000000886dd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000005d673 : add esp, 0x1000 ; pop rbx ; ret
0x000000000005d681 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003724d : add esp, 0x108 ; ret
0x00000000000ec8ae : add esp, 0x120 ; pop rbx ; ret
0x00000000000374e3 : add esp, 0x140 ; pop rbx ; ret
0x0000000000036c6b : add esp, 0x148 ; ret
0x00000000000220a9 : add esp, 0x18 ; jmp rax
0x000000000005dbd7 : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000e506e : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cb790 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000005dc06 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012e949 : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000086a88 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003d268 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003707b : add esp, 0x18 ; ret
0x000000000012035c : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ebf07 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f06f4 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049c06 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000024290 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000369e3 : add esp, 0x20 ; pop rbx ; ret
0x00000000000bf816 : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006e663 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aeed1 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fb : add esp, 0x28 ; jmp rax
0x00000000000fa6ca : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb3fe : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1444 : add esp, 0x28 ; mov rax, rdx ; ret
0x000000000012d255 : add esp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000021d49 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005d5a9 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000488a2 : add esp, 0x28 ; ret
0x000000000010ae79 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c2d61 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ee8b : add esp, 0x30 ; pop rbx ; ret
0x00000000001130c1 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129d38 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000be0ca : add esp, 0x38 ; ret
0x00000000000be962 : add esp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010d108 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037559 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fd5e8 : add esp, 0x40 ; ret
0x0000000000126084 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7408 : add esp, 0x408 ; ret
0x0000000000049959 : add esp, 0x440 ; pop rbx ; ret
0x00000000000ecf42 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000073648 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000119124 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f246c : add esp, 0x48 ; ret
0x000000000012007e : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1e24 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001361bf : add esp, 0x58 ; ret
0x00000000000f0e2f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000c9862 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f84b : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b21c : add esp, 0x68 ; ret
0x0000000000084917 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb712 : add esp, 0x70 ; pop rbx ; ret
0x00000000000849d6 : add esp, 0x70 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000372fd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037382 : add esp, 0x88 ; ret
0x00000000000fbd42 : add esp, 0x90 ; pop rbx ; ret
0x000000000001f50c : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000001338f0 : add esp, 0x98 ; ret
0x00000000000380cd : add esp, 0xa8 ; ret
0x0000000000129587 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000005e25a : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000b1615 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000036e5e : add esp, 0xd0 ; ret
0x00000000000f720e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047654 : add esp, 0xd8 ; ret
0x000000000010601c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x00000000000565d2 : add esp, 1 ; jmp 0x5659d
0x00000000001249e3 : add esp, 8 ; add eax, 2 ; ret
0x000000000008ac1d : add esp, 8 ; jmp rax
0x0000000000117f5b : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000c6476 : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6376 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004f182 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e3b0 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e118 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007355c : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003400b : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e1eb : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000850a4 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003c406 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012cfec : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022c25 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046666 : add esp, 8 ; movzx eax, al ; ret
0x000000000011b10a : add esp, 8 ; movzx eax, ax ; ret
0x000000000007762d : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000001229f9 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000121d99 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000074580 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003cf92 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023741 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022024 : add esp, 8 ; ret
0x0000000000132e51 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012ea34 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000073571 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cb4fc : add esp, 8 ; xor eax, eax ; ret
0x0000000000134deb : add esp, dword ptr [rsi + 0x39] ; ret 0x840f
0x0000000000110e48 : add qword ptr [r8 - 0x7d], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000dbf6c : add qword ptr [r8 - 0x7d], rcx ; ret
0x000000000018e635 : add qword ptr [r8], r8 ; xor al, 0xe1 ; std ; jmp rsp
0x000000000002689e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001a3345 : add qword ptr [rax], r8 ; call 0x131a2632
0x000000000009372d : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018a1ad : add qword ptr [rax], rax ; and al, 0xe1 ; out dx, eax ; jmp rsp
0x00000000001a2efd : add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdx]
0x0000000000097ad0 : add qword ptr [rbp - 0x3c], rsi ; nop dword ptr [rax] ; ret
0x0000000000026f79 : add qword ptr [rdi], 1 ; jmp 0x26f47
0x000000000015a6fd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000001b679c : add qword ptr [rdx], -0x50d5000 ; call rcx
0x00000000000968ac : add r10, rax ; jmp r10
0x000000000014d592 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000565d1 : add r12, 1 ; jmp 0x5659e
0x0000000000105b3f : add r13, 0x30 ; call 0x101dd6
0x000000000002e2a0 : add r14, r10 ; jmp r14
0x000000000014d522 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d4b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013cae0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138f74 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002ddf0 : add r8, rdx ; jmp r8
0x0000000000047330 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x0000000000034775 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b2e2d : add r8b, byte ptr [r8] ; and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x0000000000096a54 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000969b4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000018cbc5 : add r8b, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x000000000018cb95 : add r8b, byte ptr [rax] ; jnp 0x18cbdc ; clc ; jmp rsp
0x0000000000117c51 : add r8b, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x000000000004f2cf : add r8d, eax ; mov eax, r8d ; ret
0x000000000013665c : add r9, r11 ; call rax
0x0000000000142bea : add r9, r11 ; jmp r9
0x0000000000049587 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x495a5
0x000000000013fc82 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000000f63b9 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000015a783 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000047360 : add rax, 1 ; cmp edx, eax ; jg 0x47329 ; ret
0x00000000000a2fc0 : add rax, 1 ; ret
0x00000000000a2fb7 : add rax, 2 ; ret
0x00000000000a2fd0 : add rax, 3 ; ret
0x00000000000226e8 : add rax, qword ptr [0] ; ret
0x00000000000356f7 : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000013699f : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136267 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000226e7 : add rax, qword ptr fs:[0] ; ret
0x000000000004de57 : add rax, r12 ; jmp rax
0x000000000005f124 : add rax, r13 ; jmp rax
0x000000000006c81e : add rax, r8 ; jmp rax
0x00000000000971b7 : add rax, r8 ; ret
0x0000000000096974 : add rax, r9 ; jmp rax
0x0000000000034e6d : add rax, rbx ; jmp rax
0x0000000000091c01 : add rax, rcx ; jmp rax
0x000000000008bca9 : add rax, rcx ; ret
0x00000000000971b4 : add rax, rdi ; add rax, r8 ; ret
0x000000000008bca6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000b8397 : add rax, rdi ; jmp rax
0x000000000008a81a : add rax, rdi ; ret
0x000000000013ceb9 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000054c48 : add rax, rdx ; jmp rax
0x00000000000360fc : add rax, rdx ; shr rax, 0x3f ; ret
0x0000000000088c6d : add rax, rdx ; sub rax, rdi ; ret
0x000000000012782a : add rax, rsi ; jmp rax
0x000000000003a2ed : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x00000000000c487d : add rbx, 1 ; mov rdx, rax ; jmp 0xc4826
0x00000000000e2cba : add rbx, r10 ; jmp rbx
0x0000000000035ad3 : add rcx, 1 ; cmp al, 0x5f ; je 0x35af4 ; jmp 0x35aa8
0x000000000002a978 : add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000160081 : add rcx, r11 ; jmp rcx
0x0000000000054b19 : add rcx, rax ; jmp rcx
0x000000000006d357 : add rcx, rdx ; jmp rcx
0x00000000000a1c53 : add rcx, rsi ; jmp rcx
0x000000000012475c : add rdi, 0x10 ; jmp rcx
0x000000000011f54f : add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000121679 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000128053 : add rdi, 0x58 ; jmp rcx
0x00000000001277a3 : add rdi, 0x68 ; jmp rcx
0x0000000000123bc6 : add rdi, 0xc8 ; jmp rcx
0x00000000000968bb : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000c6131 : add rdi, 1 ; test dl, dl ; jne 0xc611e ; ret
0x00000000000c615b : add rdi, 1 ; test dl, dl ; jne 0xc614b ; ret
0x00000000000968e4 : add rdi, 2 ; mov rax, rdi ; ret
0x00000000000968f7 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000127218 : add rdi, rax ; jmp rdi
0x0000000000142be7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000118044 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000004bebf : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x00000000000616d7 : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000391d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000970b7 : add rdx, rax ; jl 0x97128 ; add rax, rdi ; ret
0x00000000000970b6 : add rdx, rax ; jl 0x97129 ; add rax, rdi ; ret
0x0000000000022af0 : add rdx, rax ; jmp rdx
0x000000000018fed8 : add rdx, rbp ; call qword ptr [rbx]
0x000000000018ff38 : add rdx, rbp ; jmp qword ptr [rax]
0x00000000000dedf6 : add rdx, rcx ; jmp rdx
0x0000000000034c04 : add rdx, rdi ; jmp rdx
0x00000000000a1c13 : add rdx, rsi ; jmp rdx
0x00000000001267c4 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177b : add rsi, 8 ; jmp 0x21742
0x000000000006c8de : add rsi, rax ; jmp rsi
0x000000000012e3e2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006d247 : add rsi, rcx ; jmp rsi
0x0000000000085cb3 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000122183 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000f9e7b : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070076 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000346b0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c70d : add rsp, 0x10 ; pop rbx ; ret
0x000000000007c740 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008baee : add rsp, 0x100 ; ret
0x000000000005d672 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003724c : add rsp, 0x108 ; ret
0x00000000000ec8ad : add rsp, 0x120 ; pop rbx ; ret
0x00000000000374e2 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000036c6a : add rsp, 0x148 ; ret
0x00000000000220a8 : add rsp, 0x18 ; jmp rax
0x000000000005dbd6 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000e506d : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cb78f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000005dc05 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012e948 : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003d267 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003707a : add rsp, 0x18 ; ret
0x000000000012035b : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f06f3 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049c05 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000002428f : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000369e2 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000bf815 : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000aeed0 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fa : add rsp, 0x28 ; jmp rax
0x00000000000fa6c9 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb3fd : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1443 : add rsp, 0x28 ; mov rax, rdx ; ret
0x000000000012d254 : add rsp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000005d5a8 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000488a1 : add rsp, 0x28 ; ret
0x000000000010ae78 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c2d60 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ee8a : add rsp, 0x30 ; pop rbx ; ret
0x0000000000129d37 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000be0c9 : add rsp, 0x38 ; ret
0x00000000000be961 : add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010d107 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037558 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fd5e7 : add rsp, 0x40 ; ret
0x00000000000f7407 : add rsp, 0x408 ; ret
0x0000000000049958 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000ecf41 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000119123 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f246b : add rsp, 0x48 ; ret
0x00000000000f1e23 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001361be : add rsp, 0x58 ; ret
0x00000000000f0e2e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000c9861 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b21b : add rsp, 0x68 ; ret
0x0000000000084916 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb711 : add rsp, 0x70 ; pop rbx ; ret
0x00000000000372fc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037381 : add rsp, 0x88 ; ret
0x00000000000fbd41 : add rsp, 0x90 ; pop rbx ; ret
0x000000000001f50b : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000001338ef : add rsp, 0x98 ; ret
0x00000000000380cc : add rsp, 0xa8 ; ret
0x0000000000129586 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000b1614 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000036e5d : add rsp, 0xd0 ; ret
0x00000000000f720d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047653 : add rsp, 0xd8 ; ret
0x000000000010601b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x00000000001249e2 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008ac1c : add rsp, 8 ; jmp rax
0x0000000000117f5a : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004f181 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e3af : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e117 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007355b : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003400a : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e1ea : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000850a3 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003c405 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012cfeb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022c24 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046665 : add rsp, 8 ; movzx eax, al ; ret
0x000000000011b109 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000007762c : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000001229f8 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000121d98 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007457f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000023740 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022023 : add rsp, 8 ; ret
0x0000000000132e50 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012ea33 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000073570 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cb4fb : add rsp, 8 ; xor eax, eax ; ret
0x00000000000917ae : add sil, sil ; ret 0x7404
0x00000000000d466e : add sil, sil ; ret 0x7508
0x0000000000179494 : add spl, sil ; ljmp ptr [rcx] ; push rbx ; call rcx
0x00000000000fcbc3 : add word ptr [rax], 1 ; ret
0x000000000018e3e5 : add word ptr [rax], ax ; xchg eax, esp ; push rdx ; sti ; call rsp
0x00000000000fc90a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000186fd9 : and ah, bh ; call qword ptr [rax]
0x000000000009a491 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000235ca : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009400c : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001362e5 : and al, 0x10 ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x00000000000ebd3a : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb9eb
0x00000000000aeee6 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000080a6e : and al, 0x10 ; call qword ptr [rax]
0x000000000002bf6f : and al, 0x10 ; call r15
0x00000000000f558c : and al, 0x10 ; call rax
0x0000000000080b42 : and al, 0x10 ; call rdx
0x00000000000367c7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000011f61a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000012d274 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a43fb : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000889db : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x00000000000b111a : and al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000047c1f : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000220f8 : and al, 0x18 ; add rsp, 0x28 ; jmp rax
0x0000000000021ec1 : and al, 0x18 ; call rax
0x0000000000023516 : and al, 0x18 ; call rbx
0x0000000000124107 : and al, 0x18 ; call rcx
0x000000000010733e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001073be : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000968d5 : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000102256 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000af8dd : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x000000000002bf6a : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000102159 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008287d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000029c0b : and al, 0x1c ; jmp 0x29bd4
0x0000000000029c0a : and al, 0x1c ; jmp 0x29bd5
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x0000000000123f10 : and al, 0x20 ; call rcx
0x0000000000080b3d : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000002addb : and al, 0x24 ; jmp 0x2ada4
0x000000000002adda : and al, 0x24 ; jmp 0x2ada5
0x0000000000174ea4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000105fcf : and al, 0x28 ; call 0x72204
0x0000000000105fce : and al, 0x28 ; call 0x72205
0x0000000000080954 : and al, 0x28 ; call rax
0x00000000000a407d : and al, 0x28 ; call rbx
0x00000000000a410b : and al, 0x28 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000026fc2 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x26f91
0x0000000000026fc1 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x26f92
0x00000000000834a7 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000008091b : and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000a3cbc : and al, 0x28 ; mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fa258 : and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x00000000001a1274 : and al, 0x2c ; add dword ptr [rax], eax ; cmp dl, dl ; int1 ; jmp qword ptr [rbx]
0x000000000011ab78 : and al, 0x2c ; add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x00000000000490d0 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x000000000008094f : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x0000000000105fca : and al, 0x30 ; mov qword ptr [rsp + 0x28], rax ; call 0x72209
0x000000000012e8d9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007f986 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x00000000001361bb : and al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000000490da : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000f2467 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000a45af : and al, 0x38 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000001a2074 : and al, 0x3a ; add dword ptr [rax], eax ; pop rax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x0000000000025b5d : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ac : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a64 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000012056a : and al, 0x41 ; call qword ptr [rbx]
0x000000000011dc46 : and al, 0x41 ; call rsp
0x00000000000d9b74 : and al, 0x44 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a2d74 : and al, 0x47 ; add dword ptr [rax], eax ; clc ; mov edx, esi ; jmp qword ptr [rdi]
0x0000000000120064 : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x0000000000133e26 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000005dbd5 : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cb78e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000125096 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f0b49 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000002428e : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd585 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fd5e6 : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000007803d : and al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001361d1 : and al, 0x48 ; jne 0x1361be ; add rsp, 0x58 ; ret
0x00000000001361d0 : and al, 0x48 ; jne 0x1361bf ; add rsp, 0x58 ; ret
0x00000000000a3b78 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000029eb2 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002849b : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013605d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x00000000000a36d4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bdcff : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000ebf80 : and al, 0x48 ; mov edx, eax ; call 0x1081d6
0x0000000000093e4c : and al, 0x48 ; test esi, esi ; jne 0x93e63 ; jmp 0x93e1d
0x0000000000027ea9 : and al, 0x50 ; call rax
0x0000000000028b20 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029536 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a4de : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027794 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000286c2 : and al, 0x58 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000018cd58 : and al, 0x5e ; clc ; jmp rsp
0x00000000001ac52c : and al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x000000000018d0ec : and al, 0x6c ; add al, byte ptr [rax] ; hlt ; mov al, 0xf8 ; jmp rsp
0x00000000000278bf : and al, 0x70 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000043dad : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000ffc81 : and al, 0x74 ; adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000013701b : and al, 0x74 ; ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000353db : and al, 0x74 ; ret 0x8d48
0x00000000000aa29d : and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000280c1 : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000018d3bc : and al, 0x80 ; add al, byte ptr [rax] ; xchg eax, esp ; xor edi, ecx ; jmp rsp
0x00000000000c9164 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000a95f0 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000d6c53 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dc561 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045c76 : and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000013081d : and al, 0x85 ; ror byte ptr [rdi], 0x89 ; ret
0x00000000000b378e : and al, 0x89 ; ret
0x0000000000114709 : and al, 0x89 ; ret 0xc148
0x00000000000450e7 : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000004574d : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000018af30 : and al, 0x90 ; call rsp
0x00000000001a1e1c : and al, 0x90 ; int1 ; jmp qword ptr [rdx]
0x00000000000e1fee : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000004869a : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000ebc2a : and al, 0x98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000f2562 : and al, 0x98 ; ret
0x00000000000e2e9e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000001a8674 : and al, 0xa0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000165ff8 : and al, 0xab ; and eax, 0xf31e7500 ; ret
0x0000000000027407 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000040088 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003cb89 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c0ca6 : and al, 0xc ; add rsp, 0x28 ; ret
0x0000000000136318 : and al, 0xc ; add rsp, 0x48 ; ret
0x00000000000e1ee0 : and al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000000021c5 : and al, 0xc7 ; jno 0x2216 ; ret 0x1dd4
0x0000000000047b3f : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001aba74 : and al, 0xd4 ; add dword ptr [rax], eax ; sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000001abc74 : and al, 0xd6 ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000018a1b0 : and al, 0xe1 ; out dx, eax ; jmp rsp
0x000000000003682d : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368cb : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x000000000010f234 : and al, 0xe8 ; jmp 0x10f240
0x00000000000368ab : and al, 0xe8 ; ret
0x0000000000044648 : and al, 0xe8 ; ret 0xfff1
0x000000000019d074 : and al, 0xea ; add byte ptr [rax], al ; xlatb ; out dx, al ; jmp rdx
0x000000000002addc : and al, 0xeb ; ret 0x8948
0x0000000000039f38 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000073dd9 : and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000036a4b : and al, 0xf0 ; and eax, 0x8000 ; ret
0x00000000000368c7 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000036981 : and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000b0896 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b089c : and al, 0xf0 ; ret
0x00000000000918b6 : and al, 0xf8 ; jne 0x91792 ; ret
0x0000000000039ef1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039ef7 : and al, 0xf8 ; ret
0x00000000001aad45 : and al, 0xfb ; jmp qword ptr [rdx]
0x0000000000039eab : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000039eb1 : and al, 0xfc ; ret
0x0000000000036a77 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000036a7b : and al, 0xfe ; ret
0x00000000000f7a0d : and al, 0xff ; jmp 0xf79d7
0x00000000000f7a0c : and al, 0xff ; jmp 0xf79d8
0x00000000000e4436 : and al, 4 ; jmp 0xe43ff
0x000000000009d8c8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a6208 : and al, 8 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xf983
0x000000000011fadc : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000000220a6 : and al, 8 ; add rsp, 0x18 ; jmp rax
0x0000000000037078 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f13d8 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000007dfcb : and al, 8 ; and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x000000000007dff5 : and al, 8 ; call qword ptr [rax]
0x00000000000868d2 : and al, 8 ; call qword ptr [rdx]
0x0000000000028b24 : and al, 8 ; call r12
0x0000000000025b61 : and al, 8 ; call r14
0x00000000000264b0 : and al, 8 ; call r15
0x000000000010215e : and al, 8 ; call rax
0x0000000000025a68 : and al, 8 ; call rbx
0x0000000000120b20 : and al, 8 ; call rcx
0x00000000000368fa : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000012db57 : and al, 8 ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000f5587 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006e558 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000129d12 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027ea4 : and al, 8 ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000003a2f0 : and al, 8 ; mov rsi, rbp ; call r12
0x00000000000367cb : and al, 8 ; ret
0x000000000012e8de : and al, 8 ; xor eax, eax ; call rdx
0x00000000000c773e : and al, 8 ; xor r12d, r12d ; jmp 0xc770e
0x00000000000c773d : and al, 8 ; xor r12d, r12d ; jmp 0xc770f
0x000000000018ca01 : and al, bh ; call rsp
0x000000000011bb01 : and al, byte ptr [rax + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000001b7b38 : and al, byte ptr [rax + rax] ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000036a28 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036420 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d4aed : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x0000000000189bb5 : and al, byte ptr [rcx] ; add ah, al ; out dx, eax ; call rsp
0x00000000000795e4 : and al, byte ptr [rdi] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000086e0a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000001361e4 : and al, ch ; xchg byte ptr [rdx - 0x2f140012], dl ; call qword ptr [rax]
0x000000000002fde2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe02 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fd42 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fdc2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fce2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fd82 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd22 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fd62 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000018701d : and bh, ah ; call rax
0x0000000000021326 : and bh, bh ; ret 0x8948
0x0000000000186749 : and bh, bl ; call rax
0x0000000000186c1c : and bh, bl ; sti ; call qword ptr [rax]
0x0000000000002f60 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018cf00 : and bh, byte ptr [rbp - 8] ; call rsp
0x000000000007395a : and bh, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000009dea7 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000186b50 : and bl, bl ; sti ; jmp rax
0x0000000000192d0d : and bl, ch ; jmp qword ptr [rdx]
0x000000000007a722 : and bl, ch ; ret 0x1f0f
0x00000000001aa9b0 : and bl, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000085691 : and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007f217 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000108a97 : and byte ptr [r8 + rax], r8b ; ret
0x00000000000726ba : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a1126 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007b1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00000000001035bd : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000008520b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000007f218 : and byte ptr [rax + 0x39], cl ; ret
0x000000000003c643 : and byte ptr [rax + 0x39], cl ; ret 0x1677
0x000000000003c659 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x0000000000187980 : and byte ptr [rax + 0x7fa0fffc], al ; cld ; jmp qword ptr [rax]
0x000000000007dcc3 : and byte ptr [rax + 1], cl ; ret
0x00000000000970e6 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000108a98 : and byte ptr [rax + rax], al ; ret
0x000000000007f214 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000080013 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x00000000000726bb : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000080b3e : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000006e6dd : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086bdb : and byte ptr [rax - 0x77], cl ; jae 0x86bf1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003abec : and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x00000000000f05e4 : and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x000000000004457f : and byte ptr [rax - 0x77], cl ; ret
0x0000000000133c60 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000483b1 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000080046 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002e7a4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2e7b8 ; call rax
0x00000000000247e6 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000078e22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000a1c7c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c26c1 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f7bde : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009efdc : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000bd890 : and byte ptr [rax], dh ; add byte ptr [rax - 0x77], cl ; ret 0xe6e9
0x0000000000186f3c : and byte ptr [rax], dh ; cld ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x00000000000a1127 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000d0f55 : and byte ptr [rbp - 0x3a7cfe8e], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018756c : and byte ptr [rbp - 0x7b490004], al ; cld ; jmp qword ptr [rsi]
0x0000000000187998 : and byte ptr [rbp - 4], bh ; jmp qword ptr [rax + 0x20fffc7c]
0x0000000000114970 : and byte ptr [rbx + 0x2b2fff8], al ; cmove eax, edx ; ret
0x00000000000347e8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024292 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000197c8d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000019e63d : and byte ptr [rbx + 0xac90204], al ; ret
0x00000000001951d9 : and byte ptr [rbx + 0xaec0204], al ; ret
0x00000000001782c0 : and byte ptr [rbx - 0x11], dl ; jmp qword ptr [rax]
0x0000000000179780 : and byte ptr [rbx - 0x6d37000c], dl ; hlt ; jmp qword ptr [rax]
0x000000000019e659 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rdi + 0xa] ; ret
0x0000000000108a0e : and byte ptr [rbx - 0xd], bl ; ret
0x000000000007b1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000178014 : and byte ptr [rcx - 0x11], cl ; lcall ptr [rax + rcx*2 - 0x11] ; call qword ptr [rax]
0x0000000000039f35 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000003c978 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000e3d1b : and byte ptr [rcx - 0x77], al ; ret 0x3145
0x00000000001b2e30 : and byte ptr [rcx - 9], cl ; jmp qword ptr [rax]
0x00000000000ec8b0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000031f6e : and byte ptr [rcx], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006e665 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bc968 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011f633 : and byte ptr [rdi + 1], bh ; call 0x12b8d8
0x000000000018f0c0 : and byte ptr [rdi - 0x17], ah ; call qword ptr [rax]
0x0000000000187988 : and byte ptr [rdi - 4], bh ; jmp qword ptr [rax + 0x20fffc7e]
0x0000000000186cb8 : and byte ptr [rdi], al ; cld ; inc dword ptr [rax] ; or esp, edi ; jmp rax
0x0000000000186738 : and byte ptr [rdi], bl ; sti ; call qword ptr [rax]
0x0000000000186e98 : and byte ptr [rdi], ch ; cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x000000000002fdc5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000bc552 : and byte ptr [rdi], cl ; test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f2b9e : and byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f2bf6 : and byte ptr [rdi], cl ; test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000f2b3d : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f2add : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000009db99 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000162580 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000007d645 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000190584 : and byte ptr [rdx + rbp*8], dh ; jmp qword ptr [rdx]
0x0000000000187774 : and byte ptr [rdx - 0x7e5f0004], al ; cld ; call qword ptr [rax]
0x000000000018701c : and byte ptr [rdx], 0xfc ; call rax
0x0000000000186f70 : and byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000186eb4 : and byte ptr [rip + 0x2f00fffc], ch ; cld ; jmp rax
0x000000000016011a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000193be5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002bea : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000187990 : and byte ptr [rsi - 4], bh ; jmp qword ptr [rax + 0x20fffc7d]
0x00000000000f3361 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000186f54 : and byte ptr [rsp + rdi*8], ch ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000000a2fb2 : and ch, 0xf ; je 0xa2fd9 ; add rax, 2 ; ret
0x00000000001a1f10 : and ch, 0xf1 ; jmp rsi
0x0000000000172da9 : and ch, ah ; call qword ptr [rdx]
0x00000000000d489d : and ch, cl ; cmp esp, 0xff ; push rdi ; ret 0
0x000000000019a7a9 : and ch, dh ; jmp qword ptr [rax]
0x00000000000a2f9d : and cl, 0xf ; je 0xa2fc5 ; ret
0x0000000000003906 : and cl, ah ; ret
0x00000000001a6650 : and cl, al ; hlt ; jmp qword ptr [rsi]
0x00000000000549bf : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000e5e5b : and cl, byte ptr [rax - 0x75] ; je 0xe5e8c ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x0000000000048cc4 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000011f34c : and cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000046ddd : and cl, byte ptr [rcx + 0x1ee0c1d0] ; or eax, esi ; ret
0x00000000000922a0 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c07d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000002e969 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001abab0 : and dh, ah ; cmc ; call qword ptr [rax]
0x000000000019ab1c : and dh, bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001996d0 : and dh, bh ; in eax, dx ; jmp rax
0x0000000000186bb8 : and dh, bl ; sti ; inc dword ptr [rax] ; loopne 0x186bc1 ; jmp rax
0x00000000001953bc : and dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001b001d : and dh, dh ; jmp qword ptr [rdx]
0x000000000008c68b : and dh, dh ; ret 0x7504
0x00000000001ac730 : and dl, bh ; cmc ; call qword ptr [rax]
0x0000000000199c94 : and dl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001796c8 : and dl, byte ptr [rsi] ; hlt ; jmp qword ptr [rax]
0x00000000001868c8 : and dword ptr [rax - 0x575e0003], ebp ; std ; jmp qword ptr [rcx]
0x0000000000022d02 : and dword ptr [rax - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000022fc6 : and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000001027b6 : and dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000000f9b51 : and dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f2961 : and dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000013084e : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004efec : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000031f67 : and dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x15], al ; jmp qword ptr [rax]
0x00000000001769c2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000001868b8 : and dword ptr [rbp - 0x59de0003], esp ; std ; jmp qword ptr [rcx]
0x000000000007514f : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000001a080d : and dword ptr [rcx], eax ; add byte ptr [rax - 0x3b], dh ; int1 ; call qword ptr [rdx]
0x00000000000376a6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000001868c0 : and dword ptr [rdi - 0x585e0003], esp ; std ; jmp qword ptr [rcx]
0x00000000001ad6fc : and dword ptr [rdi - 0xb], edi ; jmp qword ptr [rdx]
0x00000000000736d0 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000037888 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000f624b : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x0000000000173a79 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009d9cb : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000001769c1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001657a6 : and eax, 0 ; add bl, dh ; ret
0x00000000000226eb : and eax, 0 ; ret
0x00000000000f0713 : and eax, 0x100f ; ret
0x0000000000072ff2 : and eax, 0x200 ; ret
0x00000000000c1e45 : and eax, 0x2d0 ; mov eax, esi ; ret
0x00000000000fa474 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000008ac17 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021ee2 : and eax, 0x30 ; call rax
0x0000000000031dac : and eax, 0x30 ; call rdx
0x0000000000036be2 : and eax, 0x30 ; jmp rax
0x0000000000047697 : and eax, 0x394d3674 ; ret 0x830f
0x00000000000a1bcd : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000a1bf0 : and eax, 0x3fc00 ; ret
0x00000000000a1bac : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000165517 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x0000000000165577 : and eax, 0x48fff16c ; cmp ebx, ebp ; jae 0x165594 ; call qword ptr [rbx]
0x0000000000093eae : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000002fed2 : and eax, 0x7f ; ret
0x00000000000a1c30 : and eax, 0x7ff80000 ; ret
0x0000000000036434 : and eax, 0x80 ; ret
0x0000000000036a4d : and eax, 0x8000 ; ret
0x00000000000364f7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000072fc2 : and eax, 0x804 ; ret
0x00000000000e65c7 : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000c2ac7 : and eax, 0x89000289 ; ret 0xc748
0x000000000012ceb2 : and eax, 0x8948ffef ; ret
0x00000000001081f7 : and eax, 0xc ; cmp eax, 4 ; je 0x108208 ; ret
0x0000000000108346 : and eax, 0xc ; pop r12 ; ret
0x00000000001a0bcd : and eax, 0xc7700001 ; int1 ; call qword ptr [rsi]
0x00000000001a0be5 : and eax, 0xc7780001 ; int1 ; call qword ptr [rbx]
0x00000000001a0bfd : and eax, 0xc7800001 ; int1 ; call qword ptr [rbx]
0x0000000000165ffa : and eax, 0xf31e7500 ; ret
0x00000000001657b5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000fa5e1 : and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000010c658 : and eax, 0xffffff ; ret
0x0000000000117843 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000d1e88 : and eax, 1 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000fddba : and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000002fe82 : and eax, 1 ; ret
0x000000000002fd02 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d1da1 : and eax, 2 ; pop rbp ; ret
0x00000000000385cc : and eax, 2 ; sub eax, 1 ; ret
0x000000000002fda2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002fcc2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000036704 : and eax, 8 ; ret
0x0000000000189be5 : and eax, dword ptr [rcx] ; add byte ptr [rsp + rdi - 0x11], al ; call rsp
0x0000000000197526 : and eax, dword ptr [rdi + 0xd1cffed] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000015a829 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000037b23 : and eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000b0779 : and eax, dword ptr [rsi] ; xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000000000360a2 : and eax, ecx ; ret
0x0000000000036172 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000036751 : and eax, edx ; ret
0x000000000003009d : and eax, esi ; ret
0x0000000000057e88 : and ebp, 0x8348ffff ; ret 0xeb08
0x00000000000d4913 : and ebp, ecx ; or eax, 0xf7fffffc ; ret 0
0x0000000000075150 : and ebp, edi ; pop rbx ; ret
0x000000000019bc11 : and ebp, esi ; jmp rcx
0x0000000000108192 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x1081a5 ; ret
0x0000000000192e2d : and ebx, ebp ; jmp qword ptr [rdx]
0x00000000001993ec : and ebx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186745 : and ebx, edi ; jmp rax
0x0000000000186741 : and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x00000000000f30ca : and ebx, esi ; ret
0x0000000000161695 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000160dc8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000071280 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d9339 : and ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000007ccdc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000002fee2 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000c282c : and edi, dword ptr [rax + 1] ; ret
0x0000000000031d5c : and edi, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018ca49 : and edi, eax ; call rsp
0x000000000007dfce : and edi, edx ; neg rdi ; call qword ptr [rax]
0x00000000001b25e9 : and edi, esi ; call qword ptr [rdx]
0x0000000000187021 : and edi, esp ; jmp qword ptr [rax]
0x000000000003d0b7 : and edx, 0x3ff ; xor eax, edx ; ret
0x00000000000376e8 : and edx, 1 ; jne 0x37700 ; xor eax, eax ; nop ; ret
0x000000000018dae1 : and edx, edi ; call rsp
0x0000000000002bd5 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004518b : and esi, 0x8948ffff ; ret
0x0000000000071383 : and esi, 1 ; mov eax, esi ; ret
0x00000000000d28a2 : and esi, 4 ; jne 0xd2856 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b028d : and esi, esi ; jmp qword ptr [rdx]
0x00000000000f5149 : and esp, dword ptr [rbx - 0x74b6000e] ; call rbx
0x0000000000172d91 : and esp, ebp ; call rsi
0x00000000001a924c : and esp, ecx ; hlt ; jmp qword ptr [rdx]
0x0000000000132846 : and esp, edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022d01 : and qword ptr [rax - 0x77], rcx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000022fc5 : and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000376a5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000037887 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018dae0 : and r10, rdi ; call rsp
0x0000000000037b22 : and rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036171 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000007dfcd : and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x00000000000364bb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000364b8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000009390a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008bee0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008bef0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008bf00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008bed0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008be1f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000093b03 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008cb85 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000088afd : bsf eax, edx ; ret
0x0000000000088c6a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000093c20 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000088b4a : bsf rax, rdx ; ret
0x00000000000971b1 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008a817 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000097080 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097090 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000970a0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008aa9b : bsr eax, esi ; add rax, rdi ; ret
0x000000000008a9a9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008a8a5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008a816 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008aa9a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008a9a8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008a8a4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000012817d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010c632 : bswap eax ; ret
0x0000000000002bd7 : bswap ebx ; clc ; ret
0x0000000000105a34 : call 0x101d22
0x0000000000105b0d : call 0x101dd2
0x00000000000ebf84 : call 0x1081d2
0x000000000005f976 : call 0x1105f96c
0x000000000005fa11 : call 0x1105fa07
0x00000000000601e4 : call 0x110601da
0x0000000000060799 : call 0x1106078f
0x0000000000061e51 : call 0x11061e47
0x000000000019d4f8 : call 0x1119cebd
0x00000000001a7d08 : call 0x111a7238
0x00000000001114cb : call 0x11d6e2
0x0000000000127fa8 : call 0x12ad88
0x000000000012eb11 : call 0x12adb2
0x000000000012eb28 : call 0x12ade2
0x000000000011f639 : call 0x12b8d2
0x00000000001a3348 : call 0x131a262f
0x00000000000b1430 : call 0x136927
0x0000000000112038 : call 0x137427
0x0000000000037680 : call 0x140cbe93
0x00000000001aba28 : call 0x141ab015
0x00000000001659a1 : call 0x1559d3
0x0000000000192598 : call 0x1719104c
0x000000000002a961 : call 0x1c52cb1
0x000000000002a961 : call 0x1c52cb5
0x000000000002bab1 : call 0x1c53e01
0x000000000002bab1 : call 0x1c53e05
0x00000000000d182d : call 0x1cf9b7d
0x00000000000e312b : call 0x1f402
0x000000000006317c : call 0x1f412
0x00000000001331dc : call 0x1f472
0x00000000000e8b54 : call 0x1f476
0x00000000000e2c2b : call 0x1f478
0x00000000000af0ef : call 0x1f479
0x000000000017977c : call 0x21178c16
0x00000000001a2448 : call 0x221a164b
0x00000000001a2c98 : call 0x221a1f27
0x00000000001a5728 : call 0x221a4ba8
0x00000000001a62b8 : call 0x221a5779
0x00000000001933f4 : call 0x23191f42
0x0000000000195fc4 : call 0x23194d46
0x00000000001a6748 : call 0x231a5c18
0x00000000001add54 : call 0x231ad2e1
0x0000000000091ac4 : call 0x247da61d
0x0000000000025496 : call 0x248a6
0x0000000000179be0 : call 0x27179080
0x0000000000063914 : call 0x2fbf2
0x00000000000afa0b : call 0x2fbf9
0x0000000000031f65 : call 0x340e8
0x0000000000039239 : call 0x384b7
0x0000000000082924 : call 0x3951292e
0x00000000000ef571 : call 0x3b822
0x00000000000d870d : call 0x42d01056
0x00000000000d8721 : call 0x42d0106a
0x00000000000b0bc0 : call 0x48cd34e7
0x00000000000b1108 : call 0x48cd3a2f
0x0000000000056dac : call 0x49056db4
0x000000000004d6f2 : call 0x49992
0x0000000000072574 : call 0x49cf7
0x00000000000a9da5 : call 0x4ccd32bc
0x000000000012140a : call 0x4cd49d5e
0x000000000014cb1a : call 0x4f93db18
0x000000000014cb19 : call 0x4f93db19
0x000000000014f5ea : call 0x4f9405e8
0x000000000014f5e9 : call 0x4f9405e9
0x000000000015210a : call 0x4f943108
0x0000000000152109 : call 0x4f943109
0x000000000006b93a : call 0x608c4290
0x000000000010872f : call 0x66d2887b
0x0000000000074d78 : call 0x70ff2
0x0000000000105fd1 : call 0x72202
0x00000000000782e8 : call 0x74552
0x000000000010bc85 : call 0x77f82
0x0000000000116c2e : call 0x7b3a9
0x000000000010a491 : call 0x7bce8
0x00000000000cab8b : call 0x86e52
0x00000000000dbc40 : call 0x8c5c4
0x0000000000021ac3 : call 0xa1b36
0x00000000000e4bd1 : call 0xc1e67
0x00000000000e4bfe : call 0xc1e87
0x00000000001a94e7 : call 0xd3794e8
0x00000000000e2842 : call 0xdeae2
0x00000000000eef6a : call 0xeb1e2
0x00000000000efcef : call 0xebf52
0x00000000000efcee : call 0xebf53
0x0000000000100162 : call 0xebf57
0x000000000006fc59 : call 0xebf5b
0x00000000000efd9a : call 0xec138
0x00000000000e4aa0 : call 0xf0d52
0x00000000000cb77c : call 0xf0d57
0x00000000000faaed : call 0xf0faaf6
0x00000000000fab0d : call 0xf0fab16
0x00000000000fddb9 : call 0xf11be49
0x00000000000fe038 : call 0xf11c0c9
0x00000000000fe0b0 : call 0xf11c141
0x00000000000fe140 : call 0xf11c1d1
0x00000000000fe1d0 : call 0xf11c261
0x00000000000fe250 : call 0xf11c2e1
0x00000000000fe2e0 : call 0xf11c371
0x00000000000fe360 : call 0xf11c3f1
0x00000000000fe3f0 : call 0xf11c481
0x00000000000fe480 : call 0xf11c511
0x00000000000fe510 : call 0xf11c5a1
0x00000000000fe5a0 : call 0xf11c631
0x00000000000fe6c0 : call 0xf11c751
0x00000000000fe878 : call 0xf11c909
0x000000000007cd7f : call 0xfca06cf
0x000000000012a2ba : call 0xffffffff80d599d2
0x000000000012a484 : call 0xffffffff80d59b9c
0x000000000012a531 : call 0xffffffff80d59c49
0x000000000005d5a5 : call 0xffffffff834dde27
0x00000000000405e6 : call 0xffffffff8950d71d
0x00000000000b0a73 : call 0xffffffff89cd339a
0x0000000000031c53 : call 0xffffffff8b4fdee3
0x00000000001744e3 : call 0xffffffffaed9e359
0x00000000000b0378 : call 0xffffffffc2344cc0
0x000000000007f50f : call 0xffffffffc28d3d19
0x0000000000081d4e : call 0xffffffffc28d6558
0x00000000000830c2 : call 0xffffffffc28d78cc
0x00000000000812e9 : call 0xffffffffc2915b02
0x00000000000ff544 : call 0xffffffffc298f54e
0x00000000001335d8 : call 0xffffffffc29d35d9
0x00000000000b70ea : call 0xffffffffc2ba8006
0x0000000000040a1b : call 0xffffffffc3055325
0x000000000009d804 : call 0xffffffffc309d814
0x00000000000a1776 : call 0xffffffffc316a4cc
0x00000000000a178f : call 0xffffffffc316a4e5
0x0000000000104172 : call 0xffffffffc35550c0
0x000000000006dae7 : call 0xffffffffc3631c4d
0x000000000006f564 : call 0xffffffffc36336ca
0x000000000006ff47 : call 0xffffffffc36340ad
0x00000000000734cc : call 0xffffffffc3637632
0x00000000000a413b : call 0xffffffffc36682a1
0x0000000000114d52 : call 0xffffffffc36d8eb8
0x000000000011d6a2 : call 0xffffffffc36f17ac
0x0000000000125e44 : call 0xffffffffc39ba655
0x000000000015d5e5 : call 0xffffffffc39be4fe
0x000000000015e665 : call 0xffffffffc39bf57e
0x000000000003a3f9 : call 0xffffffffc3b2b34a
0x000000000008ccc7 : call 0xffffffffc3d95618
0x0000000000086e17 : call 0xffffffffc400f768
0x0000000000088617 : call 0xffffffffc4010f68
0x000000000007c18d : call 0xffffffffd107c194
0x00000000001949e8 : call 0xffffffffd3193690
0x00000000001a8818 : call 0xffffffffe11a7d62
0x00000000000367e8 : call 0xffffffffe2852a78
0x000000000005f298 : call 0xffffffffef06786a
0x000000000004a4d6 : call 0xfffffffffb2d326d
0x0000000000136061 : call 0xffffffffff13606a
0x0000000000136092 : call 0xffffffffff13609b
0x0000000000129719 : call qword ptr [r10]
0x000000000004bec2 : call qword ptr [r11 + rax*8]
0x000000000012056b : call qword ptr [r11]
0x000000000001ff64 : call qword ptr [r14]
0x000000000018682f : call qword ptr [rax + 0x10fffb82]
0x0000000000186837 : call qword ptr [rax + 0x10fffb85]
0x000000000018683f : call qword ptr [rax + 0x10fffb88]
0x0000000000186847 : call qword ptr [rax + 0x10fffb8b]
0x000000000018684f : call qword ptr [rax + 0x10fffb8e]
0x0000000000186857 : call qword ptr [rax + 0x10fffb91]
0x000000000018685f : call qword ptr [rax + 0x10fffb94]
0x0000000000187797 : call qword ptr [rax + 0x10fffc7d]
0x000000000018778f : call qword ptr [rax + 0x10fffc7e]
0x0000000000187787 : call qword ptr [rax + 0x10fffc7f]
0x000000000018777f : call qword ptr [rax + 0x10fffc80]
0x0000000000187ef3 : call qword ptr [rax + 0x10fffc84]
0x0000000000187eb7 : call qword ptr [rax + 0x10fffc85]
0x0000000000187efb : call qword ptr [rax + 0x10fffc87]
0x0000000000187ebf : call qword ptr [rax + 0x10fffc88]
0x0000000000187f03 : call qword ptr [rax + 0x10fffc8a]
0x0000000000187ec7 : call qword ptr [rax + 0x10fffc8b]
0x0000000000187f0b : call qword ptr [rax + 0x10fffc8d]
0x0000000000187ecf : call qword ptr [rax + 0x10fffc8e]
0x0000000000187f13 : call qword ptr [rax + 0x10fffc90]
0x0000000000187ed7 : call qword ptr [rax + 0x10fffc91]
0x0000000000187f1b : call qword ptr [rax + 0x10fffc93]
0x0000000000187edf : call qword ptr [rax + 0x10fffc94]
0x0000000000187f23 : call qword ptr [rax + 0x10fffc96]
0x0000000000187ee7 : call qword ptr [rax + 0x10fffc97]
0x0000000000186b4b : call qword ptr [rax + 0x20fffbe8]
0x0000000000186f6b : call qword ptr [rax + 0x20fffc37]
0x0000000000187253 : call qword ptr [rax + 0x20fffc61]
0x000000000018703b : call qword ptr [rax + 0x20fffc64]
0x0000000000187567 : call qword ptr [rax + 0x20fffc85]
0x000000000018773f : call qword ptr [rax + 0x20fffc89]
0x0000000000187a5f : call qword ptr [rax + 0x20fffcac]
0x0000000000187c37 : call qword ptr [rax + 0x20fffcb0]
0x00000000000235fe : call qword ptr [rax + 0x48e9c289]
0x000000000018700f : call qword ptr [rax - 0x1f0003e2]
0x0000000000186fbb : call qword ptr [rax - 0x1f0003e9]
0x0000000000186e43 : call qword ptr [rax - 0x1f00040e]
0x0000000000186c63 : call qword ptr [rax - 0x1f00042c]
0x0000000000186c77 : call qword ptr [rax - 0x1f00043a]
0x0000000000186803 : call qword ptr [rax - 0x1f00048e]
0x000000000017859b : call qword ptr [rax - 0x1f000e79]
0x0000000000186c2f : call qword ptr [rax - 0x2f000440]
0x0000000000177583 : call qword ptr [rax - 0x2f00118e]
0x000000000003621e : call qword ptr [rax - 0x3d]
0x0000000000178a67 : call qword ptr [rax - 0x4f000d97]
0x0000000000186f67 : call qword ptr [rax - 0x6f0003cb]
0x0000000000186b47 : call qword ptr [rax - 0x6f00041a]
0x0000000000187eab : call qword ptr [rax - 0xf000360]
0x0000000000178a4f : call qword ptr [rax]
0x00000000001869ef : call qword ptr [rbp + 0x11fffdb8]
0x000000000004bec3 : call qword ptr [rbx + rax*8]
0x0000000000165580 : call qword ptr [rbx]
0x0000000000186abb : call qword ptr [rcx]
0x000000000017956b : call qword ptr [rdi]
0x0000000000187317 : call qword ptr [rdx + 0x12fffc57]
0x000000000018730f : call qword ptr [rdx + 0x12fffc58]
0x0000000000187307 : call qword ptr [rdx + 0x12fffc59]
0x00000000001872ff : call qword ptr [rdx + 0x12fffc5a]
0x0000000000187127 : call qword ptr [rdx + 0x22fffc5f]
0x0000000000187613 : call qword ptr [rdx + 0x22fffc87]
0x0000000000187b0b : call qword ptr [rdx + 0x22fffcae]
0x000000000018dc73 : call qword ptr [rdx + rax*8 + 2]
0x000000000004cdfb : call qword ptr [rdx]
0x0000000000186a4f : call qword ptr [rsi + 0x11fffdb9]
0x0000000000187083 : call qword ptr [rsi + 0x26fffc63]
0x0000000000187aa7 : call qword ptr [rsi + 0x26fffcab]
0x000000000001ff65 : call qword ptr [rsi]
0x00000000001789dd : call qword ptr fs:[rax]
0x0000000000028b26 : call r12
0x0000000000025b63 : call r14
0x00000000000238ef : call r15
0x000000000006d832 : call r8
0x0000000000186c33 : call rax
0x000000000002f8f8 : call rbx
0x00000000001869bf : call rcx
0x00000000000238f0 : call rdi
0x0000000000031db1 : call rdx
0x0000000000025b64 : call rsi
0x0000000000028b27 : call rsp
0x00000000001a7fb5 : cdq ; add dword ptr [rax], eax ; js 0x1a7fec ; cmc ; jmp qword ptr [rcx]
0x00000000001a7fb4 : cdq ; add dword ptr [rax], eax ; js 0x1a7fed ; cmc ; jmp qword ptr [rcx]
0x00000000001a7fcd : cdq ; add dword ptr [rax], eax ; nop ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7f85 : cdq ; add dword ptr [rax], eax ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018df89 : cdq ; cli ; jmp rsp
0x0000000000199c04 : cdq ; fldln2 ; jmp qword ptr [rdx]
0x0000000000199a54 : cdq ; fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001798cd : cdq ; hlt ; jmp qword ptr [rbx]
0x0000000000179bb9 : cdq ; hlt ; jmp qword ptr [rsi]
0x00000000001798c9 : cdq ; hlt ; lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x00000000000f46e3 : cdq ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000003c984 : cdq ; idiv rsi ; ret
0x0000000000194299 : cdq ; in al, dx ; jmp qword ptr [rcx]
0x0000000000176220 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001785dd : cdq ; int1 ; inc eax ; cdq ; int1 ; jmp rax
0x00000000001785e1 : cdq ; int1 ; jmp rax
0x00000000001a1eac : cdq ; nop ; int1 ; jmp qword ptr [rdx]
0x0000000000128d73 : cdq ; out dx, ax ; dec dword ptr [rax - 0x77] ; ret
0x000000000019e231 : cdq ; out dx, eax ; jmp rdi
0x0000000000038849 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000004d6f3 : cdq ; ret 0xffff
0x00000000000ef142 : cdq ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000133a53 : cdq ; sub byte ptr [rax], 0 ; pop r12 ; jmp rax
0x00000000000f05fb : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000795e8 : cdqe ; ret
0x000000000011825d : cdqe ; shr rax, 4 ; ret
0x00000000000a557f : clc ; adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x00000000000801e8 : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000048d39 : clc ; add al, 0x89 ; ret
0x00000000000dca08 : clc ; add al, 0xf ; xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000dfcdd : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000af609 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xc7e9
0x00000000000af465 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x00000000001b1c28 : clc ; add bh, dh ; call qword ptr [rdi]
0x000000000004fe53 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000189625 : clc ; add byte ptr [rax], al ; je 0x1895e0 ; out dx, al ; call rsp
0x000000000019df0d : clc ; add byte ptr [rax], al ; mov al, 0x8c ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000e4d20 : clc ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000a3a24 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000000a3998 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8548
0x00000000000a3a0c : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8aeb
0x000000000007718c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000073f89 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000061a58 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x000000000004982b : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000000a644b : clc ; add cl, byte ptr [rcx + 0x39] ; ret
0x00000000000cda6e : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000018e595 : clc ; add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x00000000000941bb : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117845 : clc ; add eax, 0x10 ; ret
0x00000000000b7936 : clc ; add eax, 0x2907fbc1 ; ret 0x8944
0x00000000000b22e8 : clc ; add eax, 0x89d02944 ; ret
0x00000000000b24dd : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x00000000000869d4 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000345b0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x0000000000121341 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000971b6 : clc ; add rax, r8 ; ret
0x000000000008bca8 : clc ; add rax, rcx ; ret
0x0000000000108cf0 : clc ; add rsp, 8 ; ret
0x000000000007d644 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000002fed1 : clc ; and eax, 0x7f ; ret
0x000000000010c657 : clc ; and eax, 0xffffff ; ret
0x000000000010c631 : clc ; bswap eax ; ret
0x000000000018c8d2 : clc ; call rsp
0x000000000019fc68 : clc ; cld ; jmp qword ptr [rbx]
0x00000000001ac6d1 : clc ; cmc ; call qword ptr [rax]
0x0000000000114661 : clc ; cmc ; je 0x11465d ; pop rbx ; ret
0x00000000000497ca : clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a6 : clc ; cmovae rax, rsi ; ret
0x000000000008354e : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000001a8648 : clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000000974b6 : clc ; cmp eax, 0x89480f75 ; clc ; ret
0x0000000000003a9e : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000161639 : clc ; cmp rcx, rax ; jne 0x16166b ; xor eax, eax ; ret
0x0000000000161638 : clc ; cmp rcx, rax ; jne 0x16166c ; xor eax, eax ; ret
0x0000000000162479 : clc ; cmp rcx, rax ; jne 0x1624ab ; xor eax, eax ; ret
0x0000000000162478 : clc ; cmp rcx, rax ; jne 0x1624ac ; xor eax, eax ; ret
0x000000000003c982 : clc ; cqo ; idiv rsi ; ret
0x000000000002fb46 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000080be4 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000013284b : clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000006ee6f : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000ae2ba : clc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010385f : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000018cefa : clc ; dec dword ptr [rbp + rbx*2 + 0x7d220002] ; clc ; call rsp
0x000000000018cd12 : clc ; dec dword ptr [rbp + rcx*2 + 0x542d0002] ; clc ; call rsp
0x000000000018d242 : clc ; dec dword ptr [rbp + rsi*2 - 0xad2fffe] ; clc ; call rsp
0x000000000018ca42 : clc ; dec dword ptr [rbx + rdi + 0x23510002] ; clc ; call rsp
0x000000000018d20a : clc ; dec dword ptr [rbx + rsi*2 - 0xc23fffe] ; clc ; call rsp
0x000000000004e283 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ba92 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000060401 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000478e6 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x000000000006dd0f : clc ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x0000000000071a2b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000018cd52 : clc ; dec esp ; push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000018c7e2 : clc ; dec esp ; sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x00000000001ab9f8 : clc ; in eax, -0xb ; call qword ptr [rax]
0x000000000019ab65 : clc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000ae5b5 : clc ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000001a5538 : clc ; jae 0x1a5532 ; jmp qword ptr [rcx]
0x000000000019458c : clc ; jl 0x19457e ; jmp qword ptr [rdx]
0x0000000000077abb : clc ; jmp 0x77a82
0x00000000001794ed : clc ; jmp qword ptr [rax]
0x00000000001a47b1 : clc ; jmp qword ptr [rdi]
0x0000000000179515 : clc ; jmp qword ptr [rip - 0x1e000bfe]
0x00000000001aaa5a : clc ; jmp qword ptr [rsi]
0x00000000000b8399 : clc ; jmp rax
0x000000000018c7ea : clc ; jmp rsp
0x000000000016445a : clc ; jne 0x164567 ; ret
0x0000000000164459 : clc ; jne 0x164568 ; ret
0x00000000000918b7 : clc ; jne 0x91791 ; ret
0x000000000019c3f8 : clc ; js 0x19c3ec ; jmp qword ptr [rcx]
0x000000000018c83a : clc ; lcall ptr [rsi + rbp + 0x4c40002] ; clc ; jmp rsp
0x000000000018cb92 : clc ; lcall ptr [rsp + rax*2 + 0x3c7b0002] ; clc ; jmp rsp
0x00000000001b4398 : clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000000f337b : clc ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000969f8 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000174e82 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001ae33c : clc ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000199166 : clc ; mov ebx, 0xd1cffed ; push 0xbb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a2d78 : clc ; mov edx, esi ; jmp qword ptr [rdi]
0x0000000000144637 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000144fa7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c8a7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001451a7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c817 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001453a7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c787 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144653 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000017a484 : clc ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000039ef2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001a5118 : clc ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000000a37bc : clc ; nop dword ptr [rax] ; ret
0x00000000000fd6c1 : clc ; nop word ptr [rax + rax] ; ret
0x0000000000192b18 : clc ; or al, 0xeb ; jmp rax
0x00000000001abc48 : clc ; out 0xf5, al ; call qword ptr [rax]
0x000000000019d559 : clc ; out dx, al ; call qword ptr [rax]
0x000000000019d571 : clc ; out dx, al ; jmp qword ptr [rsi]
0x00000000001ab2ec : clc ; pop rax ; cmc ; jmp qword ptr [rdx]
0x000000000018f6b8 : clc ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000000354ac : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000101ecd : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007da81 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108f22 : clc ; pop rbx ; ret
0x000000000002201f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000000fa71c : clc ; push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x00000000000bd47d : clc ; push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x0000000000076aba : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000001330ff : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000038625 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bec0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000007514b : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000018c902 : clc ; push qword ptr [rdx + rsi + 0x12540002] ; clc ; call rsp
0x0000000000114972 : clc ; push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x0000000000002bad : clc ; ret
0x000000000001b0f8 : clc ; ret 0x3b
0x0000000000185dd2 : clc ; ret 0x6e1f
0x000000000010c641 : clc ; ror ax, 8 ; ret
0x00000000001aaba8 : clc ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000000389c : clc ; salc ; jb 0x3920 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003c923 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000a3a09 : clc ; sar rax, 2 ; sub rdx, rax ; jmp 0xa39a4
0x000000000010abdb : clc ; sar rax, 6 ; ret
0x0000000000038bba : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000010c6d7 : clc ; shr eax, 0x18 ; ret
0x00000000001a7e68 : clc ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000104031 : clc ; sub eax, esi ; ret
0x000000000013cebb : clc ; sub rax, rsi ; ret
0x00000000001af7a8 : clc ; test dh, dh ; jmp rdx
0x000000000002d503 : clc ; test rcx, rcx ; je 0x2d511 ; call rcx
0x0000000000195348 : clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x000000000003611d : cld ; adc al, 0 ; orpd xmm0, xmm1 ; ret
0x00000000000c2612 : cld ; add byte ptr [rax], al ; ret
0x00000000000a1bcf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1bf2 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000187796 : cld ; call qword ptr [rax + 0x10fffc7d]
0x000000000018778e : cld ; call qword ptr [rax + 0x10fffc7e]
0x0000000000187786 : cld ; call qword ptr [rax + 0x10fffc7f]
0x000000000018777e : cld ; call qword ptr [rax + 0x10fffc80]
0x0000000000187ef2 : cld ; call qword ptr [rax + 0x10fffc84]
0x0000000000187eb6 : cld ; call qword ptr [rax + 0x10fffc85]
0x0000000000187efa : cld ; call qword ptr [rax + 0x10fffc87]
0x0000000000187ebe : cld ; call qword ptr [rax + 0x10fffc88]
0x0000000000187f02 : cld ; call qword ptr [rax + 0x10fffc8a]
0x0000000000187ec6 : cld ; call qword ptr [rax + 0x10fffc8b]
0x0000000000187f0a : cld ; call qword ptr [rax + 0x10fffc8d]
0x0000000000187ece : cld ; call qword ptr [rax + 0x10fffc8e]
0x0000000000187f12 : cld ; call qword ptr [rax + 0x10fffc90]
0x0000000000187ed6 : cld ; call qword ptr [rax + 0x10fffc91]
0x0000000000187f1a : cld ; call qword ptr [rax + 0x10fffc93]
0x0000000000187ede : cld ; call qword ptr [rax + 0x10fffc94]
0x0000000000187f22 : cld ; call qword ptr [rax + 0x10fffc96]
0x0000000000187ee6 : cld ; call qword ptr [rax + 0x10fffc97]
0x0000000000186f6a : cld ; call qword ptr [rax + 0x20fffc37]
0x0000000000187252 : cld ; call qword ptr [rax + 0x20fffc61]
0x000000000018703a : cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000187566 : cld ; call qword ptr [rax + 0x20fffc85]
0x000000000018773e : cld ; call qword ptr [rax + 0x20fffc89]
0x0000000000187a5e : cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000187c36 : cld ; call qword ptr [rax + 0x20fffcb0]
0x000000000018700e : cld ; call qword ptr [rax - 0x1f0003e2]
0x0000000000186fba : cld ; call qword ptr [rax - 0x1f0003e9]
0x0000000000186f66 : cld ; call qword ptr [rax - 0x6f0003cb]
0x0000000000187eaa : cld ; call qword ptr [rax - 0xf000360]
0x0000000000178666 : cld ; call qword ptr [rax]
0x0000000000187316 : cld ; call qword ptr [rdx + 0x12fffc57]
0x000000000018730e : cld ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187306 : cld ; call qword ptr [rdx + 0x12fffc59]
0x00000000001872fe : cld ; call qword ptr [rdx + 0x12fffc5a]
0x0000000000187126 : cld ; call qword ptr [rdx + 0x22fffc5f]
0x0000000000187612 : cld ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187b0a : cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000187106 : cld ; call qword ptr [rdx]
0x0000000000187082 : cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187aa6 : cld ; call qword ptr [rsi + 0x26fffcab]
0x00000000001870a2 : cld ; call qword ptr [rsi]
0x0000000000186f4a : cld ; call rax
0x00000000001870ee : cld ; call rdx
0x0000000000187092 : cld ; call rsi
0x00000000001871be : cld ; call rsp
0x0000000000164552 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x164568 ; xor eax, eax ; ret
0x0000000000164551 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x164569 ; xor eax, eax ; ret
0x00000000000b3238 : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c42ee : cld ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x0000000000132847 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000018772a : cld ; dec edx ; test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x00000000000368f7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001a7261 : cld ; hlt ; jmp rax
0x00000000001a504c : cld ; imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x000000000019ad15 : cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186d4a : cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x0000000000186daa : cld ; inc dword ptr [rax + 0x10fffc0f] ; add bh, ah ; call rax
0x0000000000186eea : cld ; inc dword ptr [rax + 0x10fffc38] ; sub edi, esp ; call rax
0x0000000000186fb6 : cld ; inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x000000000018700a : cld ; inc dword ptr [rax + 0x1d] ; cld ; call qword ptr [rax - 0x1f0003e2]
0x0000000000186e92 : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000186f36 : cld ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186f1e : cld ; inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x000000000018746e : cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x000000000018725e : cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000187046 : cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000186dc6 : cld ; inc dword ptr [rax + 0xd] ; cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000186d46 : cld ; inc dword ptr [rax + 0xe] ; cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x0000000000186dca : cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000186cb2 : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000018701a : cld ; inc dword ptr [rax - 0x2f0003de] ; and edi, esp ; jmp qword ptr [rax]
0x0000000000186fc6 : cld ; inc dword ptr [rax - 0x2f0003e5] ; sbb al, 0xfc ; jmp qword ptr [rax]
0x0000000000187c42 : cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x0000000000187a6a : cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x0000000000187532 : cld ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x000000000018774a : cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000186ee6 : cld ; inc dword ptr [rax - 0x7f0003ca] ; cmp ah, bh ; call qword ptr [rax]
0x0000000000187036 : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000186f56 : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x00000000001877a2 : cld ; inc dword ptr [rax] ; jl 0x1877ac ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001879a6 : cld ; inc dword ptr [rax] ; jnp 0x1879b0 ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x0000000000187a5a : cld ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x000000000018773a : cld ; inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000187c32 : cld ; inc dword ptr [rax] ; mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x0000000000186cba : cld ; inc dword ptr [rax] ; or esp, edi ; jmp rax
0x0000000000187562 : cld ; inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x00000000001786ae : cld ; inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x0000000000186f3e : cld ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x0000000000186e9a : cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000001876e6 : cld ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x00000000001794e9 : cld ; inc dword ptr [rbx - 8] ; jmp qword ptr [rax]
0x00000000000a1ca9 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1bae : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001141d0 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001870f2 : cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x0000000000187b16 : cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x000000000018761e : cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000018760e : cld ; inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187322 : cld ; inc dword ptr [rdx] ; push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000187b06 : cld ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x000000000018708e : cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x0000000000187a72 : cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x000000000018757a : cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x000000000018707e : cld ; inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187aa2 : cld ; inc dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x0000000000187bde : cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x00000000001871ba : cld ; inc dword ptr [rsp - 4] ; call rsp
0x0000000000186fd6 : cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000186d8a : cld ; inc eax ; paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x00000000001a2461 : cld ; int1 ; jmp qword ptr [rcx]
0x00000000001872a6 : cld ; jmp qword ptr [rax + 0x10fffc55]
0x000000000018722e : cld ; jmp qword ptr [rax + 0x10fffc5e]
0x0000000000187962 : cld ; jmp qword ptr [rax + 0x10fffc7b]
0x0000000000187776 : cld ; jmp qword ptr [rax + 0x10fffc81]
0x00000000001786c6 : cld ; jmp qword ptr [rax + 0x10fffc9d]
0x000000000018799a : cld ; jmp qword ptr [rax + 0x20fffc7c]
0x0000000000187992 : cld ; jmp qword ptr [rax + 0x20fffc7d]
0x000000000018798a : cld ; jmp qword ptr [rax + 0x20fffc7e]
0x0000000000187982 : cld ; jmp qword ptr [rax + 0x20fffc7f]
0x000000000018797a : cld ; jmp qword ptr [rax + 0x20fffc80]
0x0000000000187e6a : cld ; jmp qword ptr [rax + 0x30fffca0]
0x00000000001874ee : cld ; jmp qword ptr [rax - 0x1f0003c9]
0x0000000000186dee : cld ; jmp qword ptr [rax - 0x1f000418]
0x00000000001786a6 : cld ; jmp qword ptr [rax]
0x000000000019fc6a : cld ; jmp qword ptr [rbx]
0x00000000001872f6 : cld ; jmp qword ptr [rdx + 0x12fffc5b]
0x00000000001875ee : cld ; jmp qword ptr [rdx + 0x12fffc84]
0x000000000018712a : cld ; jmp qword ptr [rdx]
0x0000000000187086 : cld ; jmp qword ptr [rsi]
0x00000000001786b6 : cld ; jmp rax
0x000000000018711a : cld ; jmp rdx
0x000000000018706e : cld ; jmp rsi
0x00000000001871e2 : cld ; jmp rsp
0x0000000000162286 : cld ; jne 0x1624bf ; xor eax, eax ; ret
0x0000000000164555 : cld ; jne 0x164565 ; xor eax, eax ; ret
0x0000000000164554 : cld ; jne 0x164566 ; xor eax, eax ; ret
0x0000000000164475 : cld ; jne 0x164567 ; ret
0x0000000000164474 : cld ; jne 0x164568 ; ret
0x00000000001870e6 : cld ; lcall ptr [rdi + rbx*2 + 0x5f2cfffc] ; cld ; call rdx
0x00000000001878aa : cld ; lcall ptr [rsi + 0x2efffc7a] ; jp 0x1878b8 ; call rsp
0x0000000000187cee : cld ; ljmp ptr [rax - 4] ; call qword ptr [rdx]
0x00000000001870ea : cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x00000000001878ae : cld ; ljmp ptr [rsi] ; jp 0x1878b4 ; call rsp
0x0000000000144dc2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144fc5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001451c5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001453c5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001449f6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014ca36 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144bd6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c9b6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144db6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c936 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144816 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014cab6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000968d9 : cld ; mov rax, rdi ; ret
0x0000000000039eac : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000189969 : cld ; out dx, al ; jmp rsp
0x00000000000a39b3 : cld ; pop rbx ; ret
0x0000000000186fd2 : cld ; push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x000000000018746a : cld ; push qword ptr [rax + 0x40fffc54] ; push rsp ; cld ; jmp rax
0x0000000000187042 : cld ; push qword ptr [rax + 0x40fffc63] ; movsxd rdi, esp ; call rax
0x0000000000187746 : cld ; push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x0000000000187a66 : cld ; push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rsi
0x0000000000187c3e : cld ; push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000187436 : cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x00000000001879aa : cld ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x00000000001877a6 : cld ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001786b2 : cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x000000000018772e : cld ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x0000000000186d0e : cld ; push qword ptr [rax] ; add edi, esp ; push rax ; add al, 0xfc ; call rax
0x0000000000187976 : cld ; push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x000000000018795e : cld ; push qword ptr [rax] ; jl 0x187968 ; jmp qword ptr [rax + 0x10fffc7b]
0x00000000001872a2 : cld ; push qword ptr [rax] ; push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x00000000001786c2 : cld ; push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x00000000001876e2 : cld ; push qword ptr [rbp + rax*4 - 0x7abb0004] ; cld ; call rsp
0x0000000000187db6 : cld ; push qword ptr [rdi - 4] ; jmp rsp
0x000000000018761a : cld ; push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x0000000000187b12 : cld ; push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000187326 : cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x00000000001877f6 : cld ; push qword ptr [rdx - 0x7f] ; cld ; jmp rdx
0x0000000000187576 : cld ; push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x00000000001873de : cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x00000000001871b6 : cld ; push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x0000000000187bda : cld ; push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x0000000000186d12 : cld ; push rax ; add al, 0xfc ; call rax
0x0000000000178662 : cld ; push rax ; jge 0x178668 ; call qword ptr [rax]
0x0000000000186cda : cld ; push rax ; or ah, bh ; call rax
0x0000000000187432 : cld ; push rax ; pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x0000000000178682 : cld ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x00000000001782a8 : cld ; push rbx ; out dx, eax ; lcall ptr [rcx + rdx*2] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001877f2 : cld ; push rdx ; cmp esp, 0xfc8172ff ; jmp rdx
0x0000000000187db2 : cld ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x00000000001873da : cld ; push rsp ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000039eb2 : cld ; ret
0x00000000001aa94c : cld ; ret 1
0x000000000019d529 : cld ; stc ; call qword ptr [rax]
0x000000000018d9c9 : cld ; stc ; call rsp
0x000000000019b104 : cld ; sub dh, ch ; jmp qword ptr [rdx]
0x0000000000174336 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001875ec : cld ; test bh, ah ; jmp qword ptr [rdx + 0x12fffc84]
0x00000000000b01ce : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb01d1 ; ret
0x00000000001a6d4c : cld ; xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a7e4c : cld ; xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a7e83 ; cmc ; jmp qword ptr [rcx]
0x000000000003ce85 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b15fc : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b1581 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000013381b : cli ; add al, 0xf ; test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x0000000000110e4c : cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000c1e19 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000000b2409 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000b8ada : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003e92e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000028563 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000000b0a64 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003749 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3731 ; ret 0x975
0x00000000000f3360 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000019d5ea : cli ; call qword ptr [rax]
0x000000000018dc72 : cli ; call qword ptr [rdx + rax*8 + 2]
0x00000000000858ca : cli ; call rax
0x00000000001b67a2 : cli ; call rcx
0x000000000018da7a : cli ; call rsp
0x00000000001ac731 : cli ; cmc ; call qword ptr [rax]
0x00000000001aaed4 : cli ; cmc ; jmp qword ptr [rdx]
0x00000000001ac919 : cli ; cmc ; jmp rsp
0x00000000001b128c : cli ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000019b5cc : cli ; cmp esi, ebp ; jmp qword ptr [rdx]
0x00000000000eda7b : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c0a51 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000078f59 : cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e3a6d : cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0c3c5
0x00000000000722d9 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000018e0e2 : cli ; dec dword ptr [rbp + rbx*8 - 0x418ffffe] ; cli ; call rsp
0x000000000018dada : cli ; dec dword ptr [rbp + rsi*4 + 0x214b0002] ; cli ; call rsp
0x0000000000032a29 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000018dbb2 : cli ; dec esp ; mov ebp, 0x33c40002 ; cli ; jmp rsp
0x000000000018dc12 : cli ; dec esp ; mov edi, 0x3ad40002 ; cli ; jmp rsp
0x000000000019abad : cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e4924 : cli ; inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000018df82 : cli ; inc dword ptr [rsi + rdx*8 - 0x664bfffe] ; cli ; jmp rsp
0x000000000018e14a : cli ; inc esp ; loope 0x18e15a ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x000000000018dc92 : cli ; inc esp ; ret 2
0x00000000001a23d1 : cli ; int1 ; jmp qword ptr [rcx]
0x0000000000117871 : cli ; je 0x11785e ; mov eax, 0xffffffff ; ret
0x0000000000117c91 : cli ; je 0x117be4 ; ret
0x000000000017afee : cli ; jmp qword ptr [rax - 0x47000573]
0x0000000000192f42 : cli ; jmp qword ptr [rcx]
0x0000000000034c06 : cli ; jmp rdx
0x000000000017c4c6 : cli ; jmp rsp
0x00000000000c443a : cli ; jnp 0xc4450 ; xchg eax, esp ; ret 0xb60f
0x00000000000c466a : cli ; jnp 0xc4680 ; xchg eax, esp ; ret 0xb60f
0x00000000000c48d6 : cli ; jnp 0xc48ec ; xchg eax, esp ; ret 0xb60f
0x000000000018dd22 : cli ; lcall ptr [rdi + rax*8 + 0x55f40002] ; cli ; call rsp
0x000000000018da72 : cli ; ljmp ptr [rax + rdi*4 + 0x1ed40002] ; cli ; call rsp
0x000000000017c4be : cli ; ljmp ptr [rbx + rsi*4 - 0x42e30006] ; cli ; jmp rsp
0x00000000001451c8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000197b84 : cli ; mov ebp, ebp ; jmp qword ptr [rdx]
0x0000000000096937 : cli ; mov rax, rdi ; ret
0x0000000000110f8b : cli ; mov rdi, r12 ; call rax
0x000000000008c098 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002ef50 : cli ; nop word ptr [rax + rax] ; ret
0x00000000001387c6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000034635 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x0000000000029653 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000000b026d : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000018722c : cli ; pop rsi ; cld ; jmp qword ptr [rax + 0x10fffc5e]
0x00000000001767a1 : cli ; push 0x6e ; ja 0x17672e ; ret 0x48f
0x00000000000fcdf7 : cli ; push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x00000000000fa7b1 : cli ; push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018db52 : cli ; push qword ptr [rbx + rdi*4 + 0x2e040002] ; cli ; jmp rsp
0x000000000018e142 : cli ; push qword ptr [rcx + 2] ; add ah, dl ; ret 0xfffa
0x000000000006ec92 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000fcba8 : cli ; push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x0000000000107c72 : cli ; ret
0x00000000000b159f : cli ; ret 0x10
0x0000000000175245 : cli ; ret 0xac65
0x0000000000107b4b : cli ; setae al ; ret
0x0000000000186e5d : cli ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x00000000000c48d1 : cli ; sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x000000000011b339 : cli ; sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000c784e : cli ; sub r10, rax ; jmp 0xc786f
0x0000000000088ba0 : cli ; test rdx, rdx ; je 0x88bb9 ; bsf rax, rdx ; ret
0x0000000000088d8f : cli ; test rdx, rdx ; je 0x88db9 ; bsf rax, rdx ; ret
0x0000000000173e8a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000088768 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000005362f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013cd38 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016606a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a7d0a : cmc ; call qword ptr [rax]
0x000000000017a57a : cmc ; call qword ptr [rbx]
0x00000000001a7c4a : cmc ; call qword ptr [rcx]
0x00000000001abe9a : cmc ; call qword ptr [rdi]
0x00000000001a8212 : cmc ; call qword ptr [rsi]
0x000000000018b3ba : cmc ; call rsp
0x000000000018d249 : cmc ; clc ; call rsp
0x0000000000131bc9 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000116cca : cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; pop rdx ; ret
0x000000000017a336 : cmc ; dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000194ad9 : cmc ; in al, dx ; call qword ptr [rax]
0x000000000010b626 : cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018b3b2 : cmc ; inc dword ptr [rcx + rax*8 + 0x3b440001] ; cmc ; call rsp
0x000000000018b3e2 : cmc ; inc esp ; ret
0x0000000000114662 : cmc ; je 0x11465c ; pop rbx ; ret
0x0000000000193f35 : cmc ; jmp 0x193f39
0x000000000017a33a : cmc ; jmp qword ptr [rax]
0x00000000001a766a : cmc ; jmp qword ptr [rcx]
0x000000000017a49e : cmc ; jmp qword ptr [rdi]
0x00000000001a795a : cmc ; jmp qword ptr [rdx]
0x00000000001a78b2 : cmc ; jmp qword ptr [rsi]
0x00000000001a881a : cmc ; jmp rax
0x00000000001a86aa : cmc ; jmp rbx
0x00000000001a87ca : cmc ; jmp rdi
0x000000000018b3a2 : cmc ; jmp rsp
0x0000000000176bc9 : cmc ; mov ch, 0xab ; ret
0x000000000014c9ba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144a4e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000163a63 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000131bc7 : cmc ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000006ee46 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073971 : cmc ; pop rbp ; pop r12 ; ret
0x0000000000173a77 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000017a332 : cmc ; push qword ptr [rbx] ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000081924 : cmc ; ret
0x00000000000a5d06 : cmc ; setne dl ; jmp 0xa5d1b
0x00000000000aabb6 : cmc ; setne dl ; jmp 0xaabcb
0x00000000000f2627 : cmc ; shr byte ptr [rax + rax], cl ; mov rdx, rax ; jmp 0xf25c5
0x0000000000163a67 : cmc ; sub eax, edx ; ret
0x00000000000f92bf : cmc ; test byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x00000000001ade4c : cmc ; xchg ebp, esi ; jmp qword ptr [rdx]
0x0000000000176205 : cmc ; xlatb ; ret 0x4e27
0x0000000000108a08 : cmova eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000019b89c : cmova ebp, esi ; jmp qword ptr [rdx]
0x000000000003cdc4 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ed248 : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000b16db : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000b16da : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000007d189 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000497cc : cmovae eax, esi ; pop rbx ; ret
0x00000000000498a8 : cmovae eax, esi ; ret
0x000000000000385b : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007d188 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000497cb : cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a7 : cmovae rax, rsi ; ret
0x00000000000cb940 : cmovbe eax, edx ; ret
0x00000000000a387d : cmove eax, ecx ; ret
0x000000000008cb88 : cmove eax, edx ; add eax, 1 ; ret
0x000000000010ae90 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b9f4 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000ebd3d : cmove eax, edx ; jmp 0xebcfd
0x000000000008ab78 : cmove eax, edx ; ret
0x0000000000079cf5 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cf4 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096991 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x0000000000094666 : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x000000000002f629 : cmove esi, eax ; xor ebp, ebp ; jmp 0x2f63b
0x000000000002f628 : cmove r14, rax ; xor ebp, ebp ; jmp 0x2f63c
0x00000000000a387c : cmove rax, rcx ; ret
0x000000000008cb99 : cmove rax, rdx ; add eax, 1 ; ret
0x000000000008b9f3 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000008ab77 : cmove rax, rdx ; ret
0x0000000000094665 : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x000000000007418b : cmovg eax, ecx ; test rdx, rdx ; jne 0x74189 ; ret
0x000000000007af3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x000000000001f6aa : cmovge eax, edx ; jmp 0x1f67c
0x000000000003ca8d : cmovne eax, ebx ; pop rbx ; ret
0x0000000000083550 : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000070c41 : cmovne eax, ecx ; ret
0x00000000000975a1 : cmovne eax, edi ; ret
0x000000000004f4c4 : cmovne eax, edx ; jmp 0x4f53c
0x000000000002f8ab : cmovne eax, edx ; ret
0x0000000000129839 : cmovne eax, edx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000004f4c0 : cmovne ebp, ecx ; cmovne r8, rdx ; jmp 0x4f540
0x000000000004f4bf : cmovne r13, rcx ; cmovne r8, rdx ; jmp 0x4f541
0x0000000000070c40 : cmovne r8, rcx ; ret
0x000000000004f4c3 : cmovne r8, rdx ; jmp 0x4f53d
0x000000000003ca8c : cmovne rax, rbx ; pop rbx ; ret
0x000000000008354f : cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000000975a0 : cmovne rax, rdi ; ret
0x000000000002f8aa : cmovne rax, rdx ; ret
0x0000000000189d08 : cmovnp ebp, edi ; call rsp
0x000000000010206f : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fa086 : cmovns eax, edx ; jmp 0xfa08f
0x0000000000048829 : cmovns eax, edx ; pop rbx ; ret
0x00000000000257ec : cmovns eax, edx ; ret
0x000000000010206e : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fa085 : cmovns rax, rdx ; jmp 0xfa090
0x000000000005f498 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x000000000012d230 : cmovs eax, dword ptr [rbx - 0x3fced73c] ; pop rbx ; pop rbp ; ret
0x0000000000120df0 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x00000000000968e3 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000007bef8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x7bef9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000187785 : cmp ah, 0xff ; nop ; jg 0x18778d ; call qword ptr [rax]
0x0000000000186eed : cmp ah, bh ; call qword ptr [rax]
0x0000000000186f0d : cmp ah, bh ; jmp rax
0x000000000013cea8 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000013cf07 : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000000d1fb8 : cmp al, 0x11 ; je 0xd1fc6 ; xor eax, eax ; ret
0x0000000000021f5d : cmp al, 0x16 ; call rax
0x000000000019038c : cmp al, 0x1d ; add byte ptr [rax], al ; sbb ebp, edx ; call qword ptr [rsi]
0x000000000008124e : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000000f54b1 : cmp al, 0x24 ; call rbx
0x00000000000a3b77 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000013605c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x00000000000ebf7f : cmp al, 0x24 ; mov rdx, rax ; call 0x1081d7
0x000000000011d00f : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000974b5 : cmp al, 0x3d ; jne 0x974d1 ; mov rax, rdi ; ret
0x00000000000c6254 : cmp al, 0x3f ; jne 0xc6201 ; mov eax, 1 ; ret
0x00000000000c6244 : cmp al, 0x3f ; jne 0xc6230 ; mov eax, 1 ; ret
0x000000000018e5bc : cmp al, 0x40 ; add al, byte ptr [rax] ; fdivr st(5) ; jmp rsp
0x0000000000174e80 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000035ad7 : cmp al, 0x5f ; je 0x35af0 ; jmp 0x35aa4
0x000000000018d08c : cmp al, 0x6b ; add al, byte ptr [rax] ; js 0x18d03a ; clc ; jmp rsp
0x00000000001a648c : cmp al, 0x7e ; add dword ptr [rax], eax ; jo 0x1a6457 ; hlt ; jmp qword ptr [rcx]
0x00000000001a13cc : cmp al, 0x7e ; int1 ; jmp qword ptr [rdx]
0x0000000000196c3c : cmp al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000801eb : cmp al, 0x89 ; ret 0xb48b
0x00000000001a7c8c : cmp al, 0x96 ; add dword ptr [rax], eax ; sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a868c : cmp al, 0xa0 ; add dword ptr [rax], eax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000003d984 : cmp al, 0xb2 ; jle 0x3d946 ; jmp 0x3d953
0x000000000019a88c : cmp al, 0xc2 ; add byte ptr [rax], al ; shl byte ptr [rdi], 0xee ; call qword ptr [rsi]
0x00000000001aab8c : cmp al, 0xc5 ; add dword ptr [rax], eax ; loopne 0x1aab6c ; cmc ; jmp qword ptr [rsi]
0x00000000001abc8c : cmp al, 0xd6 ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x000000000019c18c : cmp al, 0xdb ; add byte ptr [rax], al ; push 0xee ; call qword ptr [rdi]
0x00000000000efbac : cmp al, 0xe8 ; sahf ; ret
0x000000000019b6a5 : cmp al, 0xee ; jmp qword ptr [rdx]
0x0000000000189be9 : cmp al, 0xef ; call rsp
0x000000000018cb99 : cmp al, 0xf8 ; jmp rsp
0x0000000000186795 : cmp al, 0xfb ; inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x0000000000162263 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009dab0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000804ec : cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000192065 : cmp al, byte ptr [rax] ; add al, cl ; test al, 0xea ; call qword ptr [rcx]
0x000000000019207d : cmp al, byte ptr [rax] ; add al, dl ; test al, 0xea ; call qword ptr [rcx]
0x000000000002257b : cmp al, byte ptr [rax] ; mov dword ptr [rip + 0x3a167d], edi ; pop rbx ; ret
0x000000000001f574 : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000221a6 : cmp al, byte ptr [rax] ; pop rbx ; ret
0x00000000000223ef : cmp al, byte ptr [rax] ; ret
0x00000000001a2075 : cmp al, byte ptr [rcx] ; add byte ptr [rax - 0x14], bl ; int1 ; jmp qword ptr [rcx]
0x000000000018c9fd : cmp al, byte ptr [rdx] ; add ah, al ; and al, bh ; call rsp
0x00000000001b206d : cmp al, byte ptr [rdx] ; add byte ptr [rax], ah ; or dh, bh ; call qword ptr [rsi]
0x0000000000004050 : cmp al, byte ptr [rip] ; add byte ptr [rax], al ; ret
0x0000000000163f26 : cmp al, byte ptr [rsi - 1] ; jne 0x163f4c ; xor eax, eax ; ret
0x00000000001b6484 : cmp al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000006c1a7 : cmp al, ch ; ret
0x00000000000230a8 : cmp al, ch ; ret 0xffc3
0x000000000008bed6 : cmp al, dh ; ret
0x000000000008bed5 : cmp al, r14b ; ret
0x00000000000367a6 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000001874f9 : cmp bh, ah ; jmp rax
0x00000000001a1144 : cmp bh, byte ptr [rbp - 0xf] ; jmp qword ptr [rdx]
0x0000000000192f41 : cmp bh, dl ; jmp qword ptr [rcx]
0x000000000018dc19 : cmp bh, dl ; jmp rsp
0x0000000000091f6b : cmp bl, dh ; ret
0x00000000001aa9c8 : cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000a2cc6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000760e3 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000e28f2 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000e33be : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc1d1 : cmp byte ptr [rax + 0x63], cl ; ret
0x000000000008cabf : cmp byte ptr [rax + 0xf], cl ; ret
0x00000000001280b6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008bf17 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000d5407 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000f5464 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000b5569 : cmp byte ptr [rax - 0x77], cl ; jmp 0x48cddebf
0x00000000000dcf6a : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000105644 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000760e4 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006d423 : cmp byte ptr [rax - 0x77], cl ; ret 0x778d
0x00000000000e28f3 : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006c96b : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x0000000000105643 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000011f813 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001268a3 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001213e2 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x000000000006ee6c : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000f97a2 : cmp byte ptr [rax - 1], bh ; ret
0x00000000001a85d0 : cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x0000000000186eec : cmp byte ptr [rax], 0xfc ; call qword ptr [rax]
0x000000000015e838 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008bf06 : cmp byte ptr [rax], ah ; ret
0x000000000012f205 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010393b : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000003d1d5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000037ca7 : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000002fa01 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000037c54 : cmp byte ptr [rax], al ; ret
0x000000000013d18c : cmp byte ptr [rax], al ; ret 0xf66
0x0000000000036bc4 : cmp byte ptr [rax], al ; test eax, eax ; jne 0x36bd7 ; ret
0x000000000012b989 : cmp byte ptr [rax], bl ; je 0x12b994 ; ret
0x000000000019a908 : cmp byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000000e33bf : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086ea0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000970a6 : cmp byte ptr [rax], dh ; ret
0x000000000008bef6 : cmp byte ptr [rax], dl ; ret
0x000000000008bef5 : cmp byte ptr [rax], r10b ; ret
0x000000000008bf05 : cmp byte ptr [rax], r12b ; ret
0x00000000000970a5 : cmp byte ptr [rax], r14b ; ret
0x0000000000086e9f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000a2cca : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a2cc9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000094ce0 : cmp byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000094fdb : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x00000000000d10fc : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000129d3a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b1314 : cmp byte ptr [rbx - 0x6ff1b9f9], al ; add dword ptr [rbx], eax ; ret
0x00000000000a2cc7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000074f30 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000a45b0 : cmp byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000a3e59 : cmp byte ptr [rcx + rcx*4 - 0xf], cl ; mov rdi, qword ptr [r13] ; call r12
0x00000000000f2468 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x0000000000179bcc : cmp byte ptr [rcx - 0x66d9000c], bl ; hlt ; jmp qword ptr [rsi]
0x0000000000051f68 : cmp byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000121e39 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000092408 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000018a105 : cmp byte ptr [rcx], al ; add byte ptr [rsi], dh ; shr bh, 1 ; call rsp
0x000000000015e839 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000002c1b2 : cmp byte ptr [rcx], bh ; add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000009eec4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002044 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000487f8 : cmp byte ptr [rdi], 0 ; jne 0x48806 ; pop rbx ; ret
0x00000000001a7958 : cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000e2403 : cmp byte ptr [rdi], cl ; mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000160b0d : cmp byte ptr [rdi], dl ; ret
0x0000000000161620 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161609 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001615f2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001600ae : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000172da8 : cmp byte ptr [rdx], ah ; in al, dx ; call qword ptr [rdx]
0x000000000018c9bd : cmp byte ptr [rdx], al ; add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x00000000000d0cf0 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd0d08 ; xor eax, eax ; ret
0x00000000000f0b12 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000001b5388 : cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000000d1ea6 : cmp byte ptr [rsi], cl ; je 0xd1e37 ; pop rbx ; ret
0x000000000019fee8 : cmp byte ptr [rsi], dl ; int1 ; jmp qword ptr [rcx]
0x0000000000037c53 : cmp byte ptr fs:[rax], al ; ret
0x000000000013cf0a : cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000001abe98 : cmp ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a85b9 : cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019b65d : cmp ch, dh ; jmp qword ptr [rdx]
0x0000000000073535 : cmp cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010bd80 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000083ee1 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000000f612a : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000048cec : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000018e781 : cmp cl, ch ; call qword ptr [rax]
0x000000000018e739 : cmp cl, ch ; call qword ptr [rsi]
0x000000000018e849 : cmp cl, ch ; call rcx
0x00000000000a4a02 : cmp dh, byte ptr [rbx + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000487f5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000019b53d : cmp dh, ch ; jmp qword ptr [rdx]
0x00000000001b128d : cmp dh, dh ; jmp qword ptr [rdx]
0x00000000000ee4b5 : cmp dh, dh ; ret
0x00000000000397c9 : cmp dh, dh ; ret 0x7401
0x0000000000098455 : cmp dh, dh ; ret 0x7501
0x0000000000025c85 : cmp dh, dh ; ret 0x8b01
0x00000000000ad0ea : cmp dl, 0xff ; cmovne eax, ecx ; ret
0x00000000001a6c58 : cmp dl, bl ; hlt ; call qword ptr [rax]
0x0000000000002b62 : cmp dl, byte ptr [rdi] ; ret
0x00000000001a67a8 : cmp dl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001982a8 : cmp dl, dl ; in eax, dx ; call rcx
0x00000000001a1278 : cmp dl, dl ; int1 ; jmp qword ptr [rbx]
0x0000000000080b7a : cmp dl, dl ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000070c1b : cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x0000000000107a6a : cmp dword ptr [rax + 8], edi ; jne 0x107a69 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012b988 : cmp dword ptr [rax], 0x18 ; je 0x12b995 ; ret
0x0000000000055bd2 : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000025494 : cmp dword ptr [rax], eax ; call 0x248a8
0x000000000002ef06 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x390d6f], dl ; ret
0x0000000000021a9f : cmp dword ptr [rax], eax ; pop r12 ; ret
0x000000000002c0e5 : cmp dword ptr [rax], eax ; ret
0x0000000000022085 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x22095 ; jmp rax
0x00000000000220b5 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x220c5 ; jmp rax
0x00000000000d0de0 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd0d77
0x00000000001aad44 : cmp dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x000000000019600c : cmp dword ptr [rbx - 0x13], edi ; jmp qword ptr [rdx]
0x000000000014c4f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000e4d1e : cmp dword ptr [rcx - 8], 0 ; je 0xe4d2f ; mov edx, eax ; jmp 0xe4d1d
0x00000000001a1fa5 : cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x16], bl ; int1 ; jmp qword ptr [rcx]
0x00000000000fd523 : cmp dword ptr [rcx], ecx ; sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001025f1 : cmp dword ptr [rdi + 0x10], 0 ; je 0x102608 ; xor eax, eax ; ret
0x0000000000072fa9 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000b01a4 : cmp dword ptr [rdi + 8], edx ; jne 0xb0173 ; ret
0x00000000000a3879 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x0000000000107aea : cmp dword ptr [rdi], 0 ; je 0x107afe ; ret
0x000000000003d982 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x3d948 ; jmp 0x3d955
0x000000000003d983 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d947 ; jmp 0x3d954
0x000000000010fc11 : cmp dword ptr [rip + 0x2afda8], 0 ; jne 0x10fbe4 ; jmp 0x10fbdc
0x0000000000086501 : cmp dword ptr [rip + 0x33a728], 0 ; je 0x86519 ; ret
0x00000000000f4c50 : cmp dword ptr [rsi], 0 ; je 0xf4c5d ; pop rbx ; ret
0x00000000000037ea : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000ebd38 : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xebd02
0x00000000000ebc28 : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000012b987 : cmp dword ptr fs:[rax], 0x18 ; je 0x12b996 ; ret
0x0000000000003b4f : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000a557e : cmp eax, 0x13 ; je 0xa5596 ; mov edx, eax ; jmp 0xa5556
0x00000000000a7dbe : cmp eax, 0x13 ; je 0xa7dd6 ; mov edx, eax ; jmp 0xa7d96
0x00000000000aa46e : cmp eax, 0x13 ; je 0xaa486 ; mov edx, eax ; jmp 0xaa446
0x000000000010fc12 : cmp eax, 0x2afda8 ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fbdb
0x0000000000112212 : cmp eax, 0x2b0d69 ; call rax
0x0000000000111947 : cmp eax, 0x2b15d4 ; call rax
0x00000000000f479b : cmp eax, 0x2c9b10 ; ret
0x000000000002257e : cmp eax, 0x3a167d ; pop rbx ; ret
0x00000000000cb2bf : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x000000000006723c : cmp eax, 0x83000005 ; ret 0x8308
0x00000000000603fc : cmp eax, 0x83480004 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000080bdf : cmp eax, 0x83480007 ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000974b7 : cmp eax, 0x89480f75 ; clc ; ret
0x00000000000ed3f0 : cmp eax, 0xa1 ; je 0xed410 ; neg eax ; pop rbx ; ret
0x00000000000975aa : cmp eax, 0xeb000000 ; ret
0x000000000013d1b3 : cmp eax, 0xf3ffffff ; ret
0x0000000000114660 : cmp eax, 0xf5 ; je 0x11465e ; pop rbx ; ret
0x00000000001a23cd : cmp eax, 0xfad00001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a2445 : cmp eax, 0xfbe80001 ; int1 ; jmp qword ptr [rcx]
0x00000000001330fe : cmp eax, 0xff ; je 0x133119 ; add rsp, 8 ; ret
0x000000000002201e : cmp eax, 0xff ; je 0x2204c ; add rsp, 8 ; ret
0x000000000007514a : cmp eax, 0xff ; je 0x7515b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007518e : cmp eax, 0xff ; je 0x7519f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007be71 : cmp eax, 0xff ; je 0x7be82 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000fa71b : cmp eax, 0xff ; je 0xfa72f ; pop rbx ; pop rbp ; ret
0x0000000000038624 : cmp eax, 0xff ; jne 0x38619 ; mov rax, rdx ; ret
0x0000000000076ab9 : cmp eax, 0xff ; jne 0x76ac6 ; pop rbx ; ret
0x000000000007bebf : cmp eax, 0xff ; jne 0x7beb0 ; pop rbx ; ret
0x0000000000114971 : cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x00000000001088eb : cmp eax, 0xfffff000 ; ja 0x1088fc ; ret
0x0000000000108968 : cmp eax, 0xfffff000 ; ja 0x108992 ; ret
0x0000000000109fcd : cmp eax, 0xfffff000 ; ja 0x109fde ; ret
0x000000000010a06d : cmp eax, 0xfffff000 ; ja 0x10a07e ; ret
0x0000000000036cca : cmp eax, 0xfffff000 ; ja 0x36cf2 ; ret
0x0000000000036f91 : cmp eax, 0xfffff000 ; ja 0x36fa2 ; ret
0x0000000000036fed : cmp eax, 0xfffff000 ; ja 0x36ffe ; ret
0x0000000000037027 : cmp eax, 0xfffff000 ; ja 0x37036 ; ret
0x00000000000370ad : cmp eax, 0xfffff000 ; ja 0x370be ; ret
0x000000000005dc91 : cmp eax, 0xfffff000 ; ja 0x5dca2 ; ret
0x00000000000be082 : cmp eax, 0xfffff000 ; ja 0xbe091 ; ret
0x00000000000c0ab3 : cmp eax, 0xfffff000 ; ja 0xc0ac2 ; ret
0x00000000000c0b4d : cmp eax, 0xfffff000 ; ja 0xc0b5c ; ret
0x00000000000c0c3c : cmp eax, 0xfffff000 ; ja 0xc0c4b ; ret
0x00000000000c1338 : cmp eax, 0xfffff000 ; ja 0xc1349 ; ret
0x00000000000c1ee4 : cmp eax, 0xfffff000 ; ja 0xc1ef3 ; ret
0x00000000000c1f44 : cmp eax, 0xfffff000 ; ja 0xc1f53 ; ret
0x00000000000c2198 : cmp eax, 0xfffff000 ; ja 0xc21a7 ; ret
0x00000000000c2208 : cmp eax, 0xfffff000 ; ja 0xc2217 ; ret
0x00000000000eb1a6 : cmp eax, 0xfffff000 ; ja 0xeb1cc ; ret
0x00000000000eb1f5 : cmp eax, 0xfffff000 ; ja 0xeb21c ; ret
0x00000000000eb246 : cmp eax, 0xfffff000 ; ja 0xeb26c ; ret
0x00000000000eb29e : cmp eax, 0xfffff000 ; ja 0xeb2cc ; ret
0x00000000000eb302 : cmp eax, 0xfffff000 ; ja 0xeb32c ; ret
0x00000000000eb35b : cmp eax, 0xfffff000 ; ja 0xeb384 ; ret
0x00000000000eb55a : cmp eax, 0xfffff000 ; ja 0xeb56b ; ret
0x00000000000eb5ed : cmp eax, 0xfffff000 ; ja 0xeb5fe ; ret
0x00000000000eb6c1 : cmp eax, 0xfffff000 ; ja 0xeb6d2 ; ret
0x00000000000ebbea : cmp eax, 0xfffff000 ; ja 0xebc6a ; ret
0x00000000000ec9a3 : cmp eax, 0xfffff000 ; ja 0xec9b4 ; ret
0x00000000000ecf94 : cmp eax, 0xfffff000 ; ja 0xecfa5 ; ret
0x00000000000ecfeb : cmp eax, 0xfffff000 ; ja 0xecffc ; ret
0x00000000000ed04e : cmp eax, 0xfffff000 ; ja 0xed061 ; cdqe ; ret
0x00000000000ed0ae : cmp eax, 0xfffff000 ; ja 0xed0bf ; ret
0x00000000000ed463 : cmp eax, 0xfffff000 ; ja 0xed474 ; ret
0x00000000000ed4b7 : cmp eax, 0xfffff000 ; ja 0xed4c8 ; ret
0x00000000000f068b : cmp eax, 0xfffff000 ; ja 0xf069a ; ret
0x00000000000f0ba1 : cmp eax, 0xfffff000 ; ja 0xf0bb0 ; ret
0x00000000000f1378 : cmp eax, 0xfffff000 ; ja 0xf1387 ; ret
0x00000000000f1418 : cmp eax, 0xfffff000 ; ja 0xf1427 ; ret
0x00000000000f1996 : cmp eax, 0xfffff000 ; ja 0xf19a5 ; ret
0x00000000000f1a06 : cmp eax, 0xfffff000 ; ja 0xf1a15 ; ret
0x00000000000f1a83 : cmp eax, 0xfffff000 ; ja 0xf1a92 ; ret
0x00000000000f1b23 : cmp eax, 0xfffff000 ; ja 0xf1b32 ; ret
0x00000000000f2057 : cmp eax, 0xfffff000 ; ja 0xf2068 ; ret
0x00000000000f3038 : cmp eax, 0xfffff000 ; ja 0xf3049 ; ret
0x00000000000f30c4 : cmp eax, 0xfffff000 ; ja 0xf30f4 ; ret
0x00000000000f315c : cmp eax, 0xfffff000 ; ja 0xf318c ; ret
0x00000000000f31b0 : cmp eax, 0xfffff000 ; ja 0xf31c1 ; ret
0x00000000000f7952 : cmp eax, 0xfffff000 ; ja 0xf797c ; ret
0x00000000000fa3ee : cmp eax, 0xfffff000 ; ja 0xfa401 ; pop rbx ; pop rbp ; ret
0x00000000000fa651 : cmp eax, 0xfffff000 ; ja 0xfa660 ; ret
0x00000000000fb38e : cmp eax, 0xfffff000 ; ja 0xfb39d ; ret
0x00000000000fb4fe : cmp eax, 0xfffff000 ; ja 0xfb50d ; ret
0x00000000000fbac8 : cmp eax, 0xfffff000 ; ja 0xfbad7 ; ret
0x00000000000fbb6a : cmp eax, 0xfffff000 ; ja 0xfbb79 ; ret
0x00000000000fbc1a : cmp eax, 0xfffff000 ; ja 0xfbc29 ; ret
0x0000000000132e8b : cmp eax, 0xfffff001 ; jae 0x132e9a ; ret
0x0000000000132edb : cmp eax, 0xfffff001 ; jae 0x132eea ; ret
0x0000000000036fb8 : cmp eax, 0xfffff001 ; jae 0x36fc7 ; ret
0x0000000000037578 : cmp eax, 0xfffff001 ; jae 0x37587 ; ret
0x00000000000471c2 : cmp eax, 0xfffff001 ; jae 0x471d5 ; xor eax, eax ; ret
0x000000000005dc58 : cmp eax, 0xfffff001 ; jae 0x5dc67 ; ret
0x00000000000b1528 : cmp eax, 0xfffff001 ; jae 0xb1537 ; ret
0x00000000000b4378 : cmp eax, 0xfffff001 ; jae 0xb4387 ; ret
0x00000000000b43a8 : cmp eax, 0xfffff001 ; jae 0xb43b7 ; ret
0x00000000000c0a08 : cmp eax, 0xfffff001 ; jae 0xc0a17 ; ret
0x00000000000c0bfb : cmp eax, 0xfffff001 ; jae 0xc0c0a ; ret
0x00000000000c0cd8 : cmp eax, 0xfffff001 ; jae 0xc0ce7 ; ret
0x00000000000c0ec1 : cmp eax, 0xfffff001 ; jae 0xc0f00 ; ret
0x00000000000c0f21 : cmp eax, 0xfffff001 ; jae 0xc0f60 ; ret
0x00000000000c12b2 : cmp eax, 0xfffff001 ; jae 0xc12c1 ; ret
0x00000000000c1ea8 : cmp eax, 0xfffff001 ; jae 0xc1eb7 ; ret
0x00000000000c2038 : cmp eax, 0xfffff001 ; jae 0xc2047 ; ret
0x00000000000c2068 : cmp eax, 0xfffff001 ; jae 0xc2077 ; ret
0x00000000000c20c8 : cmp eax, 0xfffff001 ; jae 0xc20d7 ; ret
0x00000000000c20f8 : cmp eax, 0xfffff001 ; jae 0xc2107 ; ret
0x00000000000c2128 : cmp eax, 0xfffff001 ; jae 0xc2137 ; ret
0x00000000000c2158 : cmp eax, 0xfffff001 ; jae 0xc2167 ; ret
0x00000000000cb338 : cmp eax, 0xfffff001 ; jae 0xcb347 ; ret
0x00000000000cb368 : cmp eax, 0xfffff001 ; jae 0xcb377 ; ret
0x00000000000cb398 : cmp eax, 0xfffff001 ; jae 0xcb3a7 ; ret
0x00000000000cb3c8 : cmp eax, 0xfffff001 ; jae 0xcb3d7 ; ret
0x00000000000cb3f8 : cmp eax, 0xfffff001 ; jae 0xcb407 ; ret
0x00000000000cb428 : cmp eax, 0xfffff001 ; jae 0xcb437 ; ret
0x00000000000cb458 : cmp eax, 0xfffff001 ; jae 0xcb467 ; ret
0x00000000000cb488 : cmp eax, 0xfffff001 ; jae 0xcb497 ; ret
0x00000000000cb6a4 : cmp eax, 0xfffff001 ; jae 0xcb6e6 ; ret
0x00000000000cb704 : cmp eax, 0xfffff001 ; jae 0xcb746 ; ret
0x00000000000eb0e5 : cmp eax, 0xfffff001 ; jae 0xeb0f8 ; mov eax, edx ; ret
0x00000000000eb108 : cmp eax, 0xfffff001 ; jae 0xeb117 ; ret
0x00000000000eb398 : cmp eax, 0xfffff001 ; jae 0xeb3a7 ; ret
0x00000000000eb3c8 : cmp eax, 0xfffff001 ; jae 0xeb3d7 ; ret
0x00000000000eb4e8 : cmp eax, 0xfffff001 ; jae 0xeb4f7 ; ret
0x00000000000eb518 : cmp eax, 0xfffff001 ; jae 0xeb527 ; ret
0x00000000000eb5b8 : cmp eax, 0xfffff001 ; jae 0xeb5c7 ; ret
0x00000000000eb621 : cmp eax, 0xfffff001 ; jae 0xeb660 ; ret
0x00000000000eb811 : cmp eax, 0xfffff001 ; jae 0xeb850 ; ret
0x00000000000eb871 : cmp eax, 0xfffff001 ; jae 0xeb8b0 ; ret
0x00000000000eb8c8 : cmp eax, 0xfffff001 ; jae 0xeb8d7 ; ret
0x00000000000ebe18 : cmp eax, 0xfffff001 ; jae 0xebe27 ; ret
0x00000000000ebf61 : cmp eax, 0xfffff001 ; jae 0xebfa0 ; ret
0x00000000000ebfb8 : cmp eax, 0xfffff001 ; jae 0xebfc7 ; ret
0x00000000000ebfe8 : cmp eax, 0xfffff001 ; jae 0xebff7 ; ret
0x00000000000ec018 : cmp eax, 0xfffff001 ; jae 0xec027 ; ret
0x00000000000ec048 : cmp eax, 0xfffff001 ; jae 0xec057 ; ret
0x00000000000ec078 : cmp eax, 0xfffff001 ; jae 0xec087 ; ret
0x00000000000ec0b1 : cmp eax, 0xfffff001 ; jae 0xec0f0 ; ret
0x00000000000ec108 : cmp eax, 0xfffff001 ; jae 0xec117 ; ret
0x00000000000ec138 : cmp eax, 0xfffff001 ; jae 0xec147 ; ret
0x00000000000ec908 : cmp eax, 0xfffff001 ; jae 0xec917 ; ret
0x00000000000ec938 : cmp eax, 0xfffff001 ; jae 0xec947 ; ret
0x00000000000ec968 : cmp eax, 0xfffff001 ; jae 0xec977 ; ret
0x00000000000ecf58 : cmp eax, 0xfffff001 ; jae 0xecf67 ; ret
0x00000000000ecfb8 : cmp eax, 0xfffff001 ; jae 0xecfc7 ; ret
0x00000000000ed018 : cmp eax, 0xfffff001 ; jae 0xed027 ; ret
0x00000000000ed078 : cmp eax, 0xfffff001 ; jae 0xed087 ; ret
0x00000000000ed0d8 : cmp eax, 0xfffff001 ; jae 0xed0e7 ; ret
0x00000000000ed111 : cmp eax, 0xfffff001 ; jae 0xed150 ; ret
0x00000000000ed42b : cmp eax, 0xfffff001 ; jae 0xed43a ; ret
0x00000000000f0624 : cmp eax, 0xfffff001 ; jae 0xf0666 ; ret
0x00000000000f0d58 : cmp eax, 0xfffff001 ; jae 0xf0d67 ; ret
0x00000000000f0d88 : cmp eax, 0xfffff001 ; jae 0xf0d97 ; ret
0x00000000000f0db8 : cmp eax, 0xfffff001 ; jae 0xf0dc7 ; ret
0x00000000000f1178 : cmp eax, 0xfffff001 ; jae 0xf1187 ; ret
0x00000000000f1338 : cmp eax, 0xfffff001 ; jae 0xf1347 ; ret
0x00000000000f1ca8 : cmp eax, 0xfffff001 ; jae 0xf1cb7 ; ret
0x00000000000f1d48 : cmp eax, 0xfffff001 ; jae 0xf1d57 ; ret
0x00000000000f1d84 : cmp eax, 0xfffff001 ; jae 0xf1dc6 ; ret
0x00000000000f1ec8 : cmp eax, 0xfffff001 ; jae 0xf1ed7 ; ret
0x00000000000f1ef8 : cmp eax, 0xfffff001 ; jae 0xf1f07 ; ret
0x00000000000f1f31 : cmp eax, 0xfffff001 ; jae 0xf1f70 ; ret
0x00000000000f1f88 : cmp eax, 0xfffff001 ; jae 0xf1f97 ; ret
0x00000000000f1fc1 : cmp eax, 0xfffff001 ; jae 0xf2000 ; ret
0x00000000000f2018 : cmp eax, 0xfffff001 ; jae 0xf2027 ; ret
0x00000000000f22d8 : cmp eax, 0xfffff001 ; jae 0xf22e7 ; ret
0x00000000000f2308 : cmp eax, 0xfffff001 ; jae 0xf2317 ; ret
0x00000000000f2338 : cmp eax, 0xfffff001 ; jae 0xf2347 ; ret
0x00000000000f31e8 : cmp eax, 0xfffff001 ; jae 0xf31f7 ; ret
0x00000000000f3218 : cmp eax, 0xfffff001 ; jae 0xf3227 ; ret
0x00000000000f485a : cmp eax, 0xfffff001 ; jae 0xf4869 ; ret
0x00000000000f49cb : cmp eax, 0xfffff001 ; jae 0xf49da ; ret
0x00000000000f49f8 : cmp eax, 0xfffff001 ; jae 0xf4a07 ; ret
0x00000000000f4a28 : cmp eax, 0xfffff001 ; jae 0xf4a37 ; ret
0x00000000000f4a61 : cmp eax, 0xfffff001 ; jae 0xf4aa0 ; ret
0x00000000000f4ab8 : cmp eax, 0xfffff001 ; jae 0xf4ac7 ; ret
0x00000000000f4ae8 : cmp eax, 0xfffff001 ; jae 0xf4af7 ; ret
0x00000000000f4b1b : cmp eax, 0xfffff001 ; jae 0xf4b2a ; ret
0x00000000000f4b48 : cmp eax, 0xfffff001 ; jae 0xf4b57 ; ret
0x00000000000f4b78 : cmp eax, 0xfffff001 ; jae 0xf4b87 ; ret
0x00000000000f4ba8 : cmp eax, 0xfffff001 ; jae 0xf4bb7 ; ret
0x00000000000f4bd8 : cmp eax, 0xfffff001 ; jae 0xf4be7 ; ret
0x00000000000f815b : cmp eax, 0xfffff001 ; jae 0xf816a ; ret
0x00000000000f8188 : cmp eax, 0xfffff001 ; jae 0xf8197 ; ret
0x00000000000f81b8 : cmp eax, 0xfffff001 ; jae 0xf81c7 ; ret
0x00000000000f81eb : cmp eax, 0xfffff001 ; jae 0xf81fa ; ret
0x00000000000f821b : cmp eax, 0xfffff001 ; jae 0xf822a ; ret
0x00000000000f8248 : cmp eax, 0xfffff001 ; jae 0xf8257 ; ret
0x00000000000f827b : cmp eax, 0xfffff001 ; jae 0xf828a ; ret
0x00000000000f82a8 : cmp eax, 0xfffff001 ; jae 0xf82b7 ; ret
0x00000000000f82d8 : cmp eax, 0xfffff001 ; jae 0xf82e7 ; ret
0x00000000000f830b : cmp eax, 0xfffff001 ; jae 0xf831a ; ret
0x00000000000f8338 : cmp eax, 0xfffff001 ; jae 0xf8347 ; ret
0x00000000000f836b : cmp eax, 0xfffff001 ; jae 0xf837a ; ret
0x00000000000fa358 : cmp eax, 0xfffff001 ; jae 0xfa367 ; ret
0x00000000000fa388 : cmp eax, 0xfffff001 ; jae 0xfa397 ; ret
0x00000000000fa4b1 : cmp eax, 0xfffff001 ; jae 0xfa4f0 ; ret
0x00000000000fa518 : cmp eax, 0xfffff001 ; jae 0xfa527 ; ret
0x00000000000fa548 : cmp eax, 0xfffff001 ; jae 0xfa557 ; ret
0x00000000000fa578 : cmp eax, 0xfffff001 ; jae 0xfa587 ; ret
0x00000000000fa5a8 : cmp eax, 0xfffff001 ; jae 0xfa5b7 ; ret
0x00000000000fa86b : cmp eax, 0xfffff001 ; jae 0xfa87a ; ret
0x00000000000fa898 : cmp eax, 0xfffff001 ; jae 0xfa8a7 ; ret
0x00000000000fa8c8 : cmp eax, 0xfffff001 ; jae 0xfa8d7 ; ret
0x00000000000fa90b : cmp eax, 0xfffff001 ; jae 0xfa91a ; ret
0x00000000000fa938 : cmp eax, 0xfffff001 ; jae 0xfa947 ; ret
0x00000000000fa968 : cmp eax, 0xfffff001 ; jae 0xfa977 ; ret
0x00000000000fa998 : cmp eax, 0xfffff001 ; jae 0xfa9a7 ; ret
0x00000000000fa9c8 : cmp eax, 0xfffff001 ; jae 0xfa9d7 ; ret
0x00000000000fa9f8 : cmp eax, 0xfffff001 ; jae 0xfaa07 ; ret
0x00000000000faa28 : cmp eax, 0xfffff001 ; jae 0xfaa37 ; ret
0x00000000000faa58 : cmp eax, 0xfffff001 ; jae 0xfaa67 ; ret
0x00000000000faa88 : cmp eax, 0xfffff001 ; jae 0xfaa97 ; ret
0x00000000000faabb : cmp eax, 0xfffff001 ; jae 0xfaaca ; ret
0x00000000000faaf4 : cmp eax, 0xfffff001 ; jae 0xfab36 ; ret
0x00000000000fab48 : cmp eax, 0xfffff001 ; jae 0xfab57 ; ret
0x00000000000fab7b : cmp eax, 0xfffff001 ; jae 0xfab8a ; ret
0x00000000000faba8 : cmp eax, 0xfffff001 ; jae 0xfabb7 ; ret
0x00000000000fabd8 : cmp eax, 0xfffff001 ; jae 0xfabe7 ; ret
0x00000000000fac08 : cmp eax, 0xfffff001 ; jae 0xfac17 ; ret
0x00000000000fac38 : cmp eax, 0xfffff001 ; jae 0xfac47 ; ret
0x00000000000fac68 : cmp eax, 0xfffff001 ; jae 0xfac77 ; ret
0x00000000000fac9b : cmp eax, 0xfffff001 ; jae 0xfacaa ; ret
0x00000000000faccb : cmp eax, 0xfffff001 ; jae 0xfacda ; ret
0x00000000000facf8 : cmp eax, 0xfffff001 ; jae 0xfad07 ; ret
0x00000000000fad28 : cmp eax, 0xfffff001 ; jae 0xfad37 ; ret
0x00000000000fad58 : cmp eax, 0xfffff001 ; jae 0xfad67 ; ret
0x00000000000fad8b : cmp eax, 0xfffff001 ; jae 0xfad9a ; ret
0x00000000000fadbb : cmp eax, 0xfffff001 ; jae 0xfadca ; ret
0x00000000000fadeb : cmp eax, 0xfffff001 ; jae 0xfadfa ; ret
0x00000000000fae24 : cmp eax, 0xfffff001 ; jae 0xfae66 ; ret
0x00000000000fae78 : cmp eax, 0xfffff001 ; jae 0xfae87 ; ret
0x00000000000faeb4 : cmp eax, 0xfffff001 ; jae 0xfaef6 ; ret
0x00000000000faf08 : cmp eax, 0xfffff001 ; jae 0xfaf17 ; ret
0x00000000000faf38 : cmp eax, 0xfffff001 ; jae 0xfaf47 ; ret
0x00000000000faf74 : cmp eax, 0xfffff001 ; jae 0xfafb6 ; ret
0x00000000000fafc8 : cmp eax, 0xfffff001 ; jae 0xfafd7 ; ret
0x00000000000faffb : cmp eax, 0xfffff001 ; jae 0xfb00a ; ret
0x00000000000fb028 : cmp eax, 0xfffff001 ; jae 0xfb037 ; ret
0x00000000000fb058 : cmp eax, 0xfffff001 ; jae 0xfb067 ; ret
0x00000000000fb08b : cmp eax, 0xfffff001 ; jae 0xfb09a ; ret
0x00000000000fb0c1 : cmp eax, 0xfffff001 ; jae 0xfb100 ; ret
0x00000000000fb118 : cmp eax, 0xfffff001 ; jae 0xfb127 ; ret
0x00000000000fb14b : cmp eax, 0xfffff001 ; jae 0xfb15a ; ret
0x00000000000fb17b : cmp eax, 0xfffff001 ; jae 0xfb18a ; ret
0x00000000000fb1d1 : cmp eax, 0xfffff001 ; jae 0xfb210 ; ret
0x00000000000fb228 : cmp eax, 0xfffff001 ; jae 0xfb237 ; ret
0x00000000000fb261 : cmp eax, 0xfffff001 ; jae 0xfb2a0 ; ret
0x00000000000fb2b8 : cmp eax, 0xfffff001 ; jae 0xfb2c7 ; ret
0x00000000000fb2e8 : cmp eax, 0xfffff001 ; jae 0xfb2f7 ; ret
0x00000000000fb31b : cmp eax, 0xfffff001 ; jae 0xfb32a ; ret
0x00000000000fb348 : cmp eax, 0xfffff001 ; jae 0xfb357 ; ret
0x00000000000fb434 : cmp eax, 0xfffff001 ; jae 0xfb476 ; ret
0x00000000000fb491 : cmp eax, 0xfffff001 ; jae 0xfb4d0 ; ret
0x00000000000fb5a1 : cmp eax, 0xfffff001 ; jae 0xfb5e0 ; ret
0x00000000000fb604 : cmp eax, 0xfffff001 ; jae 0xfb646 ; ret
0x00000000000fb65b : cmp eax, 0xfffff001 ; jae 0xfb66a ; ret
0x00000000000fb688 : cmp eax, 0xfffff001 ; jae 0xfb697 ; ret
0x00000000000fb6b8 : cmp eax, 0xfffff001 ; jae 0xfb6c7 ; ret
0x00000000000fb6eb : cmp eax, 0xfffff001 ; jae 0xfb6fa ; ret
0x00000000000fbd74 : cmp eax, 0xfffff001 ; jae 0xfbdb6 ; ret
0x00000000000fbdd4 : cmp eax, 0xfffff001 ; jae 0xfbe16 ; ret
0x00000000000fbe28 : cmp eax, 0xfffff001 ; jae 0xfbe37 ; ret
0x00000000000fbe58 : cmp eax, 0xfffff001 ; jae 0xfbe67 ; ret
0x00000000000fbe88 : cmp eax, 0xfffff001 ; jae 0xfbe97 ; ret
0x00000000000fbeb8 : cmp eax, 0xfffff001 ; jae 0xfbec7 ; ret
0x00000000000fbeeb : cmp eax, 0xfffff001 ; jae 0xfbefa ; ret
0x00000000000fbf1b : cmp eax, 0xfffff001 ; jae 0xfbf2a ; ret
0x00000000000fbf48 : cmp eax, 0xfffff001 ; jae 0xfbf57 ; ret
0x00000000000fbf78 : cmp eax, 0xfffff001 ; jae 0xfbf87 ; ret
0x00000000000fbfa8 : cmp eax, 0xfffff001 ; jae 0xfbfb7 ; ret
0x00000000000fbfd8 : cmp eax, 0xfffff001 ; jae 0xfbfe7 ; ret
0x000000000010ae1f : cmp eax, 0xfffffe8c ; call rax
0x00000000000941ba : cmp eax, 1 ; ja 0x941a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d151 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d4aee : cmp eax, 3 ; je 0xd4b08 ; xor eax, eax ; pop rbx ; ret
0x00000000001081fa : cmp eax, 4 ; je 0x108205 ; ret
0x00000000000c48d4 : cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x0000000000070c3e : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000018ca45 : cmp eax, dword ptr [rdx] ; add byte ptr [rcx + 0x23], dl ; clc ; call rsp
0x00000000000a2bee : cmp eax, dword ptr [rsi + 0x10] ; jne 0xa2ce9 ; ret
0x00000000000a2c03 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xa2ce9 ; ret
0x00000000000a2c18 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xa2ce9 ; ret
0x00000000000a2c33 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xa2ce9 ; ret
0x00000000000a2c4e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xa2ce9 ; ret
0x00000000000a2c63 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xa2ce5 ; ret
0x00000000000a2c78 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xa2ce5 ; ret
0x00000000000a2c83 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2ce5 ; ret
0x00000000000a2c9e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xa2ce5 ; ret
0x00000000000a2cb3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xa2ce5 ; ret
0x00000000000a2cc8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xa2ce5 ; ret
0x00000000000a2cd3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2ce5 ; ret
0x00000000000a2bd3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xa2ce9 ; ret
0x00000000000a2ba3 : cmp eax, dword ptr [rsi + 4] ; jne 0xa2ce9 ; ret
0x00000000000a2bb8 : cmp eax, dword ptr [rsi + 8] ; jne 0xa2ce9 ; ret
0x000000000016442a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x164569 ; ret
0x0000000000164443 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x164569 ; ret
0x0000000000164553 : cmp eax, dword ptr [rsi - 4] ; jne 0x164567 ; xor eax, eax ; ret
0x0000000000164473 : cmp eax, dword ptr [rsi - 4] ; jne 0x164569 ; ret
0x0000000000164458 : cmp eax, dword ptr [rsi - 8] ; jne 0x164569 ; ret
0x00000000000a2b8d : cmp eax, dword ptr [rsi] ; jne 0xa2ce8 ; ret
0x000000000004710b : cmp eax, ebx ; jne 0x47105 ; pop rbx ; ret
0x000000000007ccd9 : cmp eax, ecx ; jae 0x7cd07 ; movzx eax, byte ptr [rax] ; ret
0x0000000000096bdc : cmp eax, ecx ; je 0x96bcd ; ret
0x000000000013d1af : cmp eax, ecx ; jle 0x13d0fd ; ret
0x0000000000003a9f : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000163f43 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000012ad61 : cmp eax, edx ; je 0x12ad78 ; add rsp, 8 ; ret
0x000000000003827d : cmp eax, edx ; jne 0x38276 ; xor eax, eax ; ret
0x000000000003835d : cmp eax, edx ; jne 0x38356 ; xor eax, eax ; ret
0x0000000000096c0f : cmp eax, esi ; jne 0x96c07 ; mov rax, rdi ; ret
0x0000000000121d55 : cmp ebp, eax ; xchg r13d, r15d ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001a8661 : cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019b6ed : cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000001a86a9 : cmp ebp, esi ; jmp rbx
0x0000000000108196 : cmp ebx, 0xa ; je 0x1081a1 ; ret
0x000000000016557c : cmp ebx, ebp ; jae 0x16558f ; call qword ptr [rbx]
0x000000000016557c : cmp ebx, ebp ; jae 0x165593 ; call qword ptr [rbx]
0x00000000000cb85c : cmp ebx, esi ; ja 0xcb7f6 ; pop rbx ; pop rbp ; ret
0x0000000000047333 : cmp ecx, 0x2f ; jmp r8
0x000000000009301f : cmp ecx, 0xd ; je 0x93039 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000038d0c : cmp ecx, 0xff ; jne 0x38d09 ; mov rax, rdx ; ret
0x00000000000f80d4 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000a64b6 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000016163b : cmp ecx, eax ; jne 0x161669 ; xor eax, eax ; ret
0x000000000016247b : cmp ecx, eax ; jne 0x1624a9 ; xor eax, eax ; ret
0x00000000001624af : cmp ecx, eax ; jne 0x1624bc ; xor eax, eax ; ret
0x0000000000117c55 : cmp ecx, eax ; sbb eax, eax ; ret
0x000000000007d75a : cmp ecx, edi ; je 0x7d596 ; ret
0x00000000000d870b : cmp ecx, edx ; call 0x42d01058
0x0000000000096bb4 : cmp ecx, edx ; je 0x96bad ; ret
0x00000000000a31d7 : cmp ecx, edx ; jne 0xa31c9 ; sub eax, r8d ; nop ; ret
0x0000000000096bb0 : cmp ecx, esi ; je 0x96bb1 ; cmp ecx, edx ; je 0x96bb1 ; ret
0x000000000007befa : cmp ecx, esi ; jne 0x7bef7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001657b8 : cmp edi, 1 ; ja 0x1657c5 ; ret
0x00000000000fda25 : cmp edi, 9 ; setbe al ; ret
0x00000000001947a4 : cmp edi, dword ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x000000000006fc95 : cmp edi, ebx ; je 0x6fca4 ; call 0xebf5f
0x000000000004f2b5 : cmp edi, ecx ; ja 0x4f29f ; mov eax, r8d ; ret
0x0000000000117d4b : cmp edi, edx ; jne 0x117d29 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f83c5 : cmp edi, edx ; jne 0xf83c0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cb890 : cmp edi, esi ; ja 0xcb885 ; ret
0x00000000001874bd : cmp edi, esp ; jmp rax
0x00000000000c1e18 : cmp edx, 0 ; mov eax, edx ; jle 0xc1e29 ; ret
0x000000000010c66f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000001088ce : cmp edx, 0xea ; cmovne eax, ecx ; ret
0x00000000000c0a50 : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x000000000006ec91 : cmp edx, 0xff ; je 0x6eca9 ; mov rax, rdx ; pop rbx ; ret
0x0000000000072b21 : cmp edx, 0xff ; je 0x72b39 ; mov rax, rdx ; pop rbx ; ret
0x00000000000fa7b0 : cmp edx, 0xff ; je 0xfa7c6 ; ret
0x00000000000c6205 : cmp edx, 1 ; sete al ; ret
0x000000000002f8fb : cmp edx, dword ptr [rdi + 4] ; jb 0x2f90e ; ret
0x0000000000047364 : cmp edx, eax ; jg 0x47325 ; ret
0x00000000001083c2 : cmp edx, eax ; jne 0x1083a5 ; ret
0x00000000000fbcf7 : cmp edx, ecx ; cmovae rax, rsi ; ret
0x000000000012e3b2 : cmp edx, ecx ; je 0x12e3c5 ; ret
0x0000000000096b98 : cmp edx, ecx ; je 0x96b95 ; ret
0x000000000008c67c : cmp edx, ecx ; jne 0x8c665 ; ret
0x00000000000c268b : cmp edx, ecx ; jne 0xc26c5 ; ret
0x0000000000107b4a : cmp edx, edi ; setae al ; ret
0x0000000000117f96 : cmp edx, esi ; jb 0x117f8d ; mov eax, 0xffffffff ; ret
0x000000000003ca89 : cmp esi, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000ba0b0 : cmp esi, 1 ; je 0xba0c7 ; xor eax, eax ; ret
0x00000000000730b8 : cmp esi, 2 ; je 0x730d0 ; mov dword ptr [rdi], edx ; ret
0x0000000000121d0a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x121d01 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018b3b9 : cmp esi, ebp ; call rsp
0x000000000019b585 : cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000176204 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f6a8 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67e
0x00000000000751ea : cmp esi, ecx ; jb 0x751e7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009171c : cmp esi, ecx ; jne 0x9170e ; xor eax, eax ; ret
0x00000000000498a2 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000011800e : cmp esi, edx ; ja 0x117ffd ; mov eax, 0xffffffff ; ret
0x00000000000f1234 : cmp esi, edx ; ja 0xf1245 ; ret
0x00000000001b12d5 : cmp esi, esi ; jmp qword ptr [rdx]
0x000000000018777d : cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x0000000000187979 : cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x00000000001877f5 : cmp esp, 0xfc8172ff ; jmp rdx
0x0000000000123c2c : cmp esp, 0xff ; jmp 0x123bf8
0x0000000000178679 : cmp esp, 0xff ; mov al, 0x84 ; cld ; call rax
0x0000000000187ef1 : cmp esp, 0xff ; nop ; test bh, ah ; call qword ptr [rax]
0x00000000000d489f : cmp esp, 0xff ; push rdi ; ret 0
0x00000000001331d5 : cmp esp, ebp ; je 0x1331ee ; mov rdi, r12 ; call 0x1f479
0x00000000001331a5 : cmp esp, ebp ; jne 0x133163 ; mov rdi, rbx ; call 0x1f419
0x00000000001a9324 : cmp esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000000e4d1d : cmp qword ptr [rcx - 8], 0 ; je 0xe4d30 ; mov edx, eax ; jmp 0xe4d1e
0x00000000001025f0 : cmp qword ptr [rdi + 0x10], 0 ; je 0x102609 ; xor eax, eax ; ret
0x0000000000072fa8 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000107ae9 : cmp qword ptr [rdi], 0 ; je 0x107aff ; ret
0x000000000010fc10 : cmp qword ptr [rip + 0x2afda8], 0 ; jne 0x10fbe5 ; jmp 0x10fbdd
0x00000000000f4c4f : cmp qword ptr [rsi], 0 ; je 0xf4c5e ; pop rbx ; ret
0x0000000000091f6a : cmp r11b, r14b ; ret
0x0000000000108195 : cmp r11d, 0xa ; je 0x1081a2 ; ret
0x00000000000ee4b4 : cmp r14b, r14b ; ret
0x000000000018b3b8 : cmp r14d, ebp ; call rsp
0x00000000000974b4 : cmp r8b, 0x3d ; jne 0x974d2 ; mov rax, rdi ; ret
0x00000000000fa71a : cmp r8d, 0xff ; je 0xfa730 ; pop rbx ; pop rbp ; ret
0x0000000000096bdb : cmp r8d, ecx ; je 0x96bce ; ret
0x00000000001088ea : cmp rax, -0x1000 ; ja 0x1088fd ; ret
0x0000000000108967 : cmp rax, -0x1000 ; ja 0x108993 ; ret
0x0000000000109fcc : cmp rax, -0x1000 ; ja 0x109fdf ; ret
0x000000000010a06c : cmp rax, -0x1000 ; ja 0x10a07f ; ret
0x0000000000036cc9 : cmp rax, -0x1000 ; ja 0x36cf3 ; ret
0x0000000000036f90 : cmp rax, -0x1000 ; ja 0x36fa3 ; ret
0x0000000000036fec : cmp rax, -0x1000 ; ja 0x36fff ; ret
0x0000000000037026 : cmp rax, -0x1000 ; ja 0x37037 ; ret
0x00000000000370ac : cmp rax, -0x1000 ; ja 0x370bf ; ret
0x000000000005dc90 : cmp rax, -0x1000 ; ja 0x5dca3 ; ret
0x00000000000be081 : cmp rax, -0x1000 ; ja 0xbe092 ; ret
0x00000000000c0ab2 : cmp rax, -0x1000 ; ja 0xc0ac3 ; ret
0x00000000000c0b4c : cmp rax, -0x1000 ; ja 0xc0b5d ; ret
0x00000000000c0c3b : cmp rax, -0x1000 ; ja 0xc0c4c ; ret
0x00000000000c1337 : cmp rax, -0x1000 ; ja 0xc134a ; ret
0x00000000000c1ee3 : cmp rax, -0x1000 ; ja 0xc1ef4 ; ret
0x00000000000c1f43 : cmp rax, -0x1000 ; ja 0xc1f54 ; ret
0x00000000000c2197 : cmp rax, -0x1000 ; ja 0xc21a8 ; ret
0x00000000000c2207 : cmp rax, -0x1000 ; ja 0xc2218 ; ret
0x00000000000eb1a5 : cmp rax, -0x1000 ; ja 0xeb1cd ; ret
0x00000000000eb1f4 : cmp rax, -0x1000 ; ja 0xeb21d ; ret
0x00000000000eb245 : cmp rax, -0x1000 ; ja 0xeb26d ; ret
0x00000000000eb29d : cmp rax, -0x1000 ; ja 0xeb2cd ; ret
0x00000000000eb301 : cmp rax, -0x1000 ; ja 0xeb32d ; ret
0x00000000000eb35a : cmp rax, -0x1000 ; ja 0xeb385 ; ret
0x00000000000eb559 : cmp rax, -0x1000 ; ja 0xeb56c ; ret
0x00000000000eb5ec : cmp rax, -0x1000 ; ja 0xeb5ff ; ret
0x00000000000eb6c0 : cmp rax, -0x1000 ; ja 0xeb6d3 ; ret
0x00000000000ebbe9 : cmp rax, -0x1000 ; ja 0xebc6b ; ret
0x00000000000ec9a2 : cmp rax, -0x1000 ; ja 0xec9b5 ; ret
0x00000000000ecf93 : cmp rax, -0x1000 ; ja 0xecfa6 ; ret
0x00000000000ecfea : cmp rax, -0x1000 ; ja 0xecffd ; ret
0x00000000000ed0ad : cmp rax, -0x1000 ; ja 0xed0c0 ; ret
0x00000000000ed462 : cmp rax, -0x1000 ; ja 0xed475 ; ret
0x00000000000ed4b6 : cmp rax, -0x1000 ; ja 0xed4c9 ; ret
0x00000000000f068a : cmp rax, -0x1000 ; ja 0xf069b ; ret
0x00000000000f0ba0 : cmp rax, -0x1000 ; ja 0xf0bb1 ; ret
0x00000000000f1377 : cmp rax, -0x1000 ; ja 0xf1388 ; ret
0x00000000000f1417 : cmp rax, -0x1000 ; ja 0xf1428 ; ret
0x00000000000f1995 : cmp rax, -0x1000 ; ja 0xf19a6 ; ret
0x00000000000f1a05 : cmp rax, -0x1000 ; ja 0xf1a16 ; ret
0x00000000000f1a82 : cmp rax, -0x1000 ; ja 0xf1a93 ; ret
0x00000000000f1b22 : cmp rax, -0x1000 ; ja 0xf1b33 ; ret
0x00000000000f2056 : cmp rax, -0x1000 ; ja 0xf2069 ; ret
0x00000000000f3037 : cmp rax, -0x1000 ; ja 0xf304a ; ret
0x00000000000f30c3 : cmp rax, -0x1000 ; ja 0xf30f5 ; ret
0x00000000000f315b : cmp rax, -0x1000 ; ja 0xf318d ; ret
0x00000000000f31af : cmp rax, -0x1000 ; ja 0xf31c2 ; ret
0x00000000000f7951 : cmp rax, -0x1000 ; ja 0xf797d ; ret
0x00000000000fa650 : cmp rax, -0x1000 ; ja 0xfa661 ; ret
0x00000000000fb38d : cmp rax, -0x1000 ; ja 0xfb39e ; ret
0x00000000000fb4fd : cmp rax, -0x1000 ; ja 0xfb50e ; ret
0x00000000000fbac7 : cmp rax, -0x1000 ; ja 0xfbad8 ; ret
0x00000000000fbb69 : cmp rax, -0x1000 ; ja 0xfbb7a ; ret
0x00000000000fbc19 : cmp rax, -0x1000 ; ja 0xfbc2a ; ret
0x0000000000132e8a : cmp rax, -0xfff ; jae 0x132e9b ; ret
0x0000000000132eda : cmp rax, -0xfff ; jae 0x132eeb ; ret
0x0000000000036fb7 : cmp rax, -0xfff ; jae 0x36fc8 ; ret
0x0000000000037577 : cmp rax, -0xfff ; jae 0x37588 ; ret
0x000000000005dc57 : cmp rax, -0xfff ; jae 0x5dc68 ; ret
0x00000000000b1527 : cmp rax, -0xfff ; jae 0xb1538 ; ret
0x00000000000b4377 : cmp rax, -0xfff ; jae 0xb4388 ; ret
0x00000000000b43a7 : cmp rax, -0xfff ; jae 0xb43b8 ; ret
0x00000000000c0a07 : cmp rax, -0xfff ; jae 0xc0a18 ; ret
0x00000000000c0bfa : cmp rax, -0xfff ; jae 0xc0c0b ; ret
0x00000000000c0cd7 : cmp rax, -0xfff ; jae 0xc0ce8 ; ret
0x00000000000c0ec0 : cmp rax, -0xfff ; jae 0xc0f01 ; ret
0x00000000000c0f20 : cmp rax, -0xfff ; jae 0xc0f61 ; ret
0x00000000000c1ea7 : cmp rax, -0xfff ; jae 0xc1eb8 ; ret
0x00000000000c2037 : cmp rax, -0xfff ; jae 0xc2048 ; ret
0x00000000000c2067 : cmp rax, -0xfff ; jae 0xc2078 ; ret
0x00000000000c20c7 : cmp rax, -0xfff ; jae 0xc20d8 ; ret
0x00000000000c20f7 : cmp rax, -0xfff ; jae 0xc2108 ; ret
0x00000000000c2127 : cmp rax, -0xfff ; jae 0xc2138 ; ret
0x00000000000c2157 : cmp rax, -0xfff ; jae 0xc2168 ; ret
0x00000000000cb337 : cmp rax, -0xfff ; jae 0xcb348 ; ret
0x00000000000cb367 : cmp rax, -0xfff ; jae 0xcb378 ; ret
0x00000000000cb397 : cmp rax, -0xfff ; jae 0xcb3a8 ; ret
0x00000000000cb3c7 : cmp rax, -0xfff ; jae 0xcb3d8 ; ret
0x00000000000cb3f7 : cmp rax, -0xfff ; jae 0xcb408 ; ret
0x00000000000cb427 : cmp rax, -0xfff ; jae 0xcb438 ; ret
0x00000000000cb457 : cmp rax, -0xfff ; jae 0xcb468 ; ret
0x00000000000cb487 : cmp rax, -0xfff ; jae 0xcb498 ; ret
0x00000000000cb6a3 : cmp rax, -0xfff ; jae 0xcb6e7 ; ret
0x00000000000cb703 : cmp rax, -0xfff ; jae 0xcb747 ; ret
0x00000000000eb107 : cmp rax, -0xfff ; jae 0xeb118 ; ret
0x00000000000eb397 : cmp rax, -0xfff ; jae 0xeb3a8 ; ret
0x00000000000eb3c7 : cmp rax, -0xfff ; jae 0xeb3d8 ; ret
0x00000000000eb4e7 : cmp rax, -0xfff ; jae 0xeb4f8 ; ret
0x00000000000eb517 : cmp rax, -0xfff ; jae 0xeb528 ; ret
0x00000000000eb5b7 : cmp rax, -0xfff ; jae 0xeb5c8 ; ret
0x00000000000eb620 : cmp rax, -0xfff ; jae 0xeb661 ; ret
0x00000000000eb810 : cmp rax, -0xfff ; jae 0xeb851 ; ret
0x00000000000eb870 : cmp rax, -0xfff ; jae 0xeb8b1 ; ret
0x00000000000eb8c7 : cmp rax, -0xfff ; jae 0xeb8d8 ; ret
0x00000000000ebe17 : cmp rax, -0xfff ; jae 0xebe28 ; ret
0x00000000000ebf60 : cmp rax, -0xfff ; jae 0xebfa1 ; ret
0x00000000000ebfb7 : cmp rax, -0xfff ; jae 0xebfc8 ; ret
0x00000000000ebfe7 : cmp rax, -0xfff ; jae 0xebff8 ; ret
0x00000000000ec017 : cmp rax, -0xfff ; jae 0xec028 ; ret
0x00000000000ec047 : cmp rax, -0xfff ; jae 0xec058 ; ret
0x00000000000ec077 : cmp rax, -0xfff ; jae 0xec088 ; ret
0x00000000000ec0b0 : cmp rax, -0xfff ; jae 0xec0f1 ; ret
0x00000000000ec107 : cmp rax, -0xfff ; jae 0xec118 ; ret
0x00000000000ec137 : cmp rax, -0xfff ; jae 0xec148 ; ret
0x00000000000ec907 : cmp rax, -0xfff ; jae 0xec918 ; ret
0x00000000000ec937 : cmp rax, -0xfff ; jae 0xec948 ; ret
0x00000000000ec967 : cmp rax, -0xfff ; jae 0xec978 ; ret
0x00000000000ecf57 : cmp rax, -0xfff ; jae 0xecf68 ; ret
0x00000000000ecfb7 : cmp rax, -0xfff ; jae 0xecfc8 ; ret
0x00000000000ed017 : cmp rax, -0xfff ; jae 0xed028 ; ret
0x00000000000ed077 : cmp rax, -0xfff ; jae 0xed088 ; ret
0x00000000000ed0d7 : cmp rax, -0xfff ; jae 0xed0e8 ; ret
0x00000000000ed110 : cmp rax, -0xfff ; jae 0xed151 ; ret
0x00000000000ed42a : cmp rax, -0xfff ; jae 0xed43b ; ret
0x00000000000f0623 : cmp rax, -0xfff ; jae 0xf0667 ; ret
0x00000000000f0d57 : cmp rax, -0xfff ; jae 0xf0d68 ; ret
0x00000000000f0d87 : cmp rax, -0xfff ; jae 0xf0d98 ; ret
0x00000000000f0db7 : cmp rax, -0xfff ; jae 0xf0dc8 ; ret
0x00000000000f1177 : cmp rax, -0xfff ; jae 0xf1188 ; ret
0x00000000000f1337 : cmp rax, -0xfff ; jae 0xf1348 ; ret
0x00000000000f1ca7 : cmp rax, -0xfff ; jae 0xf1cb8 ; ret
0x00000000000f1d47 : cmp rax, -0xfff ; jae 0xf1d58 ; ret
0x00000000000f1d83 : cmp rax, -0xfff ; jae 0xf1dc7 ; ret
0x00000000000f1ec7 : cmp rax, -0xfff ; jae 0xf1ed8 ; ret
0x00000000000f1ef7 : cmp rax, -0xfff ; jae 0xf1f08 ; ret
0x00000000000f1f30 : cmp rax, -0xfff ; jae 0xf1f71 ; ret
0x00000000000f1f87 : cmp rax, -0xfff ; jae 0xf1f98 ; ret
0x00000000000f1fc0 : cmp rax, -0xfff ; jae 0xf2001 ; ret
0x00000000000f2017 : cmp rax, -0xfff ; jae 0xf2028 ; ret
0x00000000000f22d7 : cmp rax, -0xfff ; jae 0xf22e8 ; ret
0x00000000000f2307 : cmp rax, -0xfff ; jae 0xf2318 ; ret
0x00000000000f2337 : cmp rax, -0xfff ; jae 0xf2348 ; ret
0x00000000000f31e7 : cmp rax, -0xfff ; jae 0xf31f8 ; ret
0x00000000000f3217 : cmp rax, -0xfff ; jae 0xf3228 ; ret
0x00000000000f4859 : cmp rax, -0xfff ; jae 0xf486a ; ret
0x00000000000f49ca : cmp rax, -0xfff ; jae 0xf49db ; ret
0x00000000000f49f7 : cmp rax, -0xfff ; jae 0xf4a08 ; ret
0x00000000000f4a27 : cmp rax, -0xfff ; jae 0xf4a38 ; ret
0x00000000000f4a60 : cmp rax, -0xfff ; jae 0xf4aa1 ; ret
0x00000000000f4ab7 : cmp rax, -0xfff ; jae 0xf4ac8 ; ret
0x00000000000f4ae7 : cmp rax, -0xfff ; jae 0xf4af8 ; ret
0x00000000000f4b1a : cmp rax, -0xfff ; jae 0xf4b2b ; ret
0x00000000000f4b47 : cmp rax, -0xfff ; jae 0xf4b58 ; ret
0x00000000000f4b77 : cmp rax, -0xfff ; jae 0xf4b88 ; ret
0x00000000000f4ba7 : cmp rax, -0xfff ; jae 0xf4bb8 ; ret
0x00000000000f4bd7 : cmp rax, -0xfff ; jae 0xf4be8 ; ret
0x00000000000f815a : cmp rax, -0xfff ; jae 0xf816b ; ret
0x00000000000f8187 : cmp rax, -0xfff ; jae 0xf8198 ; ret
0x00000000000f81b7 : cmp rax, -0xfff ; jae 0xf81c8 ; ret
0x00000000000f81ea : cmp rax, -0xfff ; jae 0xf81fb ; ret
0x00000000000f821a : cmp rax, -0xfff ; jae 0xf822b ; ret
0x00000000000f8247 : cmp rax, -0xfff ; jae 0xf8258 ; ret
0x00000000000f827a : cmp rax, -0xfff ; jae 0xf828b ; ret
0x00000000000f82a7 : cmp rax, -0xfff ; jae 0xf82b8 ; ret
0x00000000000f82d7 : cmp rax, -0xfff ; jae 0xf82e8 ; ret
0x00000000000f830a : cmp rax, -0xfff ; jae 0xf831b ; ret
0x00000000000f8337 : cmp rax, -0xfff ; jae 0xf8348 ; ret
0x00000000000f836a : cmp rax, -0xfff ; jae 0xf837b ; ret
0x00000000000fa357 : cmp rax, -0xfff ; jae 0xfa368 ; ret
0x00000000000fa387 : cmp rax, -0xfff ; jae 0xfa398 ; ret
0x00000000000fa4b0 : cmp rax, -0xfff ; jae 0xfa4f1 ; ret
0x00000000000fa517 : cmp rax, -0xfff ; jae 0xfa528 ; ret
0x00000000000fa547 : cmp rax, -0xfff ; jae 0xfa558 ; ret
0x00000000000fa577 : cmp rax, -0xfff ; jae 0xfa588 ; ret
0x00000000000fa5a7 : cmp rax, -0xfff ; jae 0xfa5b8 ; ret
0x00000000000fa86a : cmp rax, -0xfff ; jae 0xfa87b ; ret
0x00000000000fa897 : cmp rax, -0xfff ; jae 0xfa8a8 ; ret
0x00000000000fa8c7 : cmp rax, -0xfff ; jae 0xfa8d8 ; ret
0x00000000000fa90a : cmp rax, -0xfff ; jae 0xfa91b ; ret
0x00000000000fa937 : cmp rax, -0xfff ; jae 0xfa948 ; ret
0x00000000000fa967 : cmp rax, -0xfff ; jae 0xfa978 ; ret
0x00000000000fa997 : cmp rax, -0xfff ; jae 0xfa9a8 ; ret
0x00000000000fa9c7 : cmp rax, -0xfff ; jae 0xfa9d8 ; ret
0x00000000000fa9f7 : cmp rax, -0xfff ; jae 0xfaa08 ; ret
0x00000000000faa27 : cmp rax, -0xfff ; jae 0xfaa38 ; ret
0x00000000000faa57 : cmp rax, -0xfff ; jae 0xfaa68 ; ret
0x00000000000faa87 : cmp rax, -0xfff ; jae 0xfaa98 ; ret
0x00000000000faaba : cmp rax, -0xfff ; jae 0xfaacb ; ret
0x00000000000faaf3 : cmp rax, -0xfff ; jae 0xfab37 ; ret
0x00000000000fab47 : cmp rax, -0xfff ; jae 0xfab58 ; ret
0x00000000000fab7a : cmp rax, -0xfff ; jae 0xfab8b ; ret
0x00000000000faba7 : cmp rax, -0xfff ; jae 0xfabb8 ; ret
0x00000000000fabd7 : cmp rax, -0xfff ; jae 0xfabe8 ; ret
0x00000000000fac07 : cmp rax, -0xfff ; jae 0xfac18 ; ret
0x00000000000fac37 : cmp rax, -0xfff ; jae 0xfac48 ; ret
0x00000000000fac67 : cmp rax, -0xfff ; jae 0xfac78 ; ret
0x00000000000fac9a : cmp rax, -0xfff ; jae 0xfacab ; ret
0x00000000000facca : cmp rax, -0xfff ; jae 0xfacdb ; ret
0x00000000000facf7 : cmp rax, -0xfff ; jae 0xfad08 ; ret
0x00000000000fad27 : cmp rax, -0xfff ; jae 0xfad38 ; ret
0x00000000000fad57 : cmp rax, -0xfff ; jae 0xfad68 ; ret
0x00000000000fad8a : cmp rax, -0xfff ; jae 0xfad9b ; ret
0x00000000000fadba : cmp rax, -0xfff ; jae 0xfadcb ; ret
0x00000000000fadea : cmp rax, -0xfff ; jae 0xfadfb ; ret
0x00000000000fae23 : cmp rax, -0xfff ; jae 0xfae67 ; ret
0x00000000000fae77 : cmp rax, -0xfff ; jae 0xfae88 ; ret
0x00000000000faeb3 : cmp rax, -0xfff ; jae 0xfaef7 ; ret
0x00000000000faf07 : cmp rax, -0xfff ; jae 0xfaf18 ; ret
0x00000000000faf37 : cmp rax, -0xfff ; jae 0xfaf48 ; ret
0x00000000000faf73 : cmp rax, -0xfff ; jae 0xfafb7 ; ret
0x00000000000fafc7 : cmp rax, -0xfff ; jae 0xfafd8 ; ret
0x00000000000faffa : cmp rax, -0xfff ; jae 0xfb00b ; ret
0x00000000000fb027 : cmp rax, -0xfff ; jae 0xfb038 ; ret
0x00000000000fb057 : cmp rax, -0xfff ; jae 0xfb068 ; ret
0x00000000000fb08a : cmp rax, -0xfff ; jae 0xfb09b ; ret
0x00000000000fb0c0 : cmp rax, -0xfff ; jae 0xfb101 ; ret
0x00000000000fb117 : cmp rax, -0xfff ; jae 0xfb128 ; ret
0x00000000000fb14a : cmp rax, -0xfff ; jae 0xfb15b ; ret
0x00000000000fb17a : cmp rax, -0xfff ; jae 0xfb18b ; ret
0x00000000000fb1d0 : cmp rax, -0xfff ; jae 0xfb211 ; ret
0x00000000000fb227 : cmp rax, -0xfff ; jae 0xfb238 ; ret
0x00000000000fb260 : cmp rax, -0xfff ; jae 0xfb2a1 ; ret
0x00000000000fb2b7 : cmp rax, -0xfff ; jae 0xfb2c8 ; ret
0x00000000000fb2e7 : cmp rax, -0xfff ; jae 0xfb2f8 ; ret
0x00000000000fb31a : cmp rax, -0xfff ; jae 0xfb32b ; ret
0x00000000000fb347 : cmp rax, -0xfff ; jae 0xfb358 ; ret
0x00000000000fb433 : cmp rax, -0xfff ; jae 0xfb477 ; ret
0x00000000000fb490 : cmp rax, -0xfff ; jae 0xfb4d1 ; ret
0x00000000000fb5a0 : cmp rax, -0xfff ; jae 0xfb5e1 ; ret
0x00000000000fb603 : cmp rax, -0xfff ; jae 0xfb647 ; ret
0x00000000000fb65a : cmp rax, -0xfff ; jae 0xfb66b ; ret
0x00000000000fb687 : cmp rax, -0xfff ; jae 0xfb698 ; ret
0x00000000000fb6b7 : cmp rax, -0xfff ; jae 0xfb6c8 ; ret
0x00000000000fb6ea : cmp rax, -0xfff ; jae 0xfb6fb ; ret
0x00000000000fbd73 : cmp rax, -0xfff ; jae 0xfbdb7 ; ret
0x00000000000fbdd3 : cmp rax, -0xfff ; jae 0xfbe17 ; ret
0x00000000000fbe27 : cmp rax, -0xfff ; jae 0xfbe38 ; ret
0x00000000000fbe57 : cmp rax, -0xfff ; jae 0xfbe68 ; ret
0x00000000000fbe87 : cmp rax, -0xfff ; jae 0xfbe98 ; ret
0x00000000000fbeb7 : cmp rax, -0xfff ; jae 0xfbec8 ; ret
0x00000000000fbeea : cmp rax, -0xfff ; jae 0xfbefb ; ret
0x00000000000fbf1a : cmp rax, -0xfff ; jae 0xfbf2b ; ret
0x00000000000fbf47 : cmp rax, -0xfff ; jae 0xfbf58 ; ret
0x00000000000fbf77 : cmp rax, -0xfff ; jae 0xfbf88 ; ret
0x00000000000fbfa7 : cmp rax, -0xfff ; jae 0xfbfb8 ; ret
0x00000000000fbfd7 : cmp rax, -0xfff ; jae 0xfbfe8 ; ret
0x0000000000070c3d : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000004710a : cmp rax, rbx ; jne 0x47106 ; pop rbx ; ret
0x000000000007ccd8 : cmp rax, rcx ; jae 0x7cd08 ; movzx eax, byte ptr [rax] ; ret
0x000000000012ad60 : cmp rax, rdx ; je 0x12ad79 ; add rsp, 8 ; ret
0x000000000003827c : cmp rax, rdx ; jne 0x38277 ; xor eax, eax ; ret
0x000000000003835c : cmp rax, rdx ; jne 0x38357 ; xor eax, eax ; ret
0x000000000016557b : cmp rbx, rbp ; jae 0x165590 ; call qword ptr [rbx]
0x000000000016557b : cmp rbx, rbp ; jae 0x165594 ; call qword ptr [rbx]
0x00000000000cb85b : cmp rbx, rsi ; ja 0xcb7f7 ; pop rbx ; pop rbp ; ret
0x000000000016163a : cmp rcx, rax ; jne 0x16166a ; xor eax, eax ; ret
0x000000000016247a : cmp rcx, rax ; jne 0x1624aa ; xor eax, eax ; ret
0x0000000000117c54 : cmp rcx, rax ; sbb eax, eax ; ret
0x000000000007bef9 : cmp rcx, rsi ; jne 0x7bef8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001657b7 : cmp rdi, 1 ; ja 0x1657c6 ; ret
0x00000000000f83c4 : cmp rdi, rdx ; jne 0xf83c1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000cb88f : cmp rdi, rsi ; ja 0xcb886 ; ret
0x00000000000c0a4f : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000001083c1 : cmp rdx, rax ; jne 0x1083a6 ; ret
0x00000000000fbcf6 : cmp rdx, rcx ; cmovae rax, rsi ; ret
0x000000000012e3b1 : cmp rdx, rcx ; je 0x12e3c6 ; ret
0x000000000008c67b : cmp rdx, rcx ; jne 0x8c666 ; ret
0x000000000008c67a : cmp rdx, rcx ; jne 0x8c667 ; ret
0x00000000000c268a : cmp rdx, rcx ; jne 0xc26c6 ; ret
0x0000000000107b49 : cmp rdx, rdi ; setae al ; ret
0x00000000000751e9 : cmp rsi, rcx ; jb 0x751e8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009171b : cmp rsi, rcx ; jne 0x9170f ; xor eax, eax ; ret
0x00000000000f1233 : cmp rsi, rdx ; ja 0xf1246 ; ret
0x000000000019b53c : cmp sil, bpl ; jmp qword ptr [rdx]
0x000000000013ed27 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f027 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006f924 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, 0 ; add bl, dh ; ret
0x000000000013ff27 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188b25 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add al, 0x54 ; jmp 0x188b31
0x00000000000953f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000070b5b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x70b1e
0x000000000013fc27 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x00000000001610b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000187e41 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rax
0x0000000000187dc1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp rsp
0x0000000000196739 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; call rcx
0x00000000001984ad : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000033fd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov cl, 0x38 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001869d0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000096ce4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000c6284 : cmpsb byte ptr [rsi], byte ptr [rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013a366 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f927 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f627 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d28a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3946 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff4
0x000000000018689d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x00000000001868bd : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rcx]
0x000000000018687d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000187dc0 : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; cld ; jmp rsp
0x000000000018d895 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; adc al, 0xcb ; stc ; call rsp
0x00000000000c4665 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x6bf08406], al ; ret 0xb60f
0x000000000011597d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x000000000009a490 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000187e39 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rax
0x000000000019adec : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000187db9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rsp
0x0000000000187db5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x00000000000acbf5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov byte ptr [rip + 0x358d4800], cl ; ret
0x0000000000082879 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000081ee5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x33
0x00000000000038a2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x000000000018d769 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rsp
0x0000000000186985 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x00000000001868c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rcx + 0x21fffda7]
0x00000000001868c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp qword ptr [rcx]
0x00000000001aaf61 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rsi]
0x000000000019752c : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x00000000000038a1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003c983 : cqo ; idiv rsi ; ret
0x0000000000038848 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000127dcf : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001f50e : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000004869b : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000ebc2b : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000022f59 : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a7e7d : cwde ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e65 : cwde ; add dword ptr [rax], eax ; clc ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a7edd : cwde ; add dword ptr [rax], eax ; jo 0x1a7f13 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ef5 : cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ec5 : cwde ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a7e95 : cwde ; add dword ptr [rax], eax ; sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ead : cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000054c47 : cwde ; add rax, rdx ; jmp rax
0x00000000000bda07 : cwde ; call r14
0x00000000000233a5 : cwde ; call rcx
0x0000000000194ad8 : cwde ; cmc ; in al, dx ; call qword ptr [rax]
0x00000000001a85e8 : cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001b11f8 : cwde ; fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x0000000000179829 : cwde ; hlt ; call qword ptr [rdx]
0x0000000000179bb5 : cwde ; hlt ; dec dword ptr [rax] ; cdq ; hlt ; jmp qword ptr [rsi]
0x0000000000179991 : cwde ; hlt ; jmp qword ptr [rdi]
0x00000000001797d1 : cwde ; hlt ; jmp qword ptr [rsi]
0x0000000000179be9 : cwde ; hlt ; jmp rsp
0x00000000001a2198 : cwde ; int1 ; int1 ; jmp qword ptr [rdx]
0x000000000011be33 : cwde ; jne 0x11be69 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000019574c : cwde ; jno 0x19573f ; jmp qword ptr [rdx]
0x00000000000782e4 : cwde ; mov esi, r8d ; call 0x74556
0x00000000000f05fc : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f7d99 : cwde ; mov rdx, rax ; jmp 0xf7dc7
0x00000000000f7d98 : cwde ; mov rdx, rax ; jmp 0xf7dc8
0x00000000000f7e6a : cwde ; mov rdx, rax ; jmp 0xf7e99
0x00000000000f7e69 : cwde ; mov rdx, rax ; jmp 0xf7e9a
0x00000000001ac2fe : cwde ; push 0xd1cfff5 ; or ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x0000000000003aa5 : cwde ; ret
0x000000000001afd8 : cwde ; ret 0x3b
0x00000000001aaa28 : cwde ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000019d618 : cwde ; sbb ch, bh ; call qword ptr [rax]
0x00000000001a5eb8 : cwde ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x000000000011825e : cwde ; shr rax, 4 ; ret
0x0000000000085b25 : cwde ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a7ca8 : cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x000000000005f97c : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000009b9d9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000999c1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009b9da : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000999c2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000085e85 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x00000000000b0e76 : dec byte ptr [rax + 0xf] ; ret 0x3949
0x000000000006d382 : dec byte ptr [rax + 0xf] ; ret 0x894c
0x000000000007fd4d : dec byte ptr [rax - 0x73] ; ret
0x000000000008568e : dec byte ptr [rax - 0x77] ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000085207 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000497c7 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a3 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x0000000000109f64 : dec byte ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000041add : dec byte ptr [rax - 0x77] ; ret
0x0000000000039aaf : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000c3b20 : dec byte ptr [rax - 0x7d] ; ret
0x0000000000056e8a : dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000e283e : dec byte ptr [rcx + rcx*4 - 9] ; call 0xdeae6
0x00000000000c6b23 : dec byte ptr [rcx - 0x73] ; pop rsi ; add al, 0xe8 ; ret
0x00000000000f3da0 : dec byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000004a66e : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000009551b : dec dword ptr [r13 - 0x77] ; ret
0x0000000000049c1e : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000009694f : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00000000001796c3 : dec dword ptr [rax + 0x16] ; hlt ; jmp qword ptr [rdx]
0x00000000000437b3 : dec dword ptr [rax + 0x21] ; ret 0x948
0x00000000000941a9 : dec dword ptr [rax + 0x29] ; ret
0x000000000009bb5a : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000099b02 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000389a1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000a9a09 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000c4547 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000027fe3 : dec dword ptr [rax + 0x39] ; ret
0x0000000000078995 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000b2a0f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000112da7 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000ddcf7 : dec dword ptr [rax + 0x63] ; ret
0x000000000003fabe : dec dword ptr [rax + 0x63] ; ret 0x2ce9
0x00000000000e4a4a : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000428e0 : dec dword ptr [rax + 0x63] ; ret 0xeae9
0x000000000008aa99 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000008cb94 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003ca8b : dec dword ptr [rax + 0xf] ; ret
0x00000000000b0c86 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x00000000000c0a52 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000008b9f2 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000edfce : dec dword ptr [rax + 0xf] ; ret 0x894c
0x0000000000078f5a : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000002f8a9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005fc48 : dec dword ptr [rax + 0xf] ; ret 0xbd83
0x00000000000c259e : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000059d9c : dec dword ptr [rax + 1] ; ret
0x000000000018a103 : dec dword ptr [rax + rdi - 0x2fc9ffff] ; out dx, eax ; call rsp
0x00000000001899c3 : dec dword ptr [rax + rdx + 0x2590001] ; out dx, eax ; call rsp
0x0000000000189103 : dec dword ptr [rax + rdx*8 + 0x62a00000] ; out dx, al ; call rsp
0x000000000012afd9 : dec dword ptr [rax - 0x2d] ; ret 0x2148
0x0000000000037883 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000005a7a7 : dec dword ptr [rax - 0x39] ; ret
0x00000000000e4bd5 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f05fa : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f2724 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a39af : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000df37b : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x000000000004bfec : dec dword ptr [rax - 0x75] ; add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x000000000012eb15 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000834a3 : dec dword ptr [rax - 0x75] ; je 0x834d5 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000f51ed : dec dword ptr [rax - 0x75] ; jge 0xf51f7 ; call rbx
0x00000000000f51ec : dec dword ptr [rax - 0x75] ; jge 0xf51f8 ; call rbx
0x00000000000f54a0 : dec dword ptr [rax - 0x75] ; jge 0xf54aa ; call rbx
0x00000000000f549f : dec dword ptr [rax - 0x75] ; jge 0xf54ab ; call rbx
0x00000000000f6b97 : dec dword ptr [rax - 0x75] ; jge 0xf6ba2 ; call r12
0x000000000002339d : dec dword ptr [rax - 0x75] ; js 0x233c3 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000cc74d : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff58 ; call rbx
0x00000000000ccb25 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; call rbx
0x000000000007dff1 : dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000008c838 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f12e6 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000860c4 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000012e57c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000ba3f0 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000021363 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 1] ; ret
0x00000000000b6e54 : dec dword ptr [rax - 0x77] ; jmp 0x48cdf7aa
0x00000000000e3a6e : dec dword ptr [rax - 0x77] ; jmp 0x4cd0c3c4
0x00000000000cd410 : dec dword ptr [rax - 0x77] ; or r9b, r13b ; ret 0xfff8
0x0000000000020268 : dec dword ptr [rax - 0x77] ; ret
0x00000000001088bf : dec dword ptr [rax - 0x77] ; ret 0x1376
0x00000000000c42ef : dec dword ptr [rax - 0x77] ; ret 0x19eb
0x000000000004c80b : dec dword ptr [rax - 0x77] ; ret 0x1beb
0x00000000000c5117 : dec dword ptr [rax - 0x77] ; ret 0x1e73
0x00000000000c5166 : dec dword ptr [rax - 0x77] ; ret 0x1f73
0x0000000000105ca6 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x00000000000f1221 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x00000000000e8be6 : dec dword ptr [rax - 0x77] ; ret 0x2e9
0x000000000004c6a7 : dec dword ptr [rax - 0x77] ; ret 0x31eb
0x0000000000072aec : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000008284d : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000e832e : dec dword ptr [rax - 0x77] ; ret 0x3ee9
0x00000000000c5e73 : dec dword ptr [rax - 0x77] ; ret 0x4164
0x00000000000e7e08 : dec dword ptr [rax - 0x77] ; ret 0x44c6
0x00000000000ee02d : dec dword ptr [rax - 0x77] ; ret 0x4574
0x00000000000e6fde : dec dword ptr [rax - 0x77] ; ret 0x4c6
0x00000000000fa7aa : dec dword ptr [rax - 0x77] ; ret 0x5077
0x00000000000e7045 : dec dword ptr [rax - 0x77] ; ret 0x52e9
0x00000000000c0a41 : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000c2fe6 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000f0a9e : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000080be5 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000131bca : dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000050ba0 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000036e4f : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000722da : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004a4dc : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000105618 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000004ddf1 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000c50b2 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000e8f2a : dec dword ptr [rax - 0x77] ; ret 0x8de9
0x000000000013284c : dec dword ptr [rax - 0x77] ; ret 0x9274
0x000000000005d873 : dec dword ptr [rax - 0x77] ; ret 0x98e9
0x000000000005d86b : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000067c63 : dec dword ptr [rax - 0x77] ; ret 0xa4e8
0x00000000000513f2 : dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x00000000000b3fbf : dec dword ptr [rax - 0x77] ; ret 0xb8e9
0x00000000000feccf : dec dword ptr [rax - 0x77] ; ret 0xb9
0x0000000000127585 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000000848e1 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000f1143 : dec dword ptr [rax - 0x77] ; ret 0xd77
0x0000000000093046 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000006ee70 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000509ce : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x0000000000121d5a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000050aec : dec dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x000000000003f8fd : dec dword ptr [rax - 0x77] ; xor cl, ch ; ret 0xfff0
0x0000000000095b13 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x0000000000095a1a : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000116ccb : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; pop rdx ; ret
0x000000000011f453 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; ret 0x2a42
0x00000000000e0e07 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000de0d6 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000213b1 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000848c1 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x848d8 ; pop rbx ; ret
0x0000000000189303 : dec dword ptr [rax - 0x7c640000] ; out dx, al ; call rsp
0x00000000001322f1 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000132848 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x9274
0x0000000000022f55 : dec dword ptr [rax - 0x7d] ; cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002f1f1 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000026ac9 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000004c838 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e811c : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000000001287ea : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000038f41 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000049c1f : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c71ff : dec dword ptr [rax - 0x7d] ; ret 0x8804
0x00000000000d43c6 : dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000067758 : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000d75a1 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000006cc1d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x000000000001fc20 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000057e8b : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002d57b : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000072578 : dec dword ptr [rax - 0x7f] ; ret
0x000000000014c4fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000179bb7 : dec dword ptr [rax] ; cdq ; hlt ; jmp qword ptr [rsi]
0x0000000000179493 : dec dword ptr [rax] ; hlt ; ljmp ptr [rcx] ; push rbx ; call rcx
0x000000000017a337 : dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x00000000000c7848 : dec dword ptr [rbp + 0x63] ; ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc7875
0x0000000000066734 : dec dword ptr [rbp + 0xf] ; ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x0000000000063193 : dec dword ptr [rbp + 1] ; loop 0x63187 ; scasb al, byte ptr [rdi] ; ret
0x0000000000188c43 : dec dword ptr [rbp + rbp*4 - 0x18820000] ; jmp 0x188c53
0x000000000018cefb : dec dword ptr [rbp + rbx*2 + 0x7d220002] ; clc ; call rsp
0x000000000018e0e3 : dec dword ptr [rbp + rbx*8 - 0x418ffffe] ; cli ; call rsp
0x000000000018cd13 : dec dword ptr [rbp + rcx*2 + 0x542d0002] ; clc ; call rsp
0x000000000006196a : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x000000000018d243 : dec dword ptr [rbp + rsi*2 - 0xad2fffe] ; clc ; call rsp
0x000000000018dadb : dec dword ptr [rbp + rsi*4 + 0x214b0002] ; cli ; call rsp
0x00000000000a7733 : dec dword ptr [rbp - 0x77] ; fmul qword ptr [rcx - 0x77] ; ret 0x24eb
0x000000000009551c : dec dword ptr [rbp - 0x77] ; ret
0x00000000000ba516 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000000ef274 : dec dword ptr [rbp - 0x7bf0fea8] ; ret 1
0x00000000000d8a38 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x00000000000efc2e : dec dword ptr [rbx + 0x19e83c7d] ; ret
0x0000000000105af1 : dec dword ptr [rbx + 0x2b88943d] ; add al, ch ; ret
0x00000000000d957d : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000136315 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x00000000000bd24e : dec dword ptr [rbx + 4] ; jne 0xbd274 ; pop rbx ; ret
0x00000000000efd9e : dec dword ptr [rbx + rcx*4 + 0x2d] ; ret 0x2ce0
0x000000000018ca43 : dec dword ptr [rbx + rdi + 0x23510002] ; clc ; call rsp
0x000000000018d20b : dec dword ptr [rbx + rsi*2 - 0xc23fffe] ; clc ; call rsp
0x00000000000cae1f : dec dword ptr [rbx - 0x76be77bb] ; ret 0xdb84
0x00000000000b3865 : dec dword ptr [rcx + 0x29] ; ret
0x000000000004b8c1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000188a43 : dec dword ptr [rcx + 0x4c630000] ; jmp 0x188a53
0x00000000000839ae : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000096722 : dec dword ptr [rcx + 1] ; ret
0x000000000001ff60 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [r14]
0x000000000007d729 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x0000000000050873 : dec dword ptr [rcx - 0x39] ; ret
0x000000000012f844 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000f5025 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f54ae : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001056e7 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000f50b8 : dec dword ptr [rcx - 0x75] ; jge 0xf50c2 ; call rbx
0x00000000000f50b7 : dec dword ptr [rcx - 0x75] ; jge 0xf50c3 ; call rbx
0x00000000000f51df : dec dword ptr [rcx - 0x75] ; jge 0xf51e9 ; call rbx
0x00000000000f51de : dec dword ptr [rcx - 0x75] ; jge 0xf51ea ; call rbx
0x00000000000f5322 : dec dword ptr [rcx - 0x75] ; jge 0xf532c ; call rbx
0x00000000000f5321 : dec dword ptr [rcx - 0x75] ; jge 0xf532d ; call rbx
0x00000000000f5492 : dec dword ptr [rcx - 0x75] ; jge 0xf549c ; call rbx
0x00000000000f5491 : dec dword ptr [rcx - 0x75] ; jge 0xf549d ; call rbx
0x00000000001028a6 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000d0033 : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001337f4 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000096950 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000023257 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x00000000000960e8 : dec dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000000ae981 : dec dword ptr [rcx - 0x77] ; ret 0x5ee9
0x000000000004e284 : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ba93 : dec dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000056730 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000060402 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000005744e : dec dword ptr [rcx - 0x77] ; ret 0xfae9
0x000000000007dfa0 : dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x0000000000068fe1 : dec dword ptr [rcx - 0x7cb769fc] ; ret 0x4801
0x0000000000027977 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000c816f : dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000a654a : dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000097b08 : dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000c929e : dec dword ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000fa5e5 : dec dword ptr [rcx] ; clc ; ret
0x00000000001053bb : dec dword ptr [rcx] ; ret
0x00000000000fda26 : dec dword ptr [rcx] ; setbe al ; ret
0x000000000017a5f3 : dec dword ptr [rcx] ; sub dh, dh ; jmp rsp
0x0000000000179987 : dec dword ptr [rcx] ; wait ; hlt ; call qword ptr [rbx]
0x000000000018a003 : dec dword ptr [rdi + rbp - 0x3374ffff] ; out dx, eax ; call rsp
0x00000000001890e3 : dec dword ptr [rdi + rcx*8 + 0x60b00000] ; out dx, al ; call rsp
0x00000000001798c7 : dec dword ptr [rdi] ; cdq ; hlt ; lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x0000000000179dbb : dec dword ptr [rdi] ; loop 0x179dbb ; dec dword ptr [rdi] ; loop 0x179dbf ; jmp rsp
0x0000000000179dbf : dec dword ptr [rdi] ; loop 0x179dbb ; jmp rsp
0x000000000002fef6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2fe87 ; loopne 0x2ff07 ; ret
0x00000000000fe1e5 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xfe176 ; loopne 0xfe1f6 ; ret
0x0000000000047eeb : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000963f4 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x0000000000096609 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x00000000000963e1 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x000000000006ce42 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x00000000000e321c : dec dword ptr [rdi] ; ret 0x148d
0x00000000000257eb : dec dword ptr [rdi] ; ret 0x41c3
0x000000000007d146 : dec dword ptr [rdi] ; ret 0x6348
0x00000000000478e7 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000108a07 : dec dword ptr [rdi] ; ret 0x8348
0x0000000000114551 : dec dword ptr [rdi] ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000113d64 : dec dword ptr [rdi] ; test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002104c : dec dword ptr [rdi] ; test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000006dd10 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x00000000000fb84e : dec dword ptr [rdi] ; test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000588b0 : dec dword ptr [rdi] ; test dword ptr [rbx], ebp ; ret
0x00000000000635a1 : dec dword ptr [rdi] ; test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x0000000000163dd0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005988e : dec dword ptr [rdi] ; xchg dword ptr [rcx - 0x77000000], edi ; ret 0x348
0x0000000000058f50 : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000000590c9 : dec dword ptr [rdi] ; xchg dword ptr [rsi - 0x77000000], esp ; ret 0x348
0x00000000000cb93c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x0000000000032d8a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x0000000000048fb7 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000032a2a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000000eeb80 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x00000000000c3fd3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x0000000000071a2c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000007fc09 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xee9
0x000000000004d6ee : dec dword ptr [rdi] ; xchg eax, esp ; shr eax, -0x67 ; ret 0xffff
0x0000000000189d03 : dec dword ptr [rdx + rbx + 0x4b0f0001] ; out dx, eax ; call rsp
0x00000000000504ef : dec dword ptr [rdx - 0x73] ; push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x000000000005dda5 : dec dword ptr [rdx] ; jne 0x5ddb0 ; ret
0x00000000000705d0 : dec dword ptr [rdx] ; jne 0x7063f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007127b : dec dword ptr [rdx] ; jne 0x712c2 ; ret
0x0000000000071375 : dec dword ptr [rdx] ; jne 0x713c2 ; mov eax, esi ; ret
0x0000000000071475 : dec dword ptr [rdx] ; jne 0x714c2 ; mov eax, esi ; ret
0x0000000000072140 : dec dword ptr [rdx] ; jne 0x721a9 ; pop rbx ; ret
0x0000000000165ff6 : dec dword ptr [rip + 0x25ab24] ; jne 0x166025 ; ret
0x0000000000188fdb : dec dword ptr [rsi + rax*8 + 0x637a0000] ; in eax, dx ; call rsp
0x000000000018adcb : dec dword ptr [rsi + rdx*4 + 0x75580001] ; call rsp
0x0000000000070b47 : dec dword ptr [rsi] ; jne 0x70bc7 ; mov eax, edx ; pop rbx ; ret
0x00000000000715b5 : dec dword ptr [rsi] ; jne 0x71632 ; mov eax, edx ; pop rbx ; ret
0x0000000000071b9e : dec dword ptr [rsi] ; jne 0x71c17 ; mov eax, edx ; pop rbx ; ret
0x0000000000071d00 : dec dword ptr [rsi] ; jne 0x71d83 ; mov eax, edx ; pop rbx ; ret
0x0000000000071ff5 : dec dword ptr [rsi] ; jne 0x72072 ; mov eax, edx ; pop rbx ; ret
0x000000000007387a : dec dword ptr [rsi] ; jne 0x73901 ; mov eax, edx ; pop rbx ; ret
0x0000000000077707 : dec dword ptr [rsi] ; jne 0x77780 ; mov eax, edx ; pop rbx ; ret
0x0000000000077899 : dec dword ptr [rsi] ; jne 0x7791b ; mov eax, edx ; pop rbx ; ret
0x0000000000078130 : dec dword ptr [rsi] ; jne 0x781ac ; mov eax, edx ; pop rbx ; ret
0x00000000000782d2 : dec dword ptr [rsi] ; jne 0x78356 ; mov eax, edx ; pop rbx ; ret
0x0000000000078762 : dec dword ptr [rsi] ; jne 0x787b8 ; mov eax, edx ; pop rbx ; ret
0x0000000000179783 : dec eax ; xchg eax, edx ; hlt ; jmp qword ptr [rax]
0x0000000000179513 : dec ebp ; clc ; jmp qword ptr [rip - 0x1e000bfe]
0x0000000000039b4d : dec ecx ; ret
0x000000000018772b : dec edx ; test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x000000000018c07b : dec esp ; add dword ptr [rdx], eax ; add byte ptr [rax + rsi - 9], dh ; jmp rsp
0x00000000001882f3 : dec esp ; jl 0x1882ff ; add byte ptr [rbp + rdi*2 - 0x16], ah ; jmp rsp
0x000000000018b13b : dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; je 0x18b17e ; hlt ; jmp rsp
0x000000000018dbb3 : dec esp ; mov ebp, 0x33c40002 ; cli ; jmp rsp
0x000000000018dc13 : dec esp ; mov edi, 0x3ad40002 ; cli ; jmp rsp
0x0000000000188aeb : dec esp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; jmp 0x188afb
0x0000000000188723 : dec esp ; nop ; add byte ptr [rax], al ; imul edx ; jmp rsp
0x0000000000189963 : dec esp ; or eax, 0xfc940001 ; out dx, al ; jmp rsp
0x000000000018cd53 : dec esp ; push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000018b61b : dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x000000000018c7e3 : dec esp ; sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x000000000009bb59 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000099b01 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000097b07 : dec qword ptr [r9 - 0x7d] ; ret 0x8401
0x00000000000279c0 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000027976 : dec qword ptr [rcx - 0x7d] ; ret
0x00000000001b66b1 : div bh ; call rdx
0x0000000000179561 : div bl ; jmp rsp
0x000000000017955d : div bl ; ljmp ptr [rsi] ; div bl ; jmp rsp
0x0000000000093e4f : div byte ptr [rbp + 0xa] ; jmp 0x93e1a
0x000000000012eb5e : div byte ptr [rbp + 0xf] ; call 0x12adb5
0x0000000000088c82 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000002ca91 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x0000000000096cc1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000001ac481 : div ch ; call qword ptr [rcx]
0x0000000000105aa4 : div dword ptr [rcx] ; shr al, 0x24 ; ret
0x0000000000105b6a : div dword ptr [rcx] ; shr al, 0x5e ; ret 0xffff
0x00000000000cb891 : div dword ptr [rdi - 0x14] ; ret
0x000000000006ee45 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073970 : div ebp ; pop rbp ; pop r12 ; ret
0x00000000001a46c9 : div ebx ; jmp qword ptr [rax]
0x00000000000739ac : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f2cd : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000a1c97 : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006ee44 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007396f : div rbp ; pop rbp ; pop r12 ; ret
0x00000000000739ab : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f6b0 : enter -0x1401, -0x3a ; ret
0x000000000019335e : enter -0x14b8, -1 ; sbb al, 0xd ; push rbp ; jmp 0x193370
0x00000000000c61c1 : enter -0x14fe, -0x6a ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096bdd : enter -0x178c, -0xd ; ret
0x0000000000098451 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010a9ab : enter -0x38ff, -0x77 ; ret 0x850f
0x0000000000049828 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x0000000000125e41 : enter -0x3eb8, -0x18 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000163f44 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000009b9d6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000999be : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009bb56 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000099afe : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001791a9 : enter -0xd, -0x5f ; sal ebx, 1 ; jmp rax
0x000000000006357c : enter -1, -0x17 ; xchg eax, ebx ; ret 0xffff
0x00000000000f5104 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000123c07 : enter 0, 0 ; call rax
0x0000000000123bc9 : enter 0, 0 ; jmp rcx
0x00000000000f83f3 : enter 0, 0 ; ret
0x000000000001b1c8 : enter 0x1863, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c27ff : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x000000000007ccda : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000036594 : enter 0x280f, -0x3f ; ret
0x000000000012817e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000121354 : enter 0x29, 0x48 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00000000000a4b1a : enter 0x31c3, -0x40 ; nop ; ret
0x00000000000884cd : enter 0x31c3, -0x40 ; ret
0x00000000001278d7 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000127834 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000127904 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fc1f : enter 0x48ff, -0x7d ; ret 0xeb04
0x000000000010c2e6 : enter 0x577, -0x17 ; ret 0xf97c
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000008529b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003066a : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f09b7 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000001769bc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000008aad4 : enter 0xb24, 0 ; ret
0x0000000000037463 : enter 0xf44, 0x45 ; ret 0x8d48
0x0000000000161166 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000086ef1 : enter 0xf66, -0x15 ; ret
0x000000000013cf04 : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000018b4ad : enter 1, -0x4c ; ret 0xfff5
0x000000000018b4bd : enter 1, -0x5c ; ret
0x000000000018b4b5 : enter 1, 0x24 ; ret
0x000000000018b4a5 : enter 1, 0x24 ; ret 0xfff5
0x000000000009f234 : enter 5, 0 ; ret
0x000000000019ffed : f2xm1 ; jmp qword ptr [rdx]
0x000000000005df17 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001095ae : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b783 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f7210 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000047656 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010ae3c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c7d1e : fadd dword ptr [rbp - 0x77] ; ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000131339 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x000000000004d981 : fadd dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000007a52b : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000000a4f14 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000b7a17 : fadd dword ptr [rcx - 0x77] ; ret
0x00000000001abedd : fadd dword ptr [rcx] ; add byte ptr [rax - 0x13], dl ; cmc ; call qword ptr [rax]
0x00000000001abe95 : fadd dword ptr [rcx] ; add byte ptr [rax], bh ; in eax, dx ; cmc ; call qword ptr [rdi]
0x000000000019282c : fadd qword ptr [rcx] ; add byte ptr [rax], dl ; mov dh, 0xea ; call qword ptr [rdx]
0x0000000000188f3c : fadd st(2), st(0) ; add byte ptr [rax], al ; pop rsp ; in eax, dx ; push rsp ; ret 0
0x000000000018b3d4 : fadd st(2), st(0) ; add dword ptr [rax], eax ; xchg eax, esp ; imul esi, ebp, -1 ; pop rsp ; ret
0x0000000000164568 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001624be : fadd st(3) ; ret
0x00000000001aab2c : fadd st(4), st(0) ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000000f8000 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000efcea : fbld dword ptr [rbp + rax*2 - 0x75] ; call 0xebf57
0x0000000000160cb1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004885d : fbstp dword ptr [rdi + rsi] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b7a2d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000175ff8 : fcmovb st(0), st(3) ; ret
0x00000000001791a8 : fcmove st(0), st(0) ; jmp qword ptr [rcx - 0x1f000c2f]
0x00000000001aa968 : fcom st(2) ; cmc ; jmp qword ptr [rsi]
0x00000000001791ed : fcomi st(3) ; call qword ptr [rdx]
0x00000000001b5db9 : fcomi st(7) ; jmp qword ptr [rcx]
0x0000000000085b24 : fcomp dword ptr [rax - 0x76b70007] ; ret
0x000000000019ed98 : fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x000000000007b755 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cbf7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000001f665 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000034010 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000085f3a : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000082bc4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000001ae80 : fcomp dword ptr [rdi + 0x18] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x3b
0x0000000000176d79 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000001a802c : fcomp qword ptr [rcx + 0x2cf00001] ; cmc ; jmp qword ptr [rcx]
0x0000000000174fe0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000019d5b8 : fcomp st(0) ; stc ; call qword ptr [rax]
0x00000000001a6cb8 : fcomp st(2) ; hlt ; call qword ptr [rdx]
0x00000000001a3349 : fcompi st(2) ; call qword ptr [rdx]
0x00000000000a1d70 : fcompi st(3) ; ret
0x00000000001a9135 : fcompi st(4) ; jmp qword ptr [rdx]
0x00000000001af30d : fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001b60c9 : fcompi st(7) ; call rdi
0x000000000004710c : fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000fa080 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xfa095
0x00000000001a83a8 : fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x0000000000179245 : fdiv st(3) ; call qword ptr [rdx]
0x00000000000cb924 : fdiv st(3) ; ret
0x0000000000186bb5 : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x0000000000186bd5 : fdiv st(3), st(0) ; jmp rax
0x00000000000585d5 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000cac1f : fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000186b99 : fdivp st(3) ; inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x0000000000186bb9 : fdivp st(3) ; inc dword ptr [rax] ; loopne 0x186bc0 ; jmp rax
0x00000000000d88c7 : fdivr dword ptr [rcx] ; ret 0xc189
0x00000000000dad27 : fdivr dword ptr [rcx] ; ret 0xc789
0x000000000019b6ec : fdivr qword ptr [rbx] ; out dx, al ; jmp qword ptr [rdx]
0x000000000019d5b9 : fdivr st(1) ; call qword ptr [rax]
0x00000000001995d8 : fdivr st(1) ; in eax, dx ; call qword ptr [rax]
0x000000000018d210 : fdivr st(3), st(0) ; clc ; call rsp
0x00000000000c6138 : fdivr st(3), st(0) ; ret
0x0000000000174335 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a6d39 : fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a8dad : fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x000000000018e5c1 : fdivr st(5) ; jmp rsp
0x00000000001b1161 : fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001b11f9 : fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x00000000000d8d8a : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000067a11 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000015e83d : fdivr st(7) ; ret
0x000000000009c88e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a90ed : fdivrp st(4) ; jmp qword ptr [rdx]
0x00000000001ab151 : fdivrp st(5) ; call qword ptr [rax]
0x000000000019c06d : fiadd dword ptr [rax] ; add byte ptr [rax + 0x62], al ; out dx, al ; jmp qword ptr [rsi]
0x000000000010ff6f : fiadd dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000fa688 : fiadd dword ptr [rax] ; add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x00000000000a52a0 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000003db62 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000000ebd37 : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0xebd03
0x00000000000ebc27 : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x000000000012343e : fiadd dword ptr [rbx - 0x7bf0fc1e] ; ret 1
0x0000000000108a01 : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000085f34 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000001f572 : fiadd dword ptr [rdx + rdi] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000133cf9 : fiadd word ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018b8f5 : fiadd word ptr [rcx] ; add ah, dl ; mov esi, dr0 ; call rsp
0x000000000018ebcc : ficomp dword ptr [rax - 0x17] ; jmp qword ptr [rdx]
0x000000000013701d : ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000f5819 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000176bc6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000136035 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e36b5 : fidivr dword ptr [rcx] ; ret 0x3173
0x00000000000d891d : fidivr dword ptr [rcx] ; ret 0xc189
0x0000000000198c26 : fidivr dword ptr [rdx + 0xd1cffed] ; test al, 0xb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000048ce8 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x000000000019c18d : fild dword ptr [rax] ; add byte ptr [rax + 0x6a], al ; out dx, al ; call qword ptr [rdi]
0x000000000019c1ed : fild dword ptr [rax] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000000ba1f7 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000cda6c : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000111f77 : fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000f3625 : fild qword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000798a6 : fild word ptr [rbp + 0x4f0f48c9] ; ret 0x8948
0x00000000000ad6ca : fild word ptr [rcx + 0x29] ; ret
0x00000000000f07c6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000004f2b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000018e0fd : fild word ptr [rdx] ; add byte ptr [rdi + rdi*4], dl ; cli ; jmp rsp
0x000000000002610b : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000065e5f : fimul dword ptr [rax + 0x39] ; ret 0x830f
0x000000000003ff85 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000013cff5 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x00000000001385e6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012a1b0 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x0000000000115a8d : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000002079f : fimul dword ptr [rax - 1] ; ret 0x4eb
0x00000000000a6741 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008c862 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00000000000f14f5 : fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000c4ac5 : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000860c7 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000086283 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x00000000000e283b : fimul dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call 0xdeae9
0x000000000015d5e2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39be501
0x000000000015e662 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39bf581
0x000000000003677f : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000094790 : fimul dword ptr [rdi] ; test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000e3c33 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x000000000012e57f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000041b70 : fimul word ptr [rax - 0x77] ; ret
0x0000000000022d05 : fimul word ptr [rax - 0x77] ; ret 0x8348
0x000000000002ac9f : fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000051308 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000082a91 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00000000000384ee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x38548
0x0000000000039c7e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x39cd8
0x00000000000f6caf : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000086199 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x000000000013315c : fimul word ptr [rcx + rcx*4 - 0x19] ; call 0x1f406
0x000000000012b48e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000002e29b : fimul word ptr [rdi + 0x63] ; xor al, 0xb2 ; add r14, r10 ; jmp r14
0x00000000000c6247 : fistp qword ptr [rax + 1] ; ret
0x00000000001ad39e : fistp qword ptr [rbp + rsi*8 - 1] ; sbb al, 0xd ; push rbp ; jl 0x1ad3a5 ; jmp qword ptr [rdx]
0x00000000000d6440 : fistp qword ptr [rcx] ; ret 0xc189
0x0000000000074919 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007471e : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001353fb : fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012cff1 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000855ee : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000054c43 : fisttp dword ptr [rax + 0x63] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000049584 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x495a8
0x0000000000039131 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000095b16 : fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000fc72e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2c1bca ; pop rbx ; ret
0x00000000000279ad : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000045bd8 : fisttp dword ptr [rcx - 0x77] ; fld dword ptr [rcx - 0x77] ; ret
0x000000000003914b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000001054e4 : fisttp dword ptr [rcx - 0x7d] ; ret 0x4d30
0x00000000000366da : fisttp dword ptr [rdi] ; ret
0x000000000005ac46 : fisttp dword ptr [rdi] ; test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x0000000000095a1d : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000003ec8e : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c833a : fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008baca : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000012b743 : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000059b19 : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x00000000000f5d67 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000093fdc : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x0000000000094948 : fisttp word ptr [rax + 1] ; ret
0x00000000000b1277 : fisttp word ptr [rax + 1] ; ret 0x8948
0x0000000000135c14 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000120b1c : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x000000000011dc42 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000005014a : fisttp word ptr [rax - 0x77] ; ret
0x00000000000ec505 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000165449 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000391cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000b75d5 : fisttp word ptr [rbx + 0x30] ; add byte ptr [rax - 0x77], cl ; jmp 0x49cdff31
0x00000000000f5f25 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000095e10 : fisttp word ptr [rcx + 1] ; ret
0x00000000000858c7 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000011dd53 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000013d9ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000f0b21 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000f170d : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf16e3
0x00000000000f196d : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, 0xffffffffffffffff ; jmp 0xf1943
0x0000000000161081 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006aebc : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000160d81 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c3b0 : fisubr dword ptr [rbx - 9] ; call rsp
0x0000000000121885 : fld dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001b6dec : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000045bdb : fld dword ptr [rcx - 0x77] ; ret
0x000000000019c3f5 : fld qword ptr [rax] ; add al, bh ; js 0x19c3ef ; jmp qword ptr [rcx]
0x000000000018e0e5 : fld qword ptr [rdx] ; add byte ptr [rax - 0x42], dh ; cli ; call rsp
0x0000000000175021 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000003682f : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000f3aad : fld xword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000000f3a39 : fld xword ptr [rax + rax] ; mov rdx, rax ; jmp 0xf3a15
0x00000000000368f8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000367c9 : fld xword ptr [rsp + 8] ; ret
0x00000000000368c9 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000368a9 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000f3d9b : fldcw word ptr [rax + rax] ; jne 0xf47ab ; ret
0x0000000000036a79 : fldcw word ptr [rsp - 2] ; ret
0x000000000006b05f : fldenv dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000008be09 : fldenv dword ptr [rsi + 0xf] ; je 0x8be66 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093a47 : fldenv dword ptr [rsi + 0xf] ; je 0x93aa4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000161101 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008bd01 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000199b2d : fldln2 ; jmp qword ptr [rdx]
0x0000000000038594 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000049605 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000085e7b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000007706c : fmul dword ptr [rax + 0xf] ; ret
0x00000000000c3f72 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000006b1c1 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000021366 : fmul dword ptr [rax - 1] ; ret
0x00000000000ba1de : fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x00000000000b382e : fmul dword ptr [rcx + 0x39] ; ret
0x0000000000092abe : fmul dword ptr [rcx + 0xf] ; ret
0x00000000000c5380 : fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000005963c : fmul dword ptr [rcx - 0x77] ; ret
0x00000000000b82a4 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fcefd : fmul dword ptr [rdi] ; ret
0x000000000002ddeb : fmul dword ptr [rsi + 0x63] ; add al, 0x82 ; add r8, rdx ; jmp r8
0x000000000003871a : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x000000000002325a : fmul qword ptr [rax - 0x77] ; ret
0x00000000000bd4eb : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000c46c3 : fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x00000000000a7736 : fmul qword ptr [rcx - 0x77] ; ret 0x24eb
0x0000000000087289 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d18f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000019af54 : fmul qword ptr [rdx] ; out dx, al ; jmp qword ptr [rdx]
0x000000000018b4bc : fmul st(0), st(0) ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000043bc8 : fmulp st(1) ; ret
0x000000000002c0e3 : fnstcw word ptr [rcx] ; cmp dword ptr [rax], eax ; ret
0x00000000000dae5e : fnstcw word ptr [rcx] ; rol byte ptr [rcx - 0x77], 1 ; ret
0x0000000000080dba : fnstenv dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000085993 : fnstenv dword ptr [rcx + 0x58b0033] ; ret
0x0000000000002516 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000108557 : fnstsw dword ptr [rax + 0x3948002b] ; ret 0x840f
0x00000000001869b0 : fnstsw dword ptr [rax - 0x44ee0003] ; std ; call qword ptr [rcx]
0x0000000000030142 : fnstsw dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000048a9f : fnstsw dword ptr [rbp + 0x37] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000035445 : fpatan ; ret
0x0000000000160e81 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000368fc : fscale ; fstp st(1) ; ret
0x000000000005c39f : fst qword ptr [rbx + 3] ; add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x0000000000174d07 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000941be : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000114d4e : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000000f548f : fstp qword ptr [rdi - 0x74b6000e] ; jge 0xf549f ; call rbx
0x0000000000175080 : fstp st(0) ; ret 0xde5d
0x00000000000fa07f : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfa096
0x00000000000369e0 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000368fe : fstp st(1) ; ret
0x0000000000036831 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368cd : fstp xword ptr [rdi] ; ret
0x0000000000022083 : fstpnce st(1), st(0) ; cmp dword ptr [rax], eax ; test rax, rax ; je 0x22097 ; jmp rax
0x0000000000036fc8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ebc80 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000036cf2 : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa7ea : fsub dword ptr [rcx + rcx*4 + 6] ; or rax, 0xffffffffffffffff ; ret
0x0000000000190dd8 : fsub dword ptr [rcx - 0x16] ; jmp qword ptr [rcx]
0x00000000001935f8 : fsub dword ptr [rdx - 0x15] ; jmp qword ptr [rbx]
0x0000000000161181 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000098834 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000001b150 : fsub qword ptr [rax + 0x18] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000187cec : fsub qword ptr [rax - 0x5f930004] ; cld ; call qword ptr [rdx]
0x00000000000a162b : fsub qword ptr [rsi + 0xf] ; jmp 0xa15f7
0x0000000000160f81 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008700c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000016592b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000199435 : fsub st(5), st(0) ; jmp qword ptr [rdx]
0x000000000018a181 : fsub st(7), st(0) ; jmp rsp
0x00000000000f5102 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000006fc7b : fsubp st(0) ; pop rdi ; ret
0x0000000000036833 : fsubp st(1) ; ret
0x00000000001a40d8 : fsubr dword ptr [rdi - 0xd] ; jmp rax
0x00000000001a4f2c : fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], ah ; hlt ; jmp qword ptr [rax]
0x00000000000f3a20 : fsubr qword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000001ac72c : fsubr st(0), st(0) ; add dword ptr [rax], eax ; and dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ac82c : fsubr st(1), st(0) ; add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x00000000001abde8 : fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000019496d : fsubr st(4) ; jmp qword ptr [rdx]
0x0000000000199a0d : fsubr st(5) ; jmp qword ptr [rdx]
0x0000000000176d58 : fucom st(5) ; loop 0x176db1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001993a5 : fucomi st(5) ; jmp qword ptr [rdx]
0x0000000000188181 : fucomp st(1) ; call rsp
0x0000000000078005 : fucompi st(0) ; adc eax, 0x89ffffd1 ; ret 0x3f7
0x00000000000c2ac5 : fucompi st(0) ; and eax, 0x89000289 ; ret 0xc748
0x0000000000045189 : fucompi st(0) ; and esi, 0x8948ffff ; ret
0x0000000000085b22 : fucompi st(0) ; fcomp dword ptr [rax - 0x76b70007] ; ret
0x00000000001a965c : fucompi st(0) ; hlt ; jmp qword ptr [rdx]
0x000000000007813d : fucompi st(0) ; or eax, 0x89ffffc4 ; ret 0xbceb
0x00000000001331ab : fucompi st(0) ; pop rdi ; ret 0xffee
0x00000000000715c3 : fucompi st(0) ; push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7158f
0x000000000002f7d7 : fucompi st(0) ; ret
0x00000000000cac1c : fucompi st(0) ; sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000035750 : fucompi st(0) ; sbb bl, byte ptr [rbp - 0x3fce0002] ; pop rbx ; ret
0x0000000000071ba8 : fucompi st(0) ; xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71b78
0x0000000000082fc3 : fucompi st(0) ; xchg eax, edi ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000eda77 : fucompi st(0) ; xor ebx, dword ptr [rsi - 6] ; dec dword ptr [rax + 0x39] ; ret
0x00000000000782e2 : fucompi st(3) ; cwde ; mov esi, r8d ; call 0x74558
0x00000000001a6744 : hlt ; add byte ptr [rcx], 0 ; call 0x231a5c1c
0x000000000018e634 : hlt ; add qword ptr [r8], r8 ; xor al, 0xe1 ; std ; jmp rsp
0x00000000001a3344 : hlt ; add qword ptr [rax], r8 ; call 0x131a2633
0x00000000001a6c5a : hlt ; call qword ptr [rax]
0x000000000017998a : hlt ; call qword ptr [rbx]
0x0000000000179926 : hlt ; call qword ptr [rcx]
0x000000000017982a : hlt ; call qword ptr [rdx]
0x00000000001a6062 : hlt ; call qword ptr [rsi]
0x0000000000179972 : hlt ; call rbx
0x00000000001796d6 : hlt ; call rcx
0x00000000001a610a : hlt ; call rdi
0x000000000018b0d2 : hlt ; call rsp
0x00000000001a2444 : hlt ; cmp eax, 0xfbe80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000096bb3 : hlt ; cmp ecx, edx ; je 0x96bae ; ret
0x0000000000187db4 : hlt ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x00000000001796c2 : hlt ; dec dword ptr [rax + 0x16] ; hlt ; jmp qword ptr [rdx]
0x0000000000109233 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000179bb6 : hlt ; dec dword ptr [rax] ; cdq ; hlt ; jmp qword ptr [rsi]
0x0000000000179986 : hlt ; dec dword ptr [rcx] ; wait ; hlt ; call qword ptr [rbx]
0x00000000001798c6 : hlt ; dec dword ptr [rdi] ; cdq ; hlt ; lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x0000000000179dba : hlt ; dec dword ptr [rdi] ; loop 0x179dbc ; dec dword ptr [rdi] ; loop 0x179dc0 ; jmp rsp
0x0000000000179dbe : hlt ; dec dword ptr [rdi] ; loop 0x179dbc ; jmp rsp
0x0000000000179782 : hlt ; dec eax ; xchg eax, edx ; hlt ; jmp qword ptr [rax]
0x000000000018b13a : hlt ; dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; je 0x18b17f ; hlt ; jmp rsp
0x00000000001af3e4 : hlt ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000000f3a38 : hlt ; fld xword ptr [rax + rax] ; mov rdx, rax ; jmp 0xf3a16
0x0000000000109386 : hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000179c62 : hlt ; inc dword ptr [rbx + rcx*8 - 0xc] ; jmp rsp
0x0000000000179c0e : hlt ; inc dword ptr [rsp + rcx*8 - 0xc] ; jmp rsp
0x0000000000195344 : hlt ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x000000000018adb8 : hlt ; jb 0x18adb1 ; jmp rsp
0x0000000000175108 : hlt ; jmp 0x1750dd
0x00000000001796ca : hlt ; jmp qword ptr [rax]
0x00000000001798ce : hlt ; jmp qword ptr [rbx]
0x00000000001a4f62 : hlt ; jmp qword ptr [rcx]
0x0000000000179732 : hlt ; jmp qword ptr [rdi]
0x00000000001796c6 : hlt ; jmp qword ptr [rdx]
0x00000000001797d2 : hlt ; jmp qword ptr [rsi]
0x00000000001a7262 : hlt ; jmp rax
0x000000000017951a : hlt ; jmp rcx
0x000000000017997a : hlt ; jmp rdi
0x000000000017987a : hlt ; jmp rdx
0x0000000000179bea : hlt ; jmp rsp
0x0000000000164445 : hlt ; jne 0x164567 ; ret
0x0000000000164444 : hlt ; jne 0x164568 ; ret
0x00000000001a8644 : hlt ; lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001798ca : hlt ; lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x0000000000179496 : hlt ; ljmp ptr [rcx] ; push rbx ; call rcx
0x0000000000189514 : hlt ; lock add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rsp
0x00000000001ac744 : hlt ; loopne 0x1ac74f ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x000000000018d0f0 : hlt ; mov al, 0xf8 ; jmp rsp
0x000000000014c93a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144c3e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000163a53 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001a5144 : hlt ; push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018dd28 : hlt ; push rbp ; cli ; call rsp
0x00000000001873dc : hlt ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000096b9b : hlt ; ret
0x0000000000188f44 : hlt ; ret 0
0x000000000019e444 : hlt ; std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000186e0d : hlt ; sti ; call qword ptr [rax]
0x0000000000175243 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000163a57 : hlt ; sub eax, edx ; ret
0x0000000000003c81 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000018b310 : hlt ; xlatb ; hlt ; jmp rsp
0x00000000000d1ea3 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1e3a ; pop rbx ; ret
0x0000000000177add : idiv bh ; call rdi
0x00000000000f46e4 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d43c4 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x00000000000b3863 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000039b52 : idiv bh ; dec ecx ; ret
0x000000000018b8f2 : idiv bh ; mov esp, 0xd40001de ; mov esi, dr0 ; call rsp
0x00000000000bcc9b : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001acbb2 : idiv bh ; ret 3
0x00000000001b1288 : idiv bh ; sbb al, 0xd ; cli ; cmp dh, dh ; jmp qword ptr [rdx]
0x00000000001b02d0 : idiv bh ; sbb al, 0xd ; pop rbp ; and esi, esi ; jmp qword ptr [rdx]
0x00000000001b04d8 : idiv bh ; sbb al, 0xd ; sub r14, r14 ; jmp qword ptr [rdx]
0x00000000001b0568 : idiv bh ; sbb al, 0xd ; sub r14, rsi ; jmp qword ptr [rdx]
0x00000000001b0520 : idiv bh ; sbb al, 0xd ; sub rsi, r14 ; jmp qword ptr [rdx]
0x000000000017a074 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000011c61e : idiv bh ; xor eax, eax ; ret
0x0000000000186e51 : idiv bl ; call rax
0x00000000000257e6 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x000000000012eb9d : idiv byte ptr [rsi + 0x38] ; call 0x12adb5
0x0000000000186e55 : idiv ebx ; jmp qword ptr [rax]
0x000000000003884d : idiv ecx ; pop r15 ; ret
0x000000000008091f : idiv edi ; adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x00000000000aeece : idiv edi ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7405 : idiv edi ; add rsp, 0x408 ; ret
0x000000000011bc69 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000caa9f : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000ab43b : idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000039b4b : idiv edi ; dec ecx ; ret
0x000000000018c3aa : idiv edi ; lar eax, word ptr fs:[rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x0000000000117f1d : idiv edi ; mov eax, ebx ; pop rbx ; ret
0x000000000018c0ca : idiv edi ; mov esp, 0x74000202 ; xor dh, bh ; call rsp
0x000000000018bfca : idiv edi ; mov esp, 0x940001ff ; sub esi, edi ; call rsp
0x000000000018bdea : idiv edi ; mov esp, 0xb40001f7 ; add esi, edi ; call rsp
0x00000000000aee8a : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000c4b2d : idiv edi ; push rsi ; ret
0x00000000001b4842 : idiv edi ; ret
0x00000000001b3c9a : idiv edi ; ret 0
0x00000000001b6480 : idiv edi ; sbb al, 0xd ; cmp al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000003c986 : idiv esi ; ret
0x00000000001b647f : idiv r15 ; sbb al, 0xd ; cmp al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x00000000000b3873 : idiv r15b ; dec dword ptr [rcx + 0x29] ; ret
0x000000000003884c : idiv r9 ; pop r15 ; ret
0x000000000003c985 : idiv rsi ; ret
0x00000000000dbc3f : imul al ; jnp 0xdbc51 ; sti ; call rcx
0x00000000000a95f7 : imul al ; ret
0x0000000000032048 : imul al ; ret 1
0x000000000012ceaf : imul al ; stosd dword ptr [rdi], eax ; and eax, 0x8948ffef ; ret
0x0000000000187a80 : imul byte ptr [rdi - 0x50790004] ; cld ; call qword ptr [rsi]
0x000000000009c088 : imul cl ; ret 8
0x00000000000e2841 : imul eax ; cdq ; ret 0xffff
0x000000000011bc73 : imul eax ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000006c0d1 : imul eax ; mov ecx, 0x89000084 ; ret
0x00000000001059bf : imul eax ; pop rbx ; ret
0x00000000000394c7 : imul eax ; ret
0x0000000000105d58 : imul eax ; ret 0xffbf
0x0000000000105a6b : imul eax ; scasd eax, dword ptr [rdi] ; ret 0xffff
0x000000000006c6e1 : imul eax ; test eax, 0x8900007e ; ret
0x000000000007df49 : imul eax, dword ptr [rax], 0 ; ret
0x00000000000cbc5d : imul eax, dword ptr [rax], 0x450f0000 ; ret 0x84e9
0x00000000001625b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000000d64d3 : imul eax, dword ptr [rcx], 0x63480000 ; ret 0x8b48
0x000000000018a725 : imul eax, dword ptr [rcx], 0xf1b2a400 ; call rsp
0x00000000001a4f5d : imul eax, dword ptr [rcx], 0xf461a000 ; jmp qword ptr [rcx]
0x00000000001a4f75 : imul eax, dword ptr [rcx], 0xf461b800 ; jmp qword ptr [rbx]
0x00000000001a5035 : imul eax, dword ptr [rcx], 0xf4635800 ; jmp qword ptr [rcx]
0x00000000001a504d : imul eax, dword ptr [rcx], 0xf4637000 ; jmp qword ptr [rcx]
0x00000000001b51ed : imul eax, dword ptr [rdx], 0 ; jo 0x1b51ff ; sti ; jmp qword ptr [rdx]
0x000000000018d08d : imul eax, dword ptr [rdx], 0 ; js 0x18d039 ; clc ; jmp rsp
0x00000000001b4fed : imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x00000000001b5035 : imul eax, dword ptr [rdx], 0xf79aa800 ; jmp qword ptr [rcx]
0x000000000007df48 : imul eax, dword ptr cs:[rax], 0 ; ret
0x000000000019ab1d : imul ebp ; jmp qword ptr [rdx]
0x00000000001a972e : imul ebp, ecx, 0xd1cfff4 ; shr eax, -0xc ; jmp qword ptr [rdx]
0x0000000000102045 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d8a9 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001098a2 : imul ebx, dword ptr [rbx + 0x5d], 0x5c41f089 ; ret
0x0000000000101fe5 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a1a76 : imul ecx, dword ptr [rcx + 0xd1cfff1], 0x4d ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000046f51 : imul ecx, ebx, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000003d1d4 : imul edi, dword ptr [rax], 0 ; add rsp, 8 ; ret
0x0000000000101f1f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efaa1 : imul edi, dword ptr [rbx - 0x3f7a0001], -0x77 ; ret
0x000000000012484b : imul edi, ebp, 0x89c085ff ; ret
0x00000000000c632f : imul edi, edi, 0x8348ffff ; ret
0x0000000000188729 : imul edx ; jmp rsp
0x00000000001114c9 : imul edx, dword ptr [rax - 0x18], 0x10 ; ret 0
0x0000000000102015 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002b60 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x000000000019d469 : imul esi ; call qword ptr [rcx]
0x000000000018b3d9 : imul esi, ebp, -1 ; pop rsp ; ret
0x00000000001ac8f7 : imul esi, ebp, -1 ; sbb al, 0xd ; sbb ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001ac4df : imul esi, ebp, 0xed0d1cff ; cmc ; jmp qword ptr [rdx]
0x00000000000b16de : imul esi, edx ; add eax, esi ; ret
0x00000000001a9f76 : imul esi, edx, 0xd1cfff4 ; je 0x1a9f78 ; hlt ; jmp qword ptr [rdx]
0x0000000000178a3d : imul esi, edx, 0xf268c0ff ; call rax
0x0000000000178a69 : imul esi, edx, 0xf269b0ff ; call rax
0x0000000000178a71 : imul esi, edx, 0xf269f0ff ; call qword ptr [rax]
0x000000000009cdcc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000000374c : in al, -0x12 ; jne 0x372e ; ret 0x975
0x0000000000189880 : in al, -0x14 ; out dx, al ; call rsp
0x00000000000c7742 : in al, -0x15 ; ret
0x0000000000061965 : in al, -0x17 ; out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x00000000000bc325 : in al, -0x17 ; ret 0xfffd
0x0000000000193d5c : in al, -0x1f ; jmp 0x193d62
0x00000000001aac34 : in al, -0x3b ; add dword ptr [rax], eax ; mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001aa934 : in al, -0x3e ; add dword ptr [rax], eax ; test al, 0xd2 ; cmc ; jmp qword ptr [rsi]
0x00000000001339a8 : in al, -0x42 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018aab0 : in al, -0x57 ; call rsp
0x00000000001a8134 : in al, -0x66 ; add dword ptr [rax], eax ; mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000010938a : in al, -0x77 ; ret 0x87e
0x00000000000e155d : in al, -0x7d ; mov byte ptr [rcx], 0x83 ; ret 0x4840
0x00000000001b1481 : in al, -0xa ; jmp rdx
0x000000000014c91a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000f6b95 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0xf6ba4 ; call r12
0x0000000000082d8e : in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000186b05 : in al, -5 ; call rax
0x0000000000186c29 : in al, -5 ; jmp rax
0x000000000018e734 : in al, 0 ; add byte ptr [rax], al ; pop rax ; cmp cl, ch ; call qword ptr [rsi]
0x0000000000164478 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fa8f1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000018935d : in al, 0 ; add ch, bl ; mov dh, ch ; call rsp
0x000000000018ff34 : in al, 0x18 ; add byte ptr [rax], al ; add rdx, rbp ; jmp qword ptr [rax]
0x00000000000a5d03 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa5d1e
0x00000000000aabb3 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xaabce
0x000000000012eb48 : in al, 0x55 ; push rbx ; xor ebx, ebx ; call 0x12ade7
0x00000000001a5034 : in al, 0x69 ; add dword ptr [rax], eax ; pop rax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a5534 : in al, 0x6e ; add dword ptr [rax], eax ; clc ; jae 0x1a5536 ; jmp qword ptr [rcx]
0x0000000000195944 : in al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000086e0c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000f5e00 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000aee88 : in al, 5 ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000009d908 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000003cc53 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000010bd68 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000192f3c : in al, dx ; add byte ptr [rax], al ; nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x0000000000137cb0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001667a6 : in al, dx ; call qword ptr [rax]
0x0000000000172daa : in al, dx ; call qword ptr [rdx]
0x0000000000166792 : in al, dx ; call rax
0x00000000001949ea : in al, dx ; call rdx
0x0000000000172d92 : in al, dx ; call rsi
0x00000000000397c8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000039f39 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000199dfd : in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001667a2 : in al, dx ; inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x000000000016678e : in al, dx ; inc dword ptr [rax] ; js 0x166784 ; call rax
0x00000000001a2079 : in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001331d6 : in al, dx ; je 0x1331ed ; mov rdi, r12 ; call 0x1f478
0x00000000000d4e4d : in al, dx ; jl 0xd4e89 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019429a : in al, dx ; jmp qword ptr [rcx]
0x00000000001942f6 : in al, dx ; jmp qword ptr [rdx]
0x0000000000188d5a : in al, dx ; jmp rsp
0x00000000001331a6 : in al, dx ; jne 0x133162 ; mov rdi, rbx ; call 0x1f418
0x00000000000eb6e6 : in al, dx ; jo 0xeb6e2 ; ret 0x4840
0x0000000000188d52 : in al, dx ; lcall ptr [rbx + rsi*4 + 0x152f0000] ; in al, dx ; jmp rsp
0x00000000000f3363 : in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001ae414 : in al, dx ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000197bcc : in al, dx ; mov ebp, ebp ; jmp qword ptr [rdx]
0x000000000019a13c : in al, dx ; mov edx, 0x10e00000 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000144c3a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096cc3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000012d164 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000004989a : in al, dx ; mov rax, rsi ; nop ; ret
0x000000000014cd1a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000fbd7e : in al, dx ; or al, ch ; jmp 0xfbd4a
0x00000000000e427e : in al, dx ; or al, ch ; mov ebx, 0x39fffde9 ; ret
0x000000000006e446 : in al, dx ; or al, ch ; ret
0x000000000008323a : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000012e8ff : in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000008149a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001389d4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000001f662 : in al, dx ; or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x0000000000189881 : in al, dx ; out dx, al ; call rsp
0x000000000019e521 : in al, dx ; out dx, eax ; call rsp
0x000000000016679e : in al, dx ; push qword ptr [rax + 0x77] ; in al, dx ; inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x000000000016678a : in al, dx ; push qword ptr [rax] ; js 0x166784 ; inc dword ptr [rax] ; js 0x166788 ; call rax
0x0000000000096b13 : in al, dx ; ret
0x000000000019a93c : in al, dx ; ret 0
0x000000000006fc69 : in al, dx ; ret 7
0x00000000000a4136 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc36682a6
0x00000000000a3a5f : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000013068d : in al, dx ; sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001aff3c : in al, dx ; sbb byte ptr [rdx], al ; add al, ah ; mov cl, 0xf6 ; jmp qword ptr [rcx]
0x00000000001a823c : in al, dx ; wait ; add dword ptr [rax], eax ; loopne 0x1a8278 ; cmc ; jmp qword ptr [rcx]
0x000000000017679e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176731 ; ret 0x48f
0x000000000017679d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176732 ; ret 0x48f
0x0000000000116382 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001885b9 : in eax, -0x16 ; call rsp
0x00000000001a94a4 : in eax, -0x1a ; hlt ; jmp qword ptr [rdx]
0x0000000000176d59 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000c6171 : in eax, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a1904 : in eax, -0x79 ; int1 ; jmp qword ptr [rdx]
0x00000000001ab9f9 : in eax, -0xb ; call qword ptr [rax]
0x00000000001aba29 : in eax, -0xb ; call qword ptr [rbx]
0x000000000014c99a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000917fa : in eax, -0xd ; ret
0x00000000001a1f11 : in eax, -0xf ; jmp rsi
0x0000000000057e89 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000176221 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000007a2d2 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000189395 : in eax, 0 ; add ah, al ; mov ch, dh ; call rsp
0x000000000018937d : in eax, 0 ; add bh, ah ; mov esi, ebp ; jmp rsp
0x0000000000034b95 : in eax, 0x13 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000192c7c : in eax, 0x1f ; jmp 0x192c82
0x0000000000174ea3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000e43e8 : in eax, 0x39 ; ret
0x000000000011dd56 : in eax, 0x41 ; call rdi
0x00000000000a31da : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x0000000000097cda : in eax, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000008c78a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000000499d2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000f32fe : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001ab334 : in eax, 0x58 ; cmc ; jmp qword ptr [rdx]
0x000000000010aca5 : in eax, 0x5d ; ret
0x0000000000174139 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000000a2fb3 : in eax, 0xf ; je 0xa2fd8 ; add rax, 2 ; ret
0x00000000000283d6 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000a8cc2 : in eax, dx ; add dword ptr [rcx - 0x7d], ecx ; jmp 0xffffffffc28dd4d4
0x0000000000194e5a : in eax, dx ; call qword ptr [rax]
0x0000000000196f9a : in eax, dx ; call qword ptr [rcx]
0x0000000000194cba : in eax, dx ; call qword ptr [rdx]
0x000000000017752a : in eax, dx ; call rbx
0x000000000019673a : in eax, dx ; call rcx
0x0000000000188f7a : in eax, dx ; call rsp
0x00000000001abee1 : in eax, dx ; cmc ; call qword ptr [rax]
0x00000000001abe99 : in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001ac464 : in eax, dx ; cmc ; jmp qword ptr [rdx]
0x0000000000096bda : in eax, dx ; cmp r8d, ecx ; je 0x96bcf ; ret
0x0000000000188fda : in eax, dx ; dec dword ptr [rsi + rax*8 + 0x637a0000] ; in eax, dx ; call rsp
0x0000000000198e39 : in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195b34 : in eax, dx ; je 0x195b27 ; jmp qword ptr [rdx]
0x000000000002f62d : in eax, dx ; jmp 0x2f637
0x000000000017352e : in eax, dx ; jmp qword ptr [rax]
0x0000000000188f52 : in eax, dx ; jmp qword ptr [rbx + rax*8]
0x000000000018904a : in eax, dx ; jmp qword ptr [rcx + rcx*8 - 0x3c960000]
0x0000000000194d1e : in eax, dx ; jmp qword ptr [rdx]
0x00000000001996d2 : in eax, dx ; jmp rax
0x00000000001966ca : in eax, dx ; jmp rbx
0x0000000000194bfa : in eax, dx ; jmp rcx
0x00000000001959f2 : in eax, dx ; jmp rsi
0x0000000000188efa : in eax, dx ; jmp rsp
0x000000000016530f : in eax, dx ; jne 0x1652f1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ac1c : in eax, dx ; jne 0x7ac39 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae69 : in eax, dx ; jne 0x7aea1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d09aa : in eax, dx ; jne 0xd0999 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1542 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000188ef2 : in eax, dx ; ljmp ptr [rax + rax*8 + 0x53b40000] ; in eax, dx ; jmp rsp
0x00000000000a0f09 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0f1f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0f41 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f5f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0f7f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0fa5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0fc1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0fe1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1001 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1027 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1049 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1067 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1087 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a10a3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a10c3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a10e3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1103 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1129 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1179 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0e4f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e6d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0e8d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0eaf : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0ecf : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0eef : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0d85 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0d97 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0dad : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0dc5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0ddb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0ded : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0e0b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0e17 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a0e2d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0d71 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000000a55a5 : in eax, dx ; mov edx, eax ; jmp 0xa5552
0x00000000000a7de5 : in eax, dx ; mov edx, eax ; jmp 0xa7d92
0x00000000000aa495 : in eax, dx ; mov edx, eax ; jmp 0xaa442
0x0000000000144a4a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096c12 : in eax, dx ; mov rax, rdi ; ret
0x00000000000a84df : in eax, dx ; mov rbx, r15 ; setne dl ; jmp 0xa84fd
0x000000000014cd9a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d450d : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000088538 : in eax, dx ; or al, 0 ; ret
0x000000000013c540 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c0e08 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000165712 : in eax, dx ; pop rbx ; ret
0x000000000017757e : in eax, dx ; push qword ptr [rax + 0x72] ; out dx, al ; call qword ptr [rax - 0x2f00118e]
0x0000000000188f72 : in eax, dx ; push qword ptr [rbx + rax*8] ; add ah, dl ; pop rbp ; in eax, dx ; call rsp
0x000000000018905a : in eax, dx ; push qword ptr [rdx + rcx*8] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188f42 : in eax, dx ; push rsp ; ret 0
0x0000000000074192 : in eax, dx ; ret
0x00000000000a1692 : in eax, dx ; sub rax, 1 ; ret
0x0000000000086b52 : in eax, dx ; xor eax, eax ; ret
0x000000000008c6a5 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000010db8c : inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000113c5e : inc byte ptr [rbx + 0x394101c0] ; ret 0xd975
0x00000000000ba0b1 : inc byte ptr [rcx] ; je 0xba0c6 ; xor eax, eax ; ret
0x00000000000730b9 : inc byte ptr [rdx] ; je 0x730cf ; mov dword ptr [rdi], edx ; ret
0x00000000000f3304 : inc dword ptr [r8] ; ret
0x0000000000186d4b : inc dword ptr [rax + 0x10] ; cld ; call rax
0x0000000000186dab : inc dword ptr [rax + 0x10fffc0f] ; add bh, ah ; call rax
0x0000000000186eeb : inc dword ptr [rax + 0x10fffc38] ; sub edi, esp ; call rax
0x0000000000186fb7 : inc dword ptr [rax + 0x16] ; cld ; call qword ptr [rax - 0x1f0003e9]
0x000000000018671f : inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x000000000018700b : inc dword ptr [rax + 0x1d] ; cld ; call qword ptr [rax - 0x1f0003e2]
0x0000000000186e93 : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000186f37 : inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186777 : inc dword ptr [rax + 0x31] ; sti ; jmp rax
0x0000000000186f1f : inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x0000000000186797 : inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x0000000000186baf : inc dword ptr [rax + 0x40fffbda] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x000000000018746f : inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x000000000018725f : inc dword ptr [rax + 0x60] ; cld ; call rax
0x0000000000187047 : inc dword ptr [rax + 0x63] ; cld ; call rax
0x00000000001867ff : inc dword ptr [rax + 0x71] ; sti ; call qword ptr [rax - 0x1f00048e]
0x00000000001667a3 : inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x0000000000186dc7 : inc dword ptr [rax + 0xd] ; cld ; inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000186d47 : inc dword ptr [rax + 0xe] ; cld ; inc dword ptr [rax + 0x10] ; cld ; call rax
0x0000000000186dcb : inc dword ptr [rax + 0xf] ; cld ; call rax
0x0000000000186cb3 : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000018d8ab : inc dword ptr [rax + rbp*4 - 0x303bfffe] ; stc ; call rsp
0x000000000018e503 : inc dword ptr [rax + rsi*2] ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x000000000005fcb3 : inc dword ptr [rax - 0x10b943] ; jmp qword ptr [rax]
0x0000000000186b9b : inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x0000000000186c17 : inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x0000000000186bb3 : inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x0000000000186bcf : inc dword ptr [rax - 0x26] ; sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x0000000000186c5f : inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x000000000018701b : inc dword ptr [rax - 0x2f0003de] ; and edi, esp ; jmp qword ptr [rax]
0x0000000000186fc7 : inc dword ptr [rax - 0x2f0003e5] ; sbb al, 0xfc ; jmp qword ptr [rax]
0x0000000000186e4f : inc dword ptr [rax - 0x2f00040a] ; idiv ebx ; jmp qword ptr [rax]
0x0000000000186c83 : inc dword ptr [rax - 0x2f000436] ; retf ; sti ; jmp qword ptr [rax]
0x000000000018680f : inc dword ptr [rax - 0x2f00048a] ; ja 0x18681a ; jmp qword ptr [rax]
0x0000000000186c73 : inc dword ptr [rax - 0x3b] ; sti ; call qword ptr [rax - 0x1f00043a]
0x0000000000178843 : inc dword ptr [rax - 0x4f000dae] ; push rdx ; jmp rax
0x000000000004a68d : inc dword ptr [rax - 0x4f943] ; jmp qword ptr [rax]
0x000000000004b1d6 : inc dword ptr [rax - 0x4fb43] ; jmp qword ptr [rax]
0x0000000000187c43 : inc dword ptr [rax - 0x51] ; cld ; call rax
0x0000000000187a6b : inc dword ptr [rax - 0x55] ; cld ; call rsi
0x00000000001789eb : inc dword ptr [rax - 0x5f000d9b] ; call rax
0x0000000000178ccf : inc dword ptr [rax - 0x71] ; call rax
0x0000000000187533 : inc dword ptr [rax - 0x75] ; cld ; call rax
0x000000000018774b : inc dword ptr [rax - 0x78] ; cld ; call rax
0x0000000000178597 : inc dword ptr [rax - 0x7b] ; int1 ; call qword ptr [rax - 0x1f000e79]
0x0000000000186ee7 : inc dword ptr [rax - 0x7f0003ca] ; cmp ah, bh ; call qword ptr [rax]
0x0000000000186e3f : inc dword ptr [rax - 0xf] ; sti ; call qword ptr [rax - 0x1f00040e]
0x000000000018976d : inc dword ptr [rax] ; add ah, dl ; ret 0xffee
0x000000000004cdf2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rsi ; call qword ptr [rdx]
0x000000000004b7ea : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b44
0x00000000000621e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000cdaba : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000016445d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000161697 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000189775 : inc dword ptr [rax] ; add byte ptr [rbx + rax*8 - 0x12], ah ; jmp rsp
0x000000000006a0aa : inc dword ptr [rax] ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffff
0x000000000018673f : inc dword ptr [rax] ; and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x000000000017877b : inc dword ptr [rax] ; call qword ptr [rax]
0x0000000000187037 : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000186f57 : inc dword ptr [rax] ; cld ; jmp rax
0x0000000000186bd3 : inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x0000000000178ad3 : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; call qword ptr [rax]
0x0000000000178ab7 : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000178563 : inc dword ptr [rax] ; int1 ; call qword ptr [rax]
0x00000000001877a3 : inc dword ptr [rax] ; jl 0x1877ab ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001787b3 : inc dword ptr [rax] ; jmp qword ptr [rax]
0x00000000001879a7 : inc dword ptr [rax] ; jnp 0x1879af ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x00000000001785fb : inc dword ptr [rax] ; jrcxz 0x1785f4 ; call qword ptr [rax]
0x000000000016678f : inc dword ptr [rax] ; js 0x166783 ; call rax
0x0000000000187a5b : inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000186bbb : inc dword ptr [rax] ; loopne 0x186bbe ; jmp rax
0x000000000018773b : inc dword ptr [rax] ; mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000187c33 : inc dword ptr [rax] ; mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x0000000000186973 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x0000000000178cbe : inc dword ptr [rax] ; or byte ptr [rdi - 0x70e7000e], cl ; call rdi
0x000000000010c6c7 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x0000000000186cbb : inc dword ptr [rax] ; or esp, edi ; jmp rax
0x00000000001788ff : inc dword ptr [rax] ; push rsi ; call qword ptr [rax]
0x000000000017888b : inc dword ptr [rax] ; push rsp ; call qword ptr [rax]
0x00000000000f3305 : inc dword ptr [rax] ; ret
0x0000000000187563 : inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x00000000001786af : inc dword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x0000000000186f3f : inc dword ptr [rax] ; xor bh, ah ; call rax
0x0000000000186e9b : inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000bc322 : inc dword ptr [rbp + 0x31] ; in al, -0x17 ; ret 0xfffd
0x00000000000cfb6d : inc dword ptr [rbp + 0x39ee74f1] ; ret 0x8e0f
0x00000000000ae5b6 : inc dword ptr [rbp + 0x79c789c0] ; ret
0x0000000000117e44 : inc dword ptr [rbp + 1] ; ret 0x3941
0x00000000001876e7 : inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x000000000018d503 : inc dword ptr [rbp + rcx*4 + 0x65440002] ; stc ; call rsp
0x0000000000048826 : inc dword ptr [rbp - 0x3db6f02e] ; pop rbx ; ret
0x0000000000109387 : inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000009565d : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000f3d0f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000f3d5a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000032d86 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x9be9
0x00000000001791eb : inc dword ptr [rbx + rbx*8 - 0xd] ; call qword ptr [rdx]
0x00000000000805c6 : inc dword ptr [rbx + rcx*4 + 0x15] ; ret 0x33db
0x00000000000b2c19 : inc dword ptr [rbx + rcx*4 + 0x25] ; call qword ptr [rcx]
0x00000000000e4925 : inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000179c63 : inc dword ptr [rbx + rcx*8 - 0xc] ; jmp rsp
0x000000000005f99a : inc dword ptr [rbx - 0x10ff43] ; jmp qword ptr [rax]
0x00000000000c49ac : inc dword ptr [rbx - 0x1af73] ; jmp qword ptr [rax]
0x00000000000c47a2 : inc dword ptr [rbx - 0x1c773] ; jmp qword ptr [rax]
0x0000000000080356 : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x000000000012242d : inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000006cf77 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x0000000000064d82 : inc dword ptr [rbx - 0x7cf0cf06] ; ret
0x000000000011465f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00000000001794eb : inc dword ptr [rbx - 8] ; jmp qword ptr [rax]
0x000000000003d0b9 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a1caa : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1baf : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000060f14 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000004b87c : inc dword ptr [rcx + 0x39] ; ret
0x000000000004dc39 : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x0000000000073adb : inc dword ptr [rcx + 0x5c] ; ret
0x0000000000117973 : inc dword ptr [rcx + 0x5e] ; ret
0x0000000000075f79 : inc dword ptr [rcx + 0x5f] ; ret
0x00000000000f369c : inc dword ptr [rcx + 0x800008] ; add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x0000000000079cf3 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000045f53 : inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x00000000000cd322 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x000000000018b3b3 : inc dword ptr [rcx + rax*8 + 0x3b440001] ; cmc ; call rsp
0x000000000006fc55 : inc dword ptr [rcx + rcx*4 - 0x11] ; call 0xebf5f
0x00000000000c8cce : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x0000000000050027 : inc dword ptr [rcx - 0x77] ; popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c65e9 : inc dword ptr [rcx - 0x77] ; ret
0x000000000002a975 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000001141d1 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ca8fa : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001657b9 : inc dword ptr [rcx] ; ja 0x1657c4 ; ret
0x00000000001b6a59 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000020bf4 : inc dword ptr [rdi + 4] ; ret
0x000000000018987b : inc dword ptr [rdi + rax - 0x131bffff] ; out dx, al ; call rsp
0x000000000018d9c3 : inc dword ptr [rdi + rbp*4 - 0x33bfffe] ; stc ; call rsp
0x00000000001870f3 : inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000018b0cb : inc dword ptr [rdx + rbp*4 + 0x14340001] ; hlt ; call rsp
0x0000000000187b17 : inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x000000000018761f : inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000018760f : inc dword ptr [rdx] ; mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x0000000000187323 : inc dword ptr [rdx] ; push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x0000000000187b07 : inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x000000000013e1cd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000018708f : inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x0000000000197676 : inc dword ptr [rsi + 0xd1cffed] ; lodsb al, byte ptr [rsi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000018df83 : inc dword ptr [rsi + rdx*8 - 0x664bfffe] ; cli ; jmp rsp
0x0000000000187a73 : inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x000000000018757b : inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x000000000018707f : inc dword ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc63]
0x0000000000187aa3 : inc dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x000000000018690f : inc dword ptr [rsi] ; test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x0000000000187bdf : inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000179c0f : inc dword ptr [rsp + rcx*8 - 0xc] ; jmp rsp
0x00000000001871bb : inc dword ptr [rsp - 4] ; call rsp
0x0000000000186fd7 : inc eax ; and ah, bh ; call qword ptr [rax]
0x000000000017876b : inc eax ; call rax
0x00000000001785df : inc eax ; cdq ; int1 ; jmp rax
0x0000000000186e0b : inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000178b03 : inc eax ; insb byte ptr [rdi], dx ; call rax
0x0000000000186c93 : inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000178577 : inc eax ; jb 0x178570 ; call qword ptr [rax]
0x00000000001787cb : inc eax ; jmp rax
0x000000000018681f : inc eax ; jnp 0x186822 ; call qword ptr [rax]
0x00000000001869df : inc eax ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000186d8b : inc eax ; paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x0000000000178553 : inc eax ; pop rbp ; int1 ; call rax
0x0000000000178a3f : inc eax ; push 0x68d0fff2 ; jmp rax
0x0000000000178a8f : inc eax ; push 0xf2 ; jmp rax
0x0000000000178a1f : inc eax ; push rax ; jmp qword ptr [eax]
0x000000000017887b : inc eax ; push rbx ; call rax
0x0000000000178337 : inc eax ; push rdx ; out dx, eax ; call rax
0x00000000000367a9 : inc eax ; shr eax, 0x1f ; ret
0x0000000000186e5f : inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000017a079 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000070c4c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000163f49 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000207a1 : inc edx ; jmp 0x207aa
0x00000000000f26f1 : inc esi ; jmp qword ptr [r8]
0x0000000000189c8b : inc esp ; add dword ptr es:[rax], eax ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x00000000001889b3 : inc esp ; lahf ; add byte ptr [rax], al ; ret
0x000000000018e14b : inc esp ; loope 0x18e159 ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x0000000000177d13 : inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x00000000001886eb : inc esp ; pop qword ptr [rax] ; add byte ptr [rsp + rsi*8 - 0x16], dl ; jmp rsp
0x000000000018b3e3 : inc esp ; ret
0x000000000018dc93 : inc esp ; ret 2
0x000000000002a974 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000000207a0 : inc rdx ; jmp 0x207ab
0x0000000000059f3e : insb byte ptr [rdi], dx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007ca14 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000018d0ed : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; hlt ; mov al, 0xf8 ; jmp rsp
0x00000000001b52bd : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x0000000000195345 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; clc ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001952fd : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x92 ; in eax, dx ; call qword ptr [rax]
0x0000000000139154 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018a7b5 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; ret 0xfff1
0x00000000001a67bc : insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf4ca5000 ; jmp qword ptr [rcx]
0x00000000001a24bc : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001b7fe4 : insb byte ptr [rdi], dx ; add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x000000000003682c : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368ca : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00000000000368aa : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000036a7a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000000368f9 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003a2ef : insb byte ptr [rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x00000000000367ca : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000178ad5 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x0000000000178b05 : insb byte ptr [rdi], dx ; call rax
0x00000000001acafd : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x000000000006b05e : insb byte ptr [rdi], dx ; fldenv dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x00000000001a53b1 : insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x0000000000194d1d : insb byte ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000178b01 : insb byte ptr [rdi], dx ; inc eax ; insb byte ptr [rdi], dx ; call rax
0x00000000001b52bc : insb byte ptr [rdi], dx ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x0000000000176d5e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001a5cbc : insb byte ptr [rdi], dx ; jbe 0x1a5cc7 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000178ab9 : insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000178b09 : insb byte ptr [rdi], dx ; jmp rax
0x0000000000196244 : insb byte ptr [rdi], dx ; jnp 0x196237 ; jmp qword ptr [rdx]
0x00000000000d6454 : insb byte ptr [rdi], dx ; mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d643c : insb byte ptr [rdi], dx ; mov eax, 0x39df7f04 ; ret 0xc189
0x0000000000123d2c : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000001b41bc : insb byte ptr [rdi], dx ; pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b41c1 ; call qword ptr [rdx]
0x000000000006acf7 : insb byte ptr [rdi], dx ; ret
0x000000000006ade4 : insb byte ptr [rdi], dx ; ret 0xf66
0x00000000001aa8bc : insb byte ptr [rdi], dx ; ret 1
0x000000000018dc7c : insb byte ptr [rdi], dx ; ret 2
0x00000000000a5572 : insb byte ptr [rdi], dx ; ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x00000000001a7bbc : insb byte ptr [rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7cbc : insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x000000000012f6b0 : insb byte ptr [rdi], dx ; xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013bdc0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b5385 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x000000000013ccc0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000093715 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a53f5 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x0000000000194654 : insd dword ptr [rdi], dx ; jge 0x194646 ; jmp qword ptr [rdx]
0x000000000019c1f1 : insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x0000000000176d5f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf0 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000017510d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000176fc0 : insd dword ptr [rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x000000000017601f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000f9422 : int 0x31
0x0000000000050c5f : int 0x80
0x000000000008343f : int 0xb0
0x000000000019fab4 : int 0xb6
0x00000000001120af : int 0xd6
0x00000000000bc33f : int 0xdd
0x00000000000fc54c : int 0xf
0x0000000000179105 : int 0xf3
0x00000000000b42d1 : int 0xfa
0x0000000000036bbd : int 0xff
0x000000000018de15 : int 2
0x000000000000385f : int 3
0x000000000004f2ce : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000008c4fe : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017859a : int1 ; call qword ptr [rax - 0x1f000e79]
0x0000000000178566 : int1 ; call qword ptr [rax]
0x00000000001a0bea : int1 ; call qword ptr [rbx]
0x000000000019fe22 : int1 ; call qword ptr [rcx]
0x00000000001a0472 : int1 ; call qword ptr [rdx]
0x00000000001a0bd2 : int1 ; call qword ptr [rsi]
0x0000000000178556 : int1 ; call rax
0x00000000001a0422 : int1 ; call rsi
0x000000000018a6a2 : int1 ; call rsp
0x00000000001318c7 : int1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000010a52b : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001056e6 : int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001a9f7d : int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000199f65 : int1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000178596 : int1 ; inc dword ptr [rax - 0x7b] ; int1 ; call qword ptr [rax - 0x1f000e79]
0x0000000000178562 : int1 ; inc dword ptr [rax] ; int1 ; call qword ptr [rax]
0x00000000001785fa : int1 ; inc dword ptr [rax] ; jrcxz 0x1785f5 ; call qword ptr [rax]
0x00000000001785de : int1 ; inc eax ; cdq ; int1 ; jmp rax
0x0000000000178576 : int1 ; inc eax ; jb 0x178571 ; call qword ptr [rax]
0x0000000000178552 : int1 ; inc eax ; pop rbp ; int1 ; call rax
0x00000000001a2199 : int1 ; int1 ; jmp qword ptr [rdx]
0x0000000000096bb1 : int1 ; je 0x96bb0 ; cmp ecx, edx ; je 0x96bb0 ; ret
0x0000000000188ca1 : int1 ; jmp 0x188ca5
0x000000000017856e : int1 ; jmp qword ptr [rax]
0x00000000001a127a : int1 ; jmp qword ptr [rbx]
0x000000000019fda2 : int1 ; jmp qword ptr [rcx]
0x00000000001a08ce : int1 ; jmp qword ptr [rdx]
0x000000000017855a : int1 ; jmp rax
0x00000000000a1c55 : int1 ; jmp rcx
0x00000000001a1f12 : int1 ; jmp rsi
0x000000000018a67a : int1 ; jmp rsp
0x000000000007befb : int1 ; jne 0x7bef6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001a2e4c : int1 ; jns 0x1a2e44 ; jmp qword ptr [rdx]
0x00000000000f3301 : int1 ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000003a4b : int1 ; mov dl, 0x1e ; ret
0x00000000000848a6 : int1 ; mov eax, 0x16 ; je 0x848b8 ; ret
0x000000000014c78b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000014520f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000121cea : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000107a6e : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a3e5c : int1 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000163a23 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000d0d04 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000a1c98 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000004710e : int1 ; pop rbx ; ret
0x0000000000108142 : int1 ; pop rdx ; pop r10 ; ret
0x0000000000178572 : int1 ; push qword ptr [rax + 0x70] ; int1 ; inc eax ; jb 0x178575 ; call qword ptr [rax]
0x000000000017854e : int1 ; push qword ptr [rax - 0x3f000ea5] ; pop rbp ; int1 ; call rax
0x00000000001785f6 : int1 ; push rax ; loop 0x1785f5 ; inc dword ptr [rax] ; jrcxz 0x1785f9 ; call qword ptr [rax]
0x000000000017855e : int1 ; push rax ; movsxd rsi, ecx ; inc dword ptr [rax] ; int1 ; call qword ptr [rax]
0x00000000000025eb : int1 ; ret
0x0000000000176736 : int1 ; ret 0x5803
0x0000000000186e41 : int1 ; sti ; call qword ptr [rax - 0x1f00040e]
0x0000000000163a27 : int1 ; sub eax, edx ; ret
0x000000000011efab : int1 ; sub r8b, byte ptr [rax] ; pop rbx ; ret
0x00000000000974c8 : int1 ; test r8b, r8b ; jne 0x97474 ; mov rax, rdi ; ret
0x000000000009748e : int1 ; xor eax, eax ; ret
0x00000000001890e5 : iretd ; add byte ptr [rax], al ; mov al, 0x60 ; out dx, al ; call rsp
0x0000000000086927 : iretd ; call rcx
0x00000000001ad2cc : iretd ; jnp 0x1ad2c7 ; jmp qword ptr [rdx]
0x00000000000f549d : iretd ; lahf ; dec dword ptr [rax - 0x75] ; jge 0xf54ad ; call rbx
0x0000000000080a6a : iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x000000000018d8b1 : iretd ; stc ; call rsp
0x0000000000186c95 : iretd ; sti ; call qword ptr [rax]
0x00000000001088f0 : ja 0x1088f7 ; ret
0x000000000010896d : ja 0x10898d ; ret
0x0000000000109fd2 : ja 0x109fd9 ; ret
0x000000000010a072 : ja 0x10a079 ; ret
0x000000000010abd7 : ja 0x10abea ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000117db3 : ja 0x117db8 ; ret
0x0000000000118010 : ja 0x117ffb ; mov eax, 0xffffffff ; ret
0x000000000011ed81 : ja 0x11edd4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000121d0d : ja 0x121cfe ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e3c2 : ja 0x12e3e3 ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e3e7 : ja 0x12e403 ; ret
0x000000000012e54f : ja 0x12e572 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001657bb : ja 0x1657c2 ; ret
0x00000000001667a5 : ja 0x166795 ; call qword ptr [rax]
0x00000000001667a1 : ja 0x166795 ; inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x00000000001667a4 : ja 0x166796 ; call qword ptr [rax]
0x00000000001767a4 : ja 0x17672b ; ret 0x48f
0x0000000000186815 : ja 0x186814 ; jmp qword ptr [rax]
0x0000000000195d25 : ja 0x195d16 ; jmp qword ptr [rdx]
0x0000000000195d6d : ja 0x195d5e ; jmp qword ptr [rdx]
0x00000000001a0a7c : ja 0x1a0af5 ; int1 ; jmp qword ptr [rdx]
0x00000000001a0fcc : ja 0x1a104d ; int1 ; jmp qword ptr [rdx]
0x00000000001ad05c : ja 0x1ad0d9 ; cmc ; jmp qword ptr [rdx]
0x00000000001b5db5 : ja 0x1b5dbf ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001b5db4 : ja 0x1b5dc0 ; add al, bl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000002f92d : ja 0x2f948 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000036ccf : ja 0x36ced ; ret
0x0000000000036f96 : ja 0x36f9d ; ret
0x0000000000036ff2 : ja 0x36ff9 ; ret
0x000000000003702c : ja 0x37031 ; ret
0x00000000000370b2 : ja 0x370b9 ; ret
0x0000000000038c1e : ja 0x38c70 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000000389a : ja 0x38fc ; clc ; salc ; jb 0x3922 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004f2b7 : ja 0x4f29d ; mov eax, r8d ; ret
0x000000000005dc96 : ja 0x5dc9d ; ret
0x000000000006e802 : ja 0x6e866 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000072576 : ja 0x7257a ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000072575 : ja 0x725f4 ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000754b6 : ja 0x754c3 ; ret
0x000000000008c5f8 : ja 0x8c603 ; ret
0x0000000000091788 : ja 0x91782 ; ret 0x7401
0x00000000000941bd : ja 0x9419e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009800c : ja 0x98025 ; mov rax, rdi ; ret
0x000000000009cf17 : ja 0x9cf1d ; ret
0x000000000009cf33 : ja 0x9cf3d ; mov dword ptr [rdi], ecx ; ret
0x000000000009cf74 : ja 0x9cf83 ; mov qword ptr [rdi], rcx ; ret
0x000000000009cff9 : ja 0x9d00d ; ret
0x000000000009d04f : ja 0x9d067 ; ret
0x000000000009d0d1 : ja 0x9d0ed ; ret
0x000000000009e517 : ja 0x9e521 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e533 : ja 0x9e541 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e584 : ja 0x9e597 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e669 : ja 0x9e681 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e6df : ja 0x9e6fb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e761 : ja 0x9e781 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009fff7 : ja 0x9fffd ; ret
0x00000000000a0013 : ja 0xa001d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0054 : ja 0xa0063 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a00d9 : ja 0xa00ed ; ret
0x00000000000a012f : ja 0xa0147 ; ret
0x00000000000a01b1 : ja 0xa01cd ; ret
0x00000000000a0ac7 : ja 0xa0acd ; ret
0x00000000000a0ae3 : ja 0xa0aed ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0b24 : ja 0xa0b33 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0ba9 : ja 0xa0bbd ; ret
0x00000000000a0bff : ja 0xa0c17 ; ret
0x00000000000a0c81 : ja 0xa0c9d ; ret
0x000000000000a1d8 : ja 0xa1e4 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret
0x00000000000a2009 : ja 0xa2029 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a387a : ja 0xa388a ; cmove rax, rcx ; ret
0x00000000000be087 : ja 0xbe08c ; ret
0x00000000000c0ab8 : ja 0xc0abd ; ret
0x00000000000c0b52 : ja 0xc0b57 ; ret
0x00000000000c0c41 : ja 0xc0c46 ; ret
0x00000000000c133d : ja 0xc1344 ; ret
0x00000000000c1ee9 : ja 0xc1eee ; ret
0x00000000000c1f49 : ja 0xc1f4e ; ret
0x00000000000c219d : ja 0xc21a2 ; ret
0x00000000000c220d : ja 0xc2212 ; ret
0x00000000000cb85e : ja 0xcb7f4 ; pop rbx ; pop rbp ; ret
0x00000000000cb85d : ja 0xcb7f5 ; pop rbx ; pop rbp ; ret
0x00000000000cb892 : ja 0xcb883 ; ret
0x00000000000e4641 : ja 0xe464b ; xor eax, eax ; ret
0x00000000000eb1ab : ja 0xeb1c7 ; ret
0x00000000000eb1fa : ja 0xeb217 ; ret
0x00000000000eb24b : ja 0xeb267 ; ret
0x00000000000eb2a3 : ja 0xeb2c7 ; ret
0x00000000000eb307 : ja 0xeb327 ; ret
0x00000000000eb360 : ja 0xeb37f ; ret
0x00000000000eb55f : ja 0xeb566 ; ret
0x00000000000eb5f2 : ja 0xeb5f9 ; ret
0x00000000000eb6c6 : ja 0xeb6cd ; ret
0x00000000000eb70f : ja 0xeb74d ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ebbef : ja 0xebc65 ; ret
0x00000000000ec9a8 : ja 0xec9af ; ret
0x00000000000ecf99 : ja 0xecfa0 ; ret
0x00000000000ecff0 : ja 0xecff7 ; ret
0x00000000000ed053 : ja 0xed05c ; cdqe ; ret
0x00000000000ed0b3 : ja 0xed0ba ; ret
0x00000000000ed19f : ja 0xed20d ; add rsp, 0x38 ; ret
0x00000000000ed468 : ja 0xed46f ; ret
0x00000000000ed4bc : ja 0xed4c3 ; ret
0x00000000000efe03 : ja 0xefe18 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000f0690 : ja 0xf0695 ; ret
0x00000000000f0ba6 : ja 0xf0bab ; ret
0x00000000000f1236 : ja 0xf1243 ; ret
0x00000000000f137d : ja 0xf1382 ; ret
0x00000000000f141d : ja 0xf1422 ; ret
0x00000000000f199b : ja 0xf19a0 ; ret
0x00000000000f199b : ja 0xf19a4 ; ret
0x00000000000f1a0b : ja 0xf1a10 ; ret
0x00000000000f1a88 : ja 0xf1a8d ; ret
0x00000000000f1a88 : ja 0xf1a92 ; ret
0x00000000000f1b28 : ja 0xf1b2d ; ret
0x00000000000f1b28 : ja 0xf1b32 ; ret
0x00000000000f1e21 : ja 0xf1e9a ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000f205c : ja 0xf2063 ; ret
0x00000000000f303d : ja 0xf3044 ; ret
0x00000000000f30c9 : ja 0xf30ef ; ret
0x00000000000f3161 : ja 0xf3187 ; ret
0x00000000000f31b5 : ja 0xf31bc ; ret
0x00000000000f3259 : ja 0xf3265 ; ret
0x00000000000f7957 : ja 0xf7977 ; ret
0x00000000000fa3f3 : ja 0xfa3fc ; pop rbx ; pop rbp ; ret
0x00000000000fa656 : ja 0xfa65b ; ret
0x00000000000fa7ae : ja 0xfa808 ; cmp edx, 0xff ; je 0xfa7c8 ; ret
0x00000000000fb393 : ja 0xfb398 ; ret
0x00000000000fb503 : ja 0xfb508 ; ret
0x00000000000fbacd : ja 0xfbad2 ; ret
0x00000000000fbb6f : ja 0xfbb74 ; ret
0x00000000000fbc1f : ja 0xfbc24 ; ret
0x00000000000022cf : ja 0xffffffffd6104b5b ; ret
0x0000000000132e90 : jae 0x132e95 ; ret
0x0000000000132ee0 : jae 0x132ee5 ; ret
0x0000000000136034 : jae 0x136017 ; mov eax, 1 ; ret
0x000000000016557e : jae 0x16558d ; call qword ptr [rbx]
0x000000000016557e : jae 0x165591 ; call qword ptr [rbx]
0x0000000000166057 : jae 0x166074 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000174d62 : jae 0x174d44 ; jo 0x174de0 ; mov ebp, 0xfb67d10d ; ret
0x0000000000175bfe : jae 0x175bd9 ; push rsi ; pop rdx ; je 0x175bce ; ret 0xacfc
0x000000000018d20d : jae 0x18d217 ; add ah, bl ; clc ; call rsp
0x000000000019598d : jae 0x19597e ; jmp qword ptr [rdx]
0x00000000001959d5 : jae 0x1959c6 ; jmp qword ptr [rdx]
0x000000000019b8e4 : jae 0x19b933 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0b75 : jae 0x1a0b6a ; jmp qword ptr [rdx]
0x00000000001a5521 : jae 0x1a5519 ; jmp qword ptr [rcx]
0x00000000001a5539 : jae 0x1a5531 ; jmp qword ptr [rcx]
0x0000000000036fbd : jae 0x36fc2 ; ret
0x000000000003757d : jae 0x37582 ; ret
0x00000000000471c7 : jae 0x471d0 ; xor eax, eax ; ret
0x000000000005dc5d : jae 0x5dc62 ; ret
0x0000000000074871 : jae 0x747cb ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000007b2d3 : jae 0x7b28a ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007ccdb : jae 0x7cd05 ; movzx eax, byte ptr [rax] ; ret
0x0000000000086bde : jae 0x86bee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a38e9 : jae 0xa38f5 ; or al, 0 ; ret
0x00000000000a4a03 : jae 0xa4a3b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b152d : jae 0xb1532 ; ret
0x00000000000b437d : jae 0xb4382 ; ret
0x00000000000b43ad : jae 0xb43b2 ; ret
0x00000000000c0a0d : jae 0xc0a12 ; ret
0x00000000000c0c00 : jae 0xc0c05 ; ret
0x00000000000c0cdd : jae 0xc0ce2 ; ret
0x00000000000c0ec6 : jae 0xc0efb ; ret
0x00000000000c0f26 : jae 0xc0f5b ; ret
0x00000000000c12b7 : jae 0xc12bc ; ret
0x00000000000c1ead : jae 0xc1eb2 ; ret
0x00000000000c203d : jae 0xc2042 ; ret
0x00000000000c206d : jae 0xc2072 ; ret
0x00000000000c20cd : jae 0xc20d2 ; ret
0x00000000000c20fd : jae 0xc2102 ; ret
0x00000000000c212d : jae 0xc2132 ; ret
0x00000000000c215d : jae 0xc2162 ; ret
0x00000000000cb33d : jae 0xcb342 ; ret
0x00000000000cb36d : jae 0xcb372 ; ret
0x00000000000cb39d : jae 0xcb3a2 ; ret
0x00000000000cb3cd : jae 0xcb3d2 ; ret
0x00000000000cb3fd : jae 0xcb402 ; ret
0x00000000000cb42d : jae 0xcb432 ; ret
0x00000000000cb45d : jae 0xcb462 ; ret
0x00000000000cb48d : jae 0xcb492 ; ret
0x00000000000cb6a9 : jae 0xcb6e1 ; ret
0x00000000000cb709 : jae 0xcb741 ; ret
0x00000000000eb0ea : jae 0xeb0f3 ; mov eax, edx ; ret
0x00000000000eb10d : jae 0xeb112 ; ret
0x00000000000eb39d : jae 0xeb3a2 ; ret
0x00000000000eb3cd : jae 0xeb3d2 ; ret
0x00000000000eb4ed : jae 0xeb4f2 ; ret
0x00000000000eb51d : jae 0xeb522 ; ret
0x00000000000eb5bd : jae 0xeb5c2 ; ret
0x00000000000eb626 : jae 0xeb65b ; ret
0x00000000000eb816 : jae 0xeb84b ; ret
0x00000000000eb876 : jae 0xeb8ab ; ret
0x00000000000eb8cd : jae 0xeb8d2 ; ret
0x00000000000ebe1d : jae 0xebe22 ; ret
0x00000000000ebf66 : jae 0xebf9b ; ret
0x00000000000ebfbd : jae 0xebfc2 ; ret
0x00000000000ebfed : jae 0xebff2 ; ret
0x00000000000ec01d : jae 0xec022 ; ret
0x00000000000ec04d : jae 0xec052 ; ret
0x00000000000ec07d : jae 0xec082 ; ret
0x00000000000ec0b6 : jae 0xec0eb ; ret
0x00000000000ec10d : jae 0xec112 ; ret
0x00000000000ec13d : jae 0xec142 ; ret
0x00000000000ec90d : jae 0xec912 ; ret
0x00000000000ec93d : jae 0xec942 ; ret
0x00000000000ec96d : jae 0xec972 ; ret
0x00000000000ecf5d : jae 0xecf62 ; ret
0x00000000000ecfbd : jae 0xecfc2 ; ret
0x00000000000ed01d : jae 0xed022 ; ret
0x00000000000ed07d : jae 0xed082 ; ret
0x00000000000ed0dd : jae 0xed0e2 ; ret
0x00000000000ed116 : jae 0xed14b ; ret
0x00000000000ed430 : jae 0xed435 ; ret
0x00000000000f0629 : jae 0xf0661 ; ret
0x00000000000f0d5d : jae 0xf0d62 ; ret
0x00000000000f0d8d : jae 0xf0d92 ; ret
0x00000000000f0dbd : jae 0xf0dc2 ; ret
0x00000000000f117d : jae 0xf1182 ; ret
0x00000000000f133d : jae 0xf1342 ; ret
0x00000000000f1cad : jae 0xf1cb2 ; ret
0x00000000000f1d4d : jae 0xf1d52 ; ret
0x00000000000f1d89 : jae 0xf1dc1 ; ret
0x00000000000f1ecd : jae 0xf1ed2 ; ret
0x00000000000f1efd : jae 0xf1f02 ; ret
0x00000000000f1f36 : jae 0xf1f6b ; ret
0x00000000000f1f8d : jae 0xf1f92 ; ret
0x00000000000f1fc6 : jae 0xf1ffb ; ret
0x00000000000f201d : jae 0xf2022 ; ret
0x00000000000f22dd : jae 0xf22e2 ; ret
0x00000000000f230d : jae 0xf2312 ; ret
0x00000000000f233d : jae 0xf2342 ; ret
0x00000000000f31ed : jae 0xf31f2 ; ret
0x00000000000f321d : jae 0xf3222 ; ret
0x00000000000f485f : jae 0xf4864 ; ret
0x00000000000f49d0 : jae 0xf49d5 ; ret
0x00000000000f49fd : jae 0xf4a02 ; ret
0x00000000000f4a2d : jae 0xf4a32 ; ret
0x00000000000f4a66 : jae 0xf4a9b ; ret
0x00000000000f4abd : jae 0xf4ac2 ; ret
0x00000000000f4aed : jae 0xf4af2 ; ret
0x00000000000f4b20 : jae 0xf4b25 ; ret
0x00000000000f4b4d : jae 0xf4b52 ; ret
0x00000000000f4b7d : jae 0xf4b82 ; ret
0x00000000000f4bad : jae 0xf4bb2 ; ret
0x00000000000f4bdd : jae 0xf4be2 ; ret
0x00000000000f8160 : jae 0xf8165 ; ret
0x00000000000f818d : jae 0xf8192 ; ret
0x00000000000f81bd : jae 0xf81c2 ; ret
0x00000000000f81f0 : jae 0xf81f5 ; ret
0x00000000000f8220 : jae 0xf8225 ; ret
0x00000000000f824d : jae 0xf8252 ; ret
0x00000000000f8280 : jae 0xf8285 ; ret
0x00000000000f82ad : jae 0xf82b2 ; ret
0x00000000000f82dd : jae 0xf82e2 ; ret
0x00000000000f8310 : jae 0xf8315 ; ret
0x00000000000f833d : jae 0xf8342 ; ret
0x00000000000f8370 : jae 0xf8375 ; ret
0x00000000000fa35d : jae 0xfa362 ; ret
0x00000000000fa38d : jae 0xfa392 ; ret
0x00000000000fa4b6 : jae 0xfa4eb ; ret
0x00000000000fa51d : jae 0xfa522 ; ret
0x00000000000fa54d : jae 0xfa552 ; ret
0x00000000000fa57d : jae 0xfa582 ; ret
0x00000000000fa5ad : jae 0xfa5b2 ; ret
0x00000000000fa870 : jae 0xfa875 ; ret
0x00000000000fa89d : jae 0xfa8a2 ; ret
0x00000000000fa8cd : jae 0xfa8d2 ; ret
0x00000000000fa910 : jae 0xfa915 ; ret
0x00000000000fa93d : jae 0xfa942 ; ret
0x00000000000fa96d : jae 0xfa972 ; ret
0x00000000000fa99d : jae 0xfa9a2 ; ret
0x00000000000fa9cd : jae 0xfa9d2 ; ret
0x00000000000fa9fd : jae 0xfaa02 ; ret
0x00000000000faa2d : jae 0xfaa32 ; ret
0x00000000000faa5d : jae 0xfaa62 ; ret
0x00000000000faa8d : jae 0xfaa92 ; ret
0x00000000000faac0 : jae 0xfaac5 ; ret
0x00000000000faaf9 : jae 0xfab31 ; ret
0x00000000000fab4d : jae 0xfab52 ; ret
0x00000000000fab80 : jae 0xfab85 ; ret
0x00000000000fabad : jae 0xfabb2 ; ret
0x00000000000fabdd : jae 0xfabe2 ; ret
0x00000000000fac0d : jae 0xfac12 ; ret
0x00000000000fac3d : jae 0xfac42 ; ret
0x00000000000fac6d : jae 0xfac72 ; ret
0x00000000000faca0 : jae 0xfaca5 ; ret
0x00000000000facd0 : jae 0xfacd5 ; ret
0x00000000000facfd : jae 0xfad02 ; ret
0x00000000000fad2d : jae 0xfad32 ; ret
0x00000000000fad5d : jae 0xfad62 ; ret
0x00000000000fad90 : jae 0xfad95 ; ret
0x00000000000fadc0 : jae 0xfadc5 ; ret
0x00000000000fadf0 : jae 0xfadf5 ; ret
0x00000000000fae29 : jae 0xfae61 ; ret
0x00000000000fae7d : jae 0xfae82 ; ret
0x00000000000faeb9 : jae 0xfaef1 ; ret
0x00000000000faf0d : jae 0xfaf12 ; ret
0x00000000000faf3d : jae 0xfaf42 ; ret
0x00000000000faf79 : jae 0xfafb1 ; ret
0x00000000000fafcd : jae 0xfafd2 ; ret
0x00000000000fb000 : jae 0xfb005 ; ret
0x00000000000fb02d : jae 0xfb032 ; ret
0x00000000000fb05d : jae 0xfb062 ; ret
0x00000000000fb090 : jae 0xfb095 ; ret
0x00000000000fb0c6 : jae 0xfb0fb ; ret
0x00000000000fb11d : jae 0xfb122 ; ret
0x00000000000fb150 : jae 0xfb155 ; ret
0x00000000000fb180 : jae 0xfb185 ; ret
0x00000000000fb1d6 : jae 0xfb20b ; ret
0x00000000000fb22d : jae 0xfb232 ; ret
0x00000000000fb266 : jae 0xfb29b ; ret
0x00000000000fb2bd : jae 0xfb2c2 ; ret
0x00000000000fb2ed : jae 0xfb2f2 ; ret
0x00000000000fb320 : jae 0xfb325 ; ret
0x00000000000fb34d : jae 0xfb352 ; ret
0x00000000000fb439 : jae 0xfb471 ; ret
0x00000000000fb496 : jae 0xfb4cb ; ret
0x00000000000fb5a6 : jae 0xfb5db ; ret
0x00000000000fb609 : jae 0xfb641 ; ret
0x00000000000fb660 : jae 0xfb665 ; ret
0x00000000000fb68d : jae 0xfb692 ; ret
0x00000000000fb6bd : jae 0xfb6c2 ; ret
0x00000000000fb6f0 : jae 0xfb6f5 ; ret
0x00000000000fbd79 : jae 0xfbdb1 ; ret
0x00000000000fbdd9 : jae 0xfbe11 ; ret
0x00000000000fbe2d : jae 0xfbe32 ; ret
0x00000000000fbe5d : jae 0xfbe62 ; ret
0x00000000000fbe8d : jae 0xfbe92 ; ret
0x00000000000fbebd : jae 0xfbec2 ; ret
0x00000000000fbef0 : jae 0xfbef5 ; ret
0x00000000000fbf20 : jae 0xfbf25 ; ret
0x00000000000fbf4d : jae 0xfbf52 ; ret
0x00000000000fbf7d : jae 0xfbf82 ; ret
0x00000000000fbfad : jae 0xfbfb2 ; ret
0x00000000000fbfdd : jae 0xfbfe2 ; ret
0x0000000000117f98 : jb 0x117f8b ; mov eax, 0xffffffff ; ret
0x0000000000117f97 : jb 0x117f8c ; mov eax, 0xffffffff ; ret
0x0000000000121d11 : jb 0x121d35 ; ret
0x0000000000121d0b : jb 0x121d3d ; ja 0x121d00 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014321a : jb 0x14322a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014336a : jb 0x14337a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001434ba : jb 0x1434ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014360a : jb 0x14361a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014375a : jb 0x14376a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001438aa : jb 0x1438ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001439fa : jb 0x143a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143b4a : jb 0x143b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143c9a : jb 0x143caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143dea : jb 0x143dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143f3a : jb 0x143f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014408a : jb 0x14409a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001441da : jb 0x1441ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014432a : jb 0x14433a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014447a : jb 0x14448a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145bea : jb 0x145bfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145d3a : jb 0x145d4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145e8a : jb 0x145e9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145fda : jb 0x145fea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014612a : jb 0x14613a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014627a : jb 0x14628a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001463ca : jb 0x1463da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014651a : jb 0x14652a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014666a : jb 0x14667a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001467ba : jb 0x1467ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014690a : jb 0x14691a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a5a : jb 0x146a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146baa : jb 0x146bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146cfa : jb 0x146d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146e4a : jb 0x146e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001485ba : jb 0x1485ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014870a : jb 0x14871a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014885a : jb 0x14886a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001489aa : jb 0x1489ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148afa : jb 0x148b0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148c4a : jb 0x148c5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148d9a : jb 0x148daa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148eea : jb 0x148efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014903a : jb 0x14904a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014918a : jb 0x14919a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001492da : jb 0x1492ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014942a : jb 0x14943a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014957a : jb 0x14958a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001496ca : jb 0x1496da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014981a : jb 0x14982a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001655af : jb 0x1655a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000166069 : jb 0x166068 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000177581 : jb 0x177577 ; call qword ptr [rax - 0x2f00118e]
0x0000000000177585 : jb 0x177577 ; call rax
0x000000000017758d : jb 0x177583 ; lcall ptr [rax + 0x71] ; out dx, al ; call rax
0x0000000000177595 : jb 0x177587 ; call rax
0x0000000000177599 : jb 0x17758b ; call qword ptr [rax]
0x000000000017759d : jb 0x17758f ; call rax
0x00000000001775a1 : jb 0x177593 ; call rax
0x00000000001775a5 : jb 0x177597 ; call rax
0x00000000001775a9 : jb 0x17759b ; call rax
0x00000000001775ad : jb 0x17759f ; call rax
0x00000000001775b5 : jb 0x1775a7 ; call rax
0x00000000001775b1 : jb 0x1775a7 ; push qword ptr [rax] ; jb 0x1775ab ; call rax
0x00000000001775b9 : jb 0x1775ab ; call rax
0x00000000001775bd : jb 0x1775af ; call rax
0x00000000001775c1 : jb 0x1775b3 ; call rax
0x00000000001775c5 : jb 0x1775b7 ; call rax
0x00000000001775c9 : jb 0x1775bb ; call rax
0x00000000001775cd : jb 0x1775bf ; call rax
0x00000000001775d1 : jb 0x1775c3 ; call rax
0x00000000001775d5 : jb 0x1775c7 ; call rax
0x00000000001775d9 : jb 0x1775cb ; call rax
0x00000000001775dd : jb 0x1775cf ; call rax
0x0000000000178579 : jb 0x17856e ; call qword ptr [rax]
0x0000000000186805 : jb 0x186804 ; jmp rax
0x0000000000187328 : jb 0x187382 ; cld ; jmp rdx
0x00000000001877f8 : jb 0x18777e ; cld ; jmp rdx
0x000000000018adb9 : jb 0x18adb0 ; jmp rsp
0x000000000019584d : jb 0x19583e ; jmp qword ptr [rdx]
0x00000000001ab68d : jb 0x1ab696 ; add byte ptr [rax - 0x1f], dl ; cmc ; call qword ptr [rcx]
0x00000000001acd55 : jb 0x1acd4e ; jmp qword ptr [rdx]
0x00000000001ad5b4 : jb 0x1ad635 ; cmc ; jmp qword ptr [rdx]
0x0000000000002b5c : jb 0x2afc ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002f8fe : jb 0x2f90b ; ret
0x000000000000389e : jb 0x391e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000751ec : jb 0x751e5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000783b5 : jb 0x783db ; mov dword ptr [rcx], eax ; ret
0x000000000009ee8a : jb 0x9ee99 ; add byte ptr [rax], al ; ret
0x00000000000d1ec5 : jb 0xd1e39 ; pop rbx ; ret
0x00000000000d1e5d : jb 0xd1e57 ; ret 0x7408
0x0000000000110ec7 : jbe 0x110e3b ; xor eax, eax ; pop rbx ; ret
0x0000000000121343 : jbe 0x121357 ; mov eax, 2 ; ret
0x0000000000186811 : jbe 0x186810 ; call rax
0x0000000000195cdd : jbe 0x195cce ; jmp qword ptr [rdx]
0x00000000001a5cbd : jbe 0x1a5cc6 ; add byte ptr [rax - 0x56], ah ; hlt ; call qword ptr [rbx]
0x0000000000002beb : jbe 0x2bbf ; clc ; ret
0x000000000004759b : jbe 0x47611 ; xor eax, eax ; ret
0x000000000004978c : jbe 0x49788 ; nop ; mov rax, rsi ; pop rbx ; ret
0x000000000004e5c7 : jbe 0x4a48d ; jmp 0x4a80b
0x00000000000868cc : jbe 0x86909 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000088b49 : jbe 0x88b98 ; bsf eax, edx ; ret
0x000000000008bf16 : jbe 0x8bf55 ; add rax, rdi ; ret
0x000000000008bf26 : jbe 0x8bf57 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008bf36 : jbe 0x8bf57 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008bf46 : jbe 0x8bf57 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000917f3 : jbe 0x9180e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x917e9 ; ret
0x0000000000098469 : jbe 0x98463 ; ret 0xf10
0x000000000009a089 : jbe 0x9a083 ; ret 0xf10
0x00000000000a4727 : jbe 0xa475f ; add byte ptr [rax + 0x39], cl ; ret
0x000000000000d050 : jbe 0xd05a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x00000000000e4f68 : jbe 0xe4f73 ; ret
0x00000000000f6cab : jbe 0xf6ce1 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f6e26 : jbe 0xf6e01 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001025f5 : je 0x102604 ; xor eax, eax ; ret
0x0000000000103e56 : je 0x103e87 ; mov eax, r9d ; sub eax, edx ; ret
0x00000000001064a3 : je 0x1064b7 ; mov eax, 7 ; ret
0x00000000001064c1 : je 0x1064e9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001064d0 : je 0x106534 ; xor eax, eax ; pop rbx ; ret
0x0000000000107aed : je 0x107afb ; ret
0x0000000000108199 : je 0x10819e ; ret
0x00000000001081fd : je 0x108202 ; ret
0x000000000010861a : je 0x108623 ; ret
0x0000000000108a92 : je 0x108aa4 ; lea rax, qword ptr [rip + 0x42045] ; ret
0x0000000000108b32 : je 0x108b44 ; lea rax, qword ptr [rip + 0x44a75] ; ret
0x000000000010a0ac : je 0x10a0be ; add rsp, 8 ; ret
0x000000000010c598 : je 0x10c604 ; sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x000000000010c7db : je 0x10c813 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x000000000011157f : je 0x11158b ; mov rdi, rbx ; call rax
0x0000000000111866 : je 0x111872 ; mov rdi, rbx ; call rax
0x0000000000111943 : je 0x111957 ; lea rdi, qword ptr [rip + 0x2b15d4] ; call rax
0x0000000000114663 : je 0x11465b ; pop rbx ; ret
0x000000000011496f : je 0x11499a ; cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x0000000000117873 : je 0x11785c ; mov eax, 0xffffffff ; ret
0x0000000000117872 : je 0x11785d ; mov eax, 0xffffffff ; ret
0x0000000000117c93 : je 0x117be2 ; ret
0x0000000000117c92 : je 0x117be3 ; ret
0x0000000000117d79 : je 0x117cc3 ; nop ; ret
0x0000000000117d78 : je 0x117cc4 ; nop ; ret
0x000000000011be22 : je 0x11be2a ; ret
0x000000000011ee83 : je 0x11ee8f ; mov rdi, rsp ; call rax
0x000000000011ef5e : je 0x11ef6a ; mov rdi, rsp ; call rax
0x000000000011f619 : je 0x11f646 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000011f817 : je 0x11f823 ; mov rdi, rbp ; call rax
0x000000000011fbe8 : je 0x11fbf2 ; ret
0x00000000001208b5 : je 0x1208c1 ; mov rdi, r14 ; call rax
0x0000000000120b33 : je 0x120b3f ; mov rdi, rbx ; call rax
0x00000000001213e6 : je 0x1213f2 ; mov rdi, r12 ; call rdx
0x0000000000121883 : je 0x12196b ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000123c02 : je 0x123c16 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001245dd : je 0x1245e9 ; mov rdi, r12 ; call rax
0x00000000001247bb : je 0x1247c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000125259 : je 0x125266 ; add rsp, 0x48 ; ret
0x0000000000126973 : je 0x126891 ; mov rdi, rbx ; call rax
0x00000000001268a7 : je 0x1268b3 ; mov rdi, rbp ; call rdx
0x00000000001269b3 : je 0x1269c7 ; mov eax, 1 ; ret
0x0000000000126a98 : je 0x126aa4 ; mov rdi, rbp ; call rax
0x0000000000126cb8 : je 0x126cc4 ; mov rdi, rbp ; call rax
0x00000000001277df : je 0x1277ed ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127e9e : je 0x127eaa ; mov rdi, r12 ; call rax
0x000000000012820f : je 0x12821d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012acee : je 0x12acc8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012acbf : je 0x12accb ; pop rbx ; ret
0x000000000012ad2b : je 0x12acdf ; pop rbx ; ret
0x000000000012ad63 : je 0x12ad76 ; add rsp, 8 ; ret
0x000000000012b98b : je 0x12b992 ; ret
0x000000000012ba6b : je 0x12ba79 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012c174 : je 0x12c182 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012d1fd : je 0x12d268 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d2bd : je 0x12d328 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d37d : je 0x12d3e8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012d43d : je 0x12d4a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012e3b4 : je 0x12e3c3 ; ret
0x0000000000130738 : je 0x130744 ; xor eax, eax ; ret
0x0000000000133101 : je 0x133116 ; add rsp, 8 ; ret
0x00000000001331d7 : je 0x1331ec ; mov rdi, r12 ; call 0x1f477
0x000000000013701c : je 0x137000 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001375e3 : je 0x1375ad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001382b5 : je 0x1382bd ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001383b3 : je 0x13837d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013929a : je 0x1392a2 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001393f3 : je 0x1393bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013afc3 : je 0x13af8d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013cff4 : je 0x13cfd8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013d2d3 : je 0x13d29d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013e963 : je 0x13e92d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001613f7 : je 0x161401 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000165046 : je 0x16504c ; call rdx
0x000000000016514f : je 0x16515a ; call rdx
0x0000000000174ec8 : je 0x174e93 ; xor al, 0xd8 ; ret
0x0000000000175107 : je 0x175104 ; jmp 0x1750de
0x0000000000175c02 : je 0x175bca ; ret 0xacfc
0x00000000001873e0 : je 0x18743b ; cld ; jmp rsp
0x0000000000187db8 : je 0x187d64 ; cld ; jmp rsp
0x0000000000188840 : je 0x188856 ; jmp 0x188846
0x0000000000188898 : je 0x1888bc ; jmp 0x18889e
0x00000000001889b0 : je 0x1889ff ; jmp 0x1889bb
0x000000000018937c : je 0x18936a ; add byte ptr [rax], al ; out -0x77, eax ; out dx, al ; jmp rsp
0x00000000001893e4 : je 0x1893d4 ; add byte ptr [rax], al ; adc al, 0x8e ; out dx, al ; jmp rsp
0x0000000000189628 : je 0x1895dd ; out dx, al ; call rsp
0x0000000000189820 : je 0x1897fc ; out dx, al ; call rsp
0x000000000018b140 : je 0x18b179 ; hlt ; jmp rsp
0x000000000018c7e8 : je 0x18c7ee ; clc ; jmp rsp
0x0000000000195aed : je 0x195ade ; jmp qword ptr [rdx]
0x0000000000195b35 : je 0x195b26 ; jmp qword ptr [rdx]
0x0000000000195b7d : je 0x195b6e ; jmp qword ptr [rdx]
0x0000000000195cdc : je 0x195d57 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001966c4 : je 0x19664d ; add byte ptr [rax], al ; test al, 0xa5 ; in eax, dx ; jmp rbx
0x000000000019edc4 : je 0x19edd4 ; add dword ptr [rax], eax ; fcomp dword ptr [rbp - 0x10] ; call qword ptr [rdx]
0x00000000001a08cd : je 0x1a08c2 ; jmp qword ptr [rdx]
0x00000000001a0915 : je 0x1a090a ; jmp qword ptr [rdx]
0x00000000001a099d : je 0x1a0992 ; jmp qword ptr [rdx]
0x00000000001a09e5 : je 0x1a09da ; jmp qword ptr [rdx]
0x00000000001a0a7d : je 0x1a0a72 ; jmp qword ptr [rdx]
0x00000000001a0ac5 : je 0x1a0aba ; jmp qword ptr [rdx]
0x00000000001a0b2d : je 0x1a0b22 ; jmp qword ptr [rdx]
0x00000000001a25c4 : je 0x1a260c ; add dword ptr [rax], eax ; pop rax ; add dh, dl ; call rdi
0x00000000001a46c4 : je 0x1a472d ; add dword ptr [rax], eax ; sbb bh, dh ; jmp qword ptr [rax]
0x00000000001a5551 : je 0x1a5549 ; jmp qword ptr [rcx]
0x00000000001a56c4 : je 0x1a573d ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001a6dc4 : je 0x1a6d54 ; add dword ptr [rax], eax ; js 0x1a6dae ; hlt ; jmp qword ptr [rcx]
0x00000000001a76c4 : je 0x1a765d ; add dword ptr [rax], eax ; js 0x1a76dc ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ec4 : je 0x1a7e65 ; add dword ptr [rax], eax ; pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a87c4 : je 0x1a876e ; add dword ptr [rax], eax ; cmc ; jmp rdi
0x00000000001a9f7c : je 0x1a9f72 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa9c4 : je 0x1aa990 ; add dword ptr [rax], eax ; cmp bl, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000001cb2 : je 0x1cde ; ret
0x0000000000022021 : je 0x22049 ; add rsp, 8 ; ret
0x000000000002208a : je 0x22090 ; jmp rax
0x00000000000220ba : je 0x220c0 ; jmp rax
0x00000000000223e8 : je 0x22401 ; lea rax, qword ptr [rip + 0x3a180f] ; ret
0x0000000000027ea3 : je 0x27ed1 ; or byte ptr [rax - 0x75], cl ; je 0x27ed6 ; push rax ; call rax
0x0000000000027ea8 : je 0x27ed1 ; push rax ; call rax
0x000000000002ca92 : je 0x2ca5c ; pop rbx ; ret
0x000000000002d180 : je 0x2d186 ; call rax
0x000000000002d507 : je 0x2d50d ; call rcx
0x000000000002e7ab : je 0x2e7b1 ; call rax
0x0000000000034b15 : je 0x34b40 ; or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000035ad9 : je 0x35aee ; jmp 0x35aa2
0x0000000000036546 : je 0x36539 ; ret
0x00000000000368e6 : je 0x3688a ; ret
0x000000000005d5a6 : je 0x5d5b8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005dd5a : je 0x5dd63 ; ret
0x000000000006e4fa : je 0x6e511 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e59a : je 0x6e5b1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006ec94 : je 0x6eca6 ; mov rax, rdx ; pop rbx ; ret
0x000000000006fc97 : je 0x6fca2 ; call 0xebf5d
0x0000000000072b24 : je 0x72b36 ; mov rax, rdx ; pop rbx ; ret
0x00000000000730bb : je 0x730cd ; mov dword ptr [rdi], edx ; ret
0x00000000000733cc : je 0x733df ; mov eax, 0xffffffff ; ret
0x0000000000074260 : je 0x742b1 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007425f : je 0x742b2 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074f03 : je 0x74f16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074f33 : je 0x74f95 ; pop rbp ; pop r12 ; ret
0x000000000007514d : je 0x75158 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000075191 : je 0x7519c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000756c8 : je 0x756d7 ; mov eax, 0xffffffff ; ret
0x00000000000788ab : je 0x78851 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007892f : je 0x7893b ; pop rbx ; ret
0x000000000007b2b3 : je 0x7b270 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b403 : je 0x7b3c0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b57c : je 0x7b58e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007be74 : je 0x7be7f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d75c : je 0x7d594 ; ret
0x000000000007d682 : je 0x7d698 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007e675 : je 0x7e67b ; call rdx
0x000000000007eed5 : je 0x7eee6 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008091a : je 0x80946 ; sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x000000000008287c : je 0x828a8 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x00000000000834a6 : je 0x834d2 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000838b9 : je 0x838bf ; call rax
0x00000000000848ac : je 0x848b2 ; ret
0x00000000000848c5 : je 0x848d4 ; pop rbx ; ret
0x000000000008519e : je 0x85329 ; mov rsi, r14 ; call rax
0x0000000000086195 : je 0x86218 ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x0000000000086508 : je 0x86512 ; ret
0x0000000000086b04 : je 0x86b41 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000086b03 : je 0x86b42 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000086c52 : je 0x86c64 ; lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000086e3f : je 0x86e51 ; lea rax, qword ptr [rip + 0xdb688] ; ret
0x0000000000088532 : je 0x88544 ; lea rax, qword ptr [rip + 0xced15] ; ret
0x000000000008863f : je 0x88651 ; lea rax, qword ptr [rip + 0xb4818] ; ret
0x00000000000887c7 : je 0x887f0 ; movsx edx, sil ; mov eax, edx ; ret
0x00000000000888d2 : je 0x888df ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088afb : je 0x88b05 ; bsf eax, edx ; ret
0x0000000000088afb : je 0x88b06 ; bsf eax, edx ; ret
0x0000000000088ba4 : je 0x88bb5 ; bsf rax, rdx ; ret
0x0000000000088ba4 : je 0x88bb6 ; bsf rax, rdx ; ret
0x0000000000088b48 : je 0x88bc6 ; bsf rax, rdx ; ret
0x0000000000088d93 : je 0x88db5 ; bsf rax, rdx ; ret
0x0000000000088d93 : je 0x88db6 ; bsf rax, rdx ; ret
0x0000000000088d23 : je 0x88dc9 ; bsf rax, rdx ; ret
0x0000000000088ed2 : je 0x88ee4 ; lea rax, qword ptr [rip + 0x10f35] ; ret
0x000000000008a7b2 : je 0x8a7c4 ; lea rax, qword ptr [rip + 0xce245] ; ret
0x000000000008aacf : je 0x8aae1 ; lea rax, qword ptr [rip + 0xb24c8] ; ret
0x000000000008ae5f : je 0x8ae71 ; lea rax, qword ptr [rip + 0xb2258] ; ret
0x000000000008be0c : je 0x8be63 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008bf8c : je 0x8bf9f ; lea rax, qword ptr [rip + 0xd40cb] ; ret
0x000000000008c6f2 : je 0x8c704 ; lea rax, qword ptr [rip + 0xc0ec5] ; ret
0x000000000008cbe2 : je 0x8cbf4 ; lea rax, qword ptr [rip + 0xce995] ; ret
0x000000000008cd02 : je 0x8cd14 ; lea rax, qword ptr [rip + 0xd0085] ; ret
0x0000000000091719 : je 0x91731 ; cmp rsi, rcx ; jne 0x91711 ; xor eax, eax ; ret
0x0000000000091763 : je 0x91775 ; lea rax, qword ptr [rip + 0xb1464] ; ret
0x0000000000092c98 : je 0x92cb1 ; lea rax, qword ptr [rip - 0x511] ; ret
0x0000000000093022 : je 0x93036 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000093a4a : je 0x93aa1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000093b01 : je 0x93b19 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000093ff4 : je 0x94006 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096b9a : je 0x96b93 ; ret
0x0000000000096bb6 : je 0x96bab ; ret
0x0000000000096bb2 : je 0x96baf ; cmp ecx, edx ; je 0x96baf ; ret
0x0000000000096bde : je 0x96bcb ; ret
0x0000000000096bd9 : je 0x96bd0 ; cmp r8d, ecx ; je 0x96bd0 ; ret
0x0000000000096c0d : je 0x96c29 ; cmp eax, esi ; jne 0x96c09 ; mov rax, rdi ; ret
0x000000000009714c : je 0x97128 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097b1b : je 0x97adf ; mov byte ptr [r10 + 1], 0 ; ret
0x000000000009d219 : je 0x9d26a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009e8a6 : je 0x9e8f7 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a05ba : je 0xa060b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a1bbd : je 0xa1b86 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1b95 : je 0xa1b88 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a1bbd : je 0xa1b88 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1cf6 : je 0xa1d20 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a1d6f : je 0xa1d53 ; ret
0x00000000000a1db7 : je 0xa1d93 ; ret
0x00000000000a2d5f : je 0xa2d51 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2f99 : je 0xa2fb9 ; mov cl, dl ; and cl, 0xf ; je 0xa2fc9 ; ret
0x00000000000a2fa0 : je 0xa2fc2 ; ret
0x00000000000a2fb5 : je 0xa2fd6 ; add rax, 2 ; ret
0x00000000000a3112 : je 0xa30d9 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000a318a : je 0xa3149 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000000a35b6 : je 0xa3626 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a3877 : je 0xa3894 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000a38dc : je 0xa38ef ; lea rax, qword ptr [rip + 0xbddbb] ; ret
0x00000000000a5581 : je 0xa5593 ; mov edx, eax ; jmp 0xa5553
0x00000000000a7dc1 : je 0xa7dd3 ; mov edx, eax ; jmp 0xa7d93
0x00000000000aa471 : je 0xaa483 ; mov edx, eax ; jmp 0xaa443
0x00000000000b5230 : je 0xb5287 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000ba0b3 : je 0xba0c4 ; xor eax, eax ; ret
0x00000000000bd5d3 : je 0xbd606 ; mov rdi, r15 ; call r14
0x00000000000c0fbe : je 0xc0fc4 ; call rax
0x00000000000c1143 : je 0xc114d ; call rdx
0x00000000000c11cb : je 0xc11d5 ; call rax
0x00000000000c2799 : je 0xc27cf ; mov eax, 1 ; ret
0x00000000000c282b : je 0xc2857 ; mov eax, 1 ; ret
0x00000000000d0cf4 : je 0xd0d04 ; xor eax, eax ; ret
0x00000000000d1d4b : je 0xd1d9c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1ea8 : je 0xd1e35 ; pop rbx ; ret
0x00000000000d1fba : je 0xd1fc4 ; xor eax, eax ; ret
0x00000000000d1fb6 : je 0xd2018 ; cmp al, 0x11 ; je 0xd1fc8 ; xor eax, eax ; ret
0x00000000000d3dc2 : je 0xd3dd1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d4af1 : je 0xd4b05 ; xor eax, eax ; pop rbx ; ret
0x00000000000de939 : je 0xde94a ; mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xde90c
0x00000000000e3c84 : je 0xe3c64 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e41b2 : je 0xe41be ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4482 : je 0xe448e ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e461a : je 0xe4623 ; ret
0x00000000000e4d22 : je 0xe4d2b ; mov edx, eax ; jmp 0xe4d19
0x00000000000e5395 : je 0xe5373 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5e5e : je 0xe5e89 ; xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000ed3f3 : je 0xed40d ; neg eax ; pop rbx ; ret
0x00000000000f1bae : je 0xf1bb5 ; ret
0x00000000000f3283 : je 0xf328e ; mov qword ptr [rax], rdx ; ret
0x00000000000f3362 : je 0xf3357 ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f4798 : je 0xf47a9 ; mov dword ptr [rip + 0x2c9b10], edi ; ret
0x00000000000f4c53 : je 0xf4c5a ; pop rbx ; ret
0x00000000000f6270 : je 0xf6280 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f76ad : je 0xf774e ; call rax
0x00000000000f7824 : je 0xf7926 ; call rax
0x00000000000f7a08 : je 0xf7a19 ; lea rax, qword ptr [r12 - 1] ; jmp 0xf79dc
0x00000000000fa446 : je 0xfa44b ; ret
0x00000000000fa71e : je 0xfa72c ; pop rbx ; pop rbp ; ret
0x00000000000fa7b3 : je 0xfa7c3 ; ret
0x00000000000fbaa6 : je 0xfbab4 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fcbaa : je 0xfcbba ; add edx, 1 ; mov word ptr [rax], dx ; ret
0x00000000000fcdf9 : je 0xfce07 ; add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000ffc4e : je 0xffc5e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffc82 : je 0xffca0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001249c2 : jg 0x124a0c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1249d8 ; ret
0x000000000012748d : jg 0x127499 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012bc52 : jg 0x12bc9c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bc68 ; ret
0x0000000000144df9 : jg 0x144e4c ; ret
0x0000000000144e7f : jg 0x144eca ; ret
0x0000000000144ff9 : jg 0x14504c ; ret 0x894c
0x000000000014507f : jg 0x1450ca ; ret 0x894c
0x00000000001477c9 : jg 0x14781c ; ret
0x000000000014784f : jg 0x14789a ; ret
0x00000000001479c9 : jg 0x147a1c ; ret 0x894c
0x0000000000147a4f : jg 0x147a9a ; ret 0x894c
0x000000000014a199 : jg 0x14a1ec ; ret
0x000000000014a21f : jg 0x14a26a ; ret
0x000000000014a399 : jg 0x14a3ec ; ret 0x894c
0x000000000014a41f : jg 0x14a46a ; ret 0x894c
0x000000000014c768 : jg 0x14c7b9 ; loope 0x14c767 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c7df : jg 0x14c82a ; ret 0xff2
0x000000000014c7f8 : jg 0x14c849 ; loop 0x14c7f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c86f : jg 0x14c8ba ; ret
0x000000000014c888 : jg 0x14c8d9 ; jrcxz 0x14c887 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c918 : jg 0x14c969 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c998 : jg 0x14c9e9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ca18 : jg 0x14ca69 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014ca98 : jg 0x14cae9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014cb18 : jg 0x14cb69 ; call 0x4f93db1a
0x000000000014cb98 : jg 0x14cbe9 ; jmp 0x4f93db9a
0x000000000014cd18 : jg 0x14cd69 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cd98 : jg 0x14cde9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ce28 : jg 0x14ce79 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cea8 : jg 0x14cef9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cf1c : jg 0x14cf27 ; ret
0x000000000014cf76 : jg 0x14cf89 ; ret
0x000000000014cf71 : jg 0x14cfc1 ; psllq mm1, qword ptr [rdi] ; jg 0x14cf8e ; ret
0x000000000014cfe6 : jg 0x14cff9 ; ret
0x000000000014d056 : jg 0x14d069 ; ret
0x000000000014d051 : jg 0x14d0a1 ; or eax, 0xf7f0ff3 ; ret
0x000000000014d0c6 : jg 0x14d0d9 ; ret
0x000000000014d0c1 : jg 0x14d111 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d136 : jg 0x14d149 ; ret
0x000000000014d131 : jg 0x14d181 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d1a6 : jg 0x14d1b9 ; ret
0x000000000014d1a1 : jg 0x14d1f1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d216 : jg 0x14d229 ; ret
0x000000000014d211 : jg 0x14d261 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d286 : jg 0x14d299 ; ret
0x000000000014d281 : jg 0x14d2d1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d2f6 : jg 0x14d309 ; ret
0x000000000014d366 : jg 0x14d379 ; ret
0x000000000014d3d6 : jg 0x14d3e9 ; ret
0x000000000014d3d1 : jg 0x14d421 ; add eax, 0xf7f0ff3 ; ret
0x000000000014d446 : jg 0x14d459 ; ret
0x000000000014d441 : jg 0x14d491 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d4b6 : jg 0x14d4c9 ; ret
0x000000000014d4b1 : jg 0x14d501 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d526 : jg 0x14d539 ; ret
0x000000000014d521 : jg 0x14d571 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d596 : jg 0x14d5a9 ; ret
0x000000000014d591 : jg 0x14d5e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014f238 : jg 0x14f289 ; loope 0x14f237 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f2af : jg 0x14f2fa ; ret 0xff2
0x000000000014f2c8 : jg 0x14f319 ; loop 0x14f2c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f33f : jg 0x14f38a ; ret
0x000000000014f358 : jg 0x14f3a9 ; jrcxz 0x14f357 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f3e8 : jg 0x14f439 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f468 : jg 0x14f4b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f4e8 : jg 0x14f539 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f568 : jg 0x14f5b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f5e8 : jg 0x14f639 ; call 0x4f9405ea
0x000000000014f668 : jg 0x14f6b9 ; jmp 0x4f94066a
0x000000000014f7e8 : jg 0x14f839 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f868 : jg 0x14f8b9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f8f8 : jg 0x14f949 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f978 : jg 0x14f9c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014f9ec : jg 0x14f9f7 ; ret
0x000000000014fa46 : jg 0x14fa59 ; ret
0x000000000014fa41 : jg 0x14fa91 ; psllq mm1, qword ptr [rdi] ; jg 0x14fa5e ; ret
0x000000000014fab6 : jg 0x14fac9 ; ret
0x000000000014fb26 : jg 0x14fb39 ; ret
0x000000000014fb21 : jg 0x14fb71 ; or eax, 0xf7f0ff3 ; ret
0x000000000014fb96 : jg 0x14fba9 ; ret
0x000000000014fb91 : jg 0x14fbe1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fc06 : jg 0x14fc19 ; ret
0x000000000014fc01 : jg 0x14fc51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fc76 : jg 0x14fc89 ; ret
0x000000000014fc71 : jg 0x14fcc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fce6 : jg 0x14fcf9 ; ret
0x000000000014fce1 : jg 0x14fd31 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fd56 : jg 0x14fd69 ; ret
0x000000000014fd51 : jg 0x14fda1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fdc6 : jg 0x14fdd9 ; ret
0x000000000014fe36 : jg 0x14fe49 ; ret
0x000000000014fea6 : jg 0x14feb9 ; ret
0x000000000014fea1 : jg 0x14fef1 ; add eax, 0xf7f0ff3 ; ret
0x000000000014ff16 : jg 0x14ff29 ; ret
0x000000000014ff11 : jg 0x14ff61 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014ff86 : jg 0x14ff99 ; ret
0x000000000014ff81 : jg 0x14ffd1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fff6 : jg 0x150009 ; ret
0x000000000014fff1 : jg 0x150041 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150066 : jg 0x150079 ; ret
0x0000000000150061 : jg 0x1500b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000151d58 : jg 0x151da9 ; loope 0x151d57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151dcf : jg 0x151e1a ; ret 0xff2
0x0000000000151de8 : jg 0x151e39 ; loop 0x151de7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151e5f : jg 0x151eaa ; ret
0x0000000000151e78 : jg 0x151ec9 ; jrcxz 0x151e77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151f08 : jg 0x151f59 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151f88 : jg 0x151fd9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152008 : jg 0x152059 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152088 : jg 0x1520d9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000152108 : jg 0x152159 ; call 0x4f94310a
0x0000000000152188 : jg 0x1521d9 ; jmp 0x4f94318a
0x0000000000152308 : jg 0x152359 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152388 : jg 0x1523d9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152418 : jg 0x152469 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000152498 : jg 0x1524e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015250c : jg 0x152517 ; ret
0x0000000000152566 : jg 0x152579 ; ret
0x0000000000152561 : jg 0x1525b1 ; psllq mm1, qword ptr [rdi] ; jg 0x15257e ; ret
0x00000000001525d6 : jg 0x1525e9 ; ret
0x0000000000152646 : jg 0x152659 ; ret
0x0000000000152641 : jg 0x152691 ; or eax, 0xf7f0ff3 ; ret
0x00000000001526b6 : jg 0x1526c9 ; ret
0x00000000001526b1 : jg 0x152701 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152726 : jg 0x152739 ; ret
0x0000000000152721 : jg 0x152771 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152796 : jg 0x1527a9 ; ret
0x0000000000152791 : jg 0x1527e1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152806 : jg 0x152819 ; ret
0x0000000000152801 : jg 0x152851 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152876 : jg 0x152889 ; ret
0x0000000000152871 : jg 0x1528c1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001528e6 : jg 0x1528f9 ; ret
0x0000000000152956 : jg 0x152969 ; ret
0x00000000001529c6 : jg 0x1529d9 ; ret
0x00000000001529c1 : jg 0x152a11 ; add eax, 0xf7f0ff3 ; ret
0x0000000000152a36 : jg 0x152a49 ; ret
0x0000000000152a31 : jg 0x152a81 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152aa6 : jg 0x152ab9 ; ret
0x0000000000152aa1 : jg 0x152af1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152b16 : jg 0x152b29 ; ret
0x0000000000152b11 : jg 0x152b61 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000152b86 : jg 0x152b99 ; ret
0x0000000000152b81 : jg 0x152bd1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000164565 : jg 0x164574 ; neg eax ; ret
0x0000000000187789 : jg 0x187789 ; call qword ptr [rax]
0x000000000018778d : jg 0x187791 ; call qword ptr [rax + 0x10fffc7e]
0x0000000000187809 : jg 0x187809 ; jmp rdx
0x0000000000187985 : jg 0x187985 ; jmp qword ptr [rax]
0x0000000000187989 : jg 0x18798d ; jmp qword ptr [rax + 0x20fffc7e]
0x00000000001965dc : jg 0x19665d ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad6fd : jg 0x1ad6f6 ; jmp qword ptr [rdx]
0x00000000001b41c1 : jg 0x1b41bc ; call qword ptr [rdx]
0x000000000001fbe9 : jg 0x1fb7b ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000360cb : jg 0x3611d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000036544 : jg 0x3654a ; je 0x3653b ; ret
0x000000000003673a : jg 0x36740 ; add byte ptr [rcx], cl ; ret 0xd089
0x00000000000366d5 : jg 0x36756 ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000368e2 : jg 0x3692f ; or ecx, eax ; je 0x3688e ; ret
0x000000000004725b : jg 0x472c9 ; xor eax, eax ; ret
0x0000000000047366 : jg 0x47323 ; ret
0x0000000000049ad9 : jg 0x49ae4 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x0000000000060d31 : jg 0x60d3a ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000060d30 : jg 0x60d3b ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000730b7 : jg 0x73045 ; inc byte ptr [rdx] ; je 0x730d1 ; mov dword ptr [rdi], edx ; ret
0x000000000008c787 : jg 0x8c7a0 ; jne 0x8c777 ; mov rax, rdi ; ret
0x00000000000917f7 : jg 0x9180e ; jne 0x917e5 ; ret
0x0000000000092ce8 : jg 0x92cd3 ; ret
0x000000000009cfe6 : jg 0x9cff1 ; ret
0x000000000009cff6 : jg 0x9d004 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009d00a : jg 0x9d019 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d029 : jg 0x9d037 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d039 : jg 0x9d047 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009d049 : jg 0x9d05a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009d06a : jg 0x9d079 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009d08a : jg 0x9d099 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d0aa : jg 0x9d0b9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d0ca : jg 0x9d0dc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009d10d : jg 0x9d11f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d12d : jg 0x9d13f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d14b : jg 0x9d15b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d16b : jg 0x9d17b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d18b : jg 0x9d19b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009d1ab : jg 0x9d1bb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d738 : jg 0x9d743 ; jne 0x9dff8 ; ret
0x000000000009d75c : jg 0x9d768 ; jne 0x9dff8 ; ret
0x000000000009d77f : jg 0x9d78c ; jne 0x9dff8 ; ret
0x000000000009d79a : jg 0x9d7a8 ; jne 0x9dff8 ; ret
0x000000000009d7bd : jg 0x9d7cc ; jne 0x9dff8 ; ret
0x000000000009d7e2 : jg 0x9d7f2 ; jne 0x9dff8 ; ret
0x000000000009d800 : jg 0x9d811 ; jne 0x9dff8 ; ret
0x000000000009d81c : jg 0x9d82e ; jne 0x9dff8 ; ret
0x000000000009d83f : jg 0x9d852 ; jne 0x9dff8 ; ret
0x000000000009d864 : jg 0x9d878 ; jne 0x9dff8 ; ret
0x000000000009d882 : jg 0x9d897 ; jne 0x9dff8 ; ret
0x000000000009d8a2 : jg 0x9d8b8 ; jne 0x9dff8 ; ret
0x000000000009d8c4 : jg 0x9d8db ; jne 0x9dff8 ; ret
0x000000000009d8e4 : jg 0x9d8fc ; jne 0x9dff8 ; ret
0x000000000009d904 : jg 0x9d91d ; jne 0x9dff8 ; ret
0x000000000009d91e : jg 0x9d938 ; jne 0x9dff8 ; ret
0x000000000009d941 : jg 0x9d95c ; jne 0x9dff8 ; ret
0x000000000009d966 : jg 0x9d982 ; jne 0x9dff8 ; ret
0x000000000009d984 : jg 0x9d9a1 ; jne 0x9dff8 ; ret
0x000000000009d9a4 : jg 0x9d9c2 ; jne 0x9dff8 ; ret
0x000000000009d9c7 : jg 0x9d9e6 ; jne 0x9dff8 ; ret
0x000000000009d9e6 : jg 0x9da06 ; jne 0x9dff8 ; ret
0x000000000009da06 : jg 0x9da27 ; jne 0x9dff8 ; ret
0x000000000009da26 : jg 0x9da48 ; jne 0x9dff8 ; ret
0x000000000009da49 : jg 0x9da6c ; jne 0x9dff8 ; ret
0x000000000009da7e : jg 0x9daa2 ; jne 0x9dff8 ; ret
0x000000000009daac : jg 0x9dad1 ; jne 0x9dff8 ; ret
0x000000000009dadc : jg 0x9db02 ; jne 0x9dff8 ; ret
0x000000000009db08 : jg 0x9db2f ; jne 0x9dff8 ; ret
0x000000000009db38 : jg 0x9db60 ; jne 0x9dff8 ; ret
0x000000000009db68 : jg 0x9db91 ; jne 0x9dff8 ; ret
0x000000000009db98 : jg 0x9dbc2 ; jne 0x9dff8 ; ret
0x000000000009dcb6 : jg 0x9dcc1 ; ret
0x000000000009dcc9 : jg 0x9dcd7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dcda : jg 0x9dce9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dcf9 : jg 0x9dd07 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dd09 : jg 0x9dd17 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dd1c : jg 0x9dd2d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009dd3a : jg 0x9dd49 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009dd5a : jg 0x9dd69 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009dd7a : jg 0x9dd89 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dd9d : jg 0x9ddaf ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009dddd : jg 0x9ddef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009ddfd : jg 0x9de0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009de1b : jg 0x9de2b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009de3b : jg 0x9de4b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009de5b : jg 0x9de6b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009de7b : jg 0x9de8b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dfb2 : jg 0x9dfbd ; ret
0x000000000009e0e6 : jg 0x9e11a ; ret
0x000000000009e656 : jg 0x9e665 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e666 : jg 0x9e678 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e699 : jg 0x9e6ab ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e6b9 : jg 0x9e6cb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e7df : jg 0x9e83f ; or eax, 0x1c478d48 ; ret
0x000000000009eddb : jg 0x9ede6 ; jne 0x9f808 ; ret
0x000000000009ee00 : jg 0x9ee0c ; jne 0x9f808 ; ret
0x000000000009ee23 : jg 0x9ee30 ; jne 0x9f808 ; ret
0x000000000009ee3e : jg 0x9ee4c ; jne 0x9f808 ; ret
0x000000000009ee61 : jg 0x9ee70 ; jne 0x9f808 ; ret
0x000000000009ee86 : jg 0x9ee96 ; jne 0x9f808 ; ret
0x000000000009eea4 : jg 0x9eeb5 ; jne 0x9f808 ; ret
0x000000000009eec0 : jg 0x9eed2 ; jne 0x9f808 ; ret
0x000000000009eee3 : jg 0x9eef6 ; jne 0x9f808 ; ret
0x000000000009ef08 : jg 0x9ef1c ; jne 0x9f808 ; ret
0x000000000009ef36 : jg 0x9ef4b ; jne 0x9f808 ; ret
0x000000000009ef56 : jg 0x9ef6c ; jne 0x9f808 ; ret
0x000000000009ef78 : jg 0x9ef8f ; jne 0x9f808 ; ret
0x000000000009efa8 : jg 0x9efc0 ; jne 0x9f808 ; ret
0x000000000009efd8 : jg 0x9eff1 ; jne 0x9f808 ; ret
0x000000000009f002 : jg 0x9f01c ; jne 0x9f808 ; ret
0x000000000009f025 : jg 0x9f040 ; jne 0x9f808 ; ret
0x000000000009f04a : jg 0x9f066 ; jne 0x9f808 ; ret
0x000000000009f078 : jg 0x9f095 ; jne 0x9f808 ; ret
0x000000000009f0a8 : jg 0x9f0c6 ; jne 0x9f808 ; ret
0x000000000009f0db : jg 0x9f0fa ; jne 0x9f808 ; ret
0x000000000009f10a : jg 0x9f12a ; jne 0x9f808 ; ret
0x000000000009f13a : jg 0x9f15b ; jne 0x9f808 ; ret
0x000000000009f16a : jg 0x9f18c ; jne 0x9f808 ; ret
0x000000000009f19d : jg 0x9f1c0 ; jne 0x9f808 ; ret
0x000000000009f1d2 : jg 0x9f1f6 ; jne 0x9f808 ; ret
0x000000000009f200 : jg 0x9f225 ; jne 0x9f808 ; ret
0x000000000009f230 : jg 0x9f256 ; jne 0x9f808 ; ret
0x000000000009f25c : jg 0x9f283 ; jne 0x9f808 ; ret
0x000000000009f28c : jg 0x9f2b4 ; jne 0x9f808 ; ret
0x000000000009f2bc : jg 0x9f2e5 ; jne 0x9f808 ; ret
0x000000000009f2ec : jg 0x9f316 ; jne 0x9f808 ; ret
0x000000000009f496 : jg 0x9f4a5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f4a9 : jg 0x9f4bb ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f4e9 : jg 0x9f4fb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f509 : jg 0x9f51b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f62f : jg 0x9f68f ; or eax, 0x1d478d48 ; ret
0x000000000009f7c2 : jg 0x9f7cd ; ret
0x000000000009f8f6 : jg 0x9f92e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009f8f5 : jg 0x9f97d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a00c6 : jg 0xa00d1 ; ret
0x00000000000a00d6 : jg 0xa00e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a00ea : jg 0xa00f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0109 : jg 0xa0117 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0119 : jg 0xa0127 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0129 : jg 0xa013a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a014a : jg 0xa0159 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a016a : jg 0xa0179 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a018a : jg 0xa0199 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a01aa : jg 0xa01bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a01ed : jg 0xa01ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a020d : jg 0xa021f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a022b : jg 0xa023b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a024b : jg 0xa025b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a026b : jg 0xa027b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a028b : jg 0xa029b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0b96 : jg 0xa0ba1 ; ret
0x00000000000a0ba6 : jg 0xa0bb4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0bba : jg 0xa0bc9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0bd9 : jg 0xa0be7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0be9 : jg 0xa0bf7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0bf9 : jg 0xa0c0a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a0c1a : jg 0xa0c29 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0c3a : jg 0xa0c49 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0c5a : jg 0xa0c69 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0c7a : jg 0xa0c8c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a0cbd : jg 0xa0ccf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0cdd : jg 0xa0cef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0cfb : jg 0xa0d0b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a0d1b : jg 0xa0d2b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a0d3b : jg 0xa0d4b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a0d5b : jg 0xa0d6b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0f06 : jg 0xa0f16 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a10df : jg 0xa1140 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a10ff : jg 0xa1160 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1176 : jg 0xa11af ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1175 : jg 0xa11fe ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1b50 : jg 0xa1b8d ; ret 0x2b77
0x00000000000a2ce5 : jg 0xa2ced ; neg eax ; ret
0x00000000000c254c : jg 0xc2552 ; add byte ptr [rax], al ; ret
0x00000000000ebeb0 : jg 0xebf02 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f73f8 : jg 0xf7407 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f984b : jg 0xf9880 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011823c : jge 0x118249 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001247bf : jge 0x1247d3 ; call rax
0x000000000012ba6f : jge 0x12ba83 ; call rax
0x000000000012c178 : jge 0x12c18c ; call rax
0x0000000000178665 : jge 0x178665 ; call qword ptr [rax]
0x0000000000187799 : jge 0x187799 ; call qword ptr [rax]
0x0000000000187819 : jge 0x187819 ; jmp rdx
0x0000000000187995 : jge 0x187995 ; jmp qword ptr [rax]
0x0000000000187999 : jge 0x18799d ; jmp qword ptr [rax + 0x20fffc7c]
0x00000000001882f9 : jge 0x1882e7 ; jmp rsp
0x00000000001882f8 : jge 0x1882e8 ; jmp rsp
0x000000000018b1f9 : jge 0x18b1f1 ; jmp rsp
0x000000000018cf01 : jge 0x18cefd ; call rsp
0x0000000000191599 : jge 0x191587 ; jmp rbx
0x0000000000191598 : jge 0x191588 ; jmp rbx
0x0000000000192d54 : jge 0x192d79 ; jmp 0x192d5a
0x0000000000194415 : jge 0x194405 ; jmp qword ptr [rdx]
0x000000000019445d : jge 0x19444d ; jmp qword ptr [rdx]
0x00000000001944fd : jge 0x1944ed ; jmp qword ptr [rdx]
0x0000000000194545 : jge 0x194535 ; jmp qword ptr [rdx]
0x000000000019460d : jge 0x1945fd ; jmp qword ptr [rdx]
0x000000000019460c : jge 0x1945fe ; jmp qword ptr [rdx]
0x0000000000194655 : jge 0x194645 ; jmp qword ptr [rdx]
0x000000000019469d : jge 0x19468d ; jmp qword ptr [rdx]
0x0000000000194715 : jge 0x194705 ; jmp qword ptr [rdx]
0x000000000019475d : jge 0x19474d ; jmp qword ptr [rdx]
0x00000000001947a5 : jge 0x194795 ; jmp qword ptr [rdx]
0x00000000001a04f1 : jge 0x1a04e6 ; call qword ptr [rax]
0x00000000001a1145 : jge 0x1a113a ; jmp qword ptr [rdx]
0x00000000001a11cd : jge 0x1a11c2 ; jmp qword ptr [rdx]
0x00000000001a6365 : jge 0x1a636e ; add byte ptr [rax - 0x45], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a637d : jge 0x1a6386 ; add byte ptr [rax - 0x45], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001b647e : jge 0x1b64d2 ; idiv edi ; sbb al, 0xd ; cmp al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x000000000002257f : jge 0x2259c ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x0000000000048aa0 : jge 0x48ade ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000048cea : jge 0x48cf1 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000006fc93 : jge 0x6fd0d ; cmp edi, ebx ; je 0x6fca6 ; call 0xebf61
0x0000000000093ff1 : jge 0x93ffc ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000009702f : jge 0x97037 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a3e5f : jge 0xa3e64 ; call r12
0x00000000000af8e1 : jge 0xaf8e6 ; call r12
0x00000000000bda06 : jge 0xbd9a3 ; call r14
0x00000000000cab86 : jge 0xcab1f ; movsx esi, byte ptr [rax] ; call 0x86e57
0x00000000000e4bff : jge 0xe4bd9 ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f50bb : jge 0xf50bf ; call rbx
0x00000000000f51e2 : jge 0xf51e6 ; call rbx
0x00000000000f51f0 : jge 0xf51f4 ; call rbx
0x00000000000f5325 : jge 0xf5329 ; call rbx
0x00000000000f5495 : jge 0xf5499 ; call rbx
0x00000000000f54a3 : jge 0xf54a7 ; call rbx
0x00000000000f58af : jge 0xf587a ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000f6b9a : jge 0xf6b9f ; call r12
0x000000000012775d : jl 0x127769 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012775c : jl 0x12776a ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001624bb : jl 0x1624c4 ; neg eax ; ret
0x0000000000178661 : jl 0x178665 ; push rax ; jge 0x178669 ; call qword ptr [rax]
0x00000000001872f0 : jl 0x187349 ; cld ; jmp qword ptr [rdx]
0x00000000001877a5 : jl 0x1877a9 ; push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x0000000000187821 : jl 0x187821 ; call rdx
0x0000000000187961 : jl 0x187965 ; jmp qword ptr [rax + 0x10fffc7b]
0x000000000018799d : jl 0x18799d ; jmp qword ptr [rax]
0x0000000000187fa9 : jl 0x187f96 ; jmp rsp
0x00000000001882f5 : jl 0x1882fd ; add byte ptr [rbp + rdi*2 - 0x16], ah ; jmp rsp
0x0000000000189f84 : jl 0x189fb4 ; add dword ptr [rax], eax ; ret 0xefca
0x000000000018d355 : jl 0x18d35f ; add byte ptr [rdx + rdx - 7], al ; jmp rsp
0x0000000000192d0c : jl 0x192d31 ; jmp 0x192d12
0x00000000001930cc : jl 0x19311f ; add byte ptr [rax], al ; mov al, 0x41 ; jmp 0x1930da
0x00000000001942f5 : jl 0x1942e5 ; jmp qword ptr [rdx]
0x000000000019436d : jl 0x19435d ; jmp qword ptr [rdx]
0x00000000001943cd : jl 0x1943bd ; jmp qword ptr [rdx]
0x000000000019458d : jl 0x19457d ; jmp qword ptr [rdx]
0x00000000001959ec : jl 0x195a0a ; add byte ptr [rax], al ; jo 0x19598e ; in eax, dx ; jmp rsi
0x0000000000195d6c : jl 0x195de8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001963e5 : jl 0x1963d6 ; jmp qword ptr [rdx]
0x0000000000196465 : jl 0x196456 ; jmp qword ptr [rdx]
0x0000000000196595 : jl 0x196586 ; jmp qword ptr [rdx]
0x00000000001965dd : jl 0x1965ce ; jmp qword ptr [rdx]
0x0000000000196625 : jl 0x196616 ; jmp qword ptr [rdx]
0x00000000001996cc : jl 0x199685 ; add byte ptr [rax], al ; and dh, bh ; in eax, dx ; jmp rax
0x000000000019aa8d : jl 0x19aa8d ; jmp qword ptr [rdx]
0x000000000019aa8c : jl 0x19aa8e ; jmp qword ptr [rdx]
0x000000000019aad5 : jl 0x19aad5 ; jmp qword ptr [rdx]
0x000000000019bdcc : jl 0x19bdac ; add byte ptr [rax], al ; xor byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x00000000001a0bcc : jl 0x1a0bfa ; add dword ptr [rax], eax ; jo 0x1a0ba0 ; int1 ; call qword ptr [rsi]
0x00000000001a0f85 : jl 0x1a0f7a ; jmp qword ptr [rdx]
0x00000000001a0fcd : jl 0x1a0fc2 ; jmp qword ptr [rdx]
0x00000000001a102d : jl 0x1a1022 ; jmp qword ptr [rdx]
0x00000000001a1075 : jl 0x1a106a ; jmp qword ptr [rdx]
0x00000000001a10fd : jl 0x1a10f2 ; jmp qword ptr [rdx]
0x00000000001a23cc : jl 0x1a2412 ; add dword ptr [rax], eax ; sar dl, 1 ; int1 ; jmp qword ptr [rcx]
0x00000000001a5ecc : jl 0x1a5f4d ; add dword ptr [rax], eax ; mov al, 0xae ; hlt ; jmp qword ptr [rcx]
0x00000000001a7fcc : jl 0x1a7f6e ; add dword ptr [rax], eax ; nop ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a85cc : jl 0x1a8574 ; add dword ptr [rax], eax ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001aaacc : jl 0x1aaa99 ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001ac6cc : jl 0x1ac6b5 ; add dword ptr [rax], eax ; mov al, 0xf8 ; cmc ; call qword ptr [rax]
0x00000000001ad315 : jl 0x1ad30e ; jmp qword ptr [rdx]
0x00000000001ad314 : jl 0x1ad30f ; jmp qword ptr [rdx]
0x00000000001ad3a5 : jl 0x1ad39e ; jmp qword ptr [rdx]
0x00000000001ad3ed : jl 0x1ad3e6 ; jmp qword ptr [rdx]
0x00000000001ad44d : jl 0x1ad446 ; jmp qword ptr [rdx]
0x00000000001ad495 : jl 0x1ad48e ; jmp qword ptr [rdx]
0x00000000001ad4dd : jl 0x1ad4d6 ; jmp qword ptr [rdx]
0x00000000001ad4dc : jl 0x1ad4d7 ; jmp qword ptr [rdx]
0x00000000001ad525 : jl 0x1ad51e ; jmp qword ptr [rdx]
0x00000000001ad524 : jl 0x1ad51f ; jmp qword ptr [rdx]
0x00000000001ad56d : jl 0x1ad566 ; jmp qword ptr [rdx]
0x00000000001ad5b5 : jl 0x1ad5ae ; jmp qword ptr [rdx]
0x00000000000025c3 : jl 0x2556 ; loop 0x25a1 ; ret 0x23cb
0x0000000000025a63 : jl 0x25a90 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000025b5c : jl 0x25b8a ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025f30 : jl 0x25f5d ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000261b9 : jl 0x261e7 ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ab : jl 0x264d9 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002659d : jl 0x265cb ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026988 : jl 0x269b5 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026b7f : jl 0x26bad ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026ea0 : jl 0x26ece ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000270ab : jl 0x270d9 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000027793 : jl 0x277c0 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278be : jl 0x278eb ; jo 0x27911 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002849a : jl 0x284c7 ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000028b1f : jl 0x28b4d ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029535 : jl 0x29563 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029eb1 : jl 0x29edf ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002a3be : jl 0x2a3eb ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a6b7 : jl 0x2a6e4 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a80c : jl 0x2a839 ; jo 0x2a85f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b00a : jl 0x2b038 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002b50e : jl 0x2b53b ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b807 : jl 0x2b834 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b95c : jl 0x2b989 ; jo 0x2b9af ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000003abea : jl 0x3ac18 ; and byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret 0xfffa
0x000000000004444a : jl 0x44475 ; xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004fe51 : jl 0x4fe1b ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000851a0 : jl 0x851aa ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008af77 : jl 0x8afa2 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000970ba : jl 0x97125 ; add rax, rdi ; ret
0x00000000000970ca : jl 0x97127 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000970ea : jl 0x97127 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009710a : jl 0x97127 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a5743 : jl 0xa57c1 ; or eax, 0x3d8d4800 ; ret 0xdb5
0x00000000000b8343 : jl 0xb8392 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c10e0 : jl 0xc10a0 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d4e4e : jl 0xd4e88 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ebc29 : jl 0xebc55 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ebd39 : jl 0xebd65 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xebd01
0x00000000000f5586 : jl 0xf55b4 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000fa444 : jl 0xfa489 ; je 0xfa44d ; ret
0x0000000000101f3e : jle 0x101fb1 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105d20 : jle 0x105d53 ; add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x000000000012a7e8 : jle 0x12a800 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012eb9e : jle 0x12ebdc ; call 0x12adb4
0x000000000013cf77 : jle 0x13cea1 ; movsxd rax, ecx ; ret
0x000000000013d1b1 : jle 0x13d0fb ; ret
0x0000000000187791 : jle 0x187791 ; call qword ptr [rax]
0x0000000000187795 : jle 0x187799 ; call qword ptr [rax + 0x10fffc7d]
0x0000000000187811 : jle 0x187811 ; jmp rdx
0x000000000018798d : jle 0x18798d ; jmp qword ptr [rax]
0x0000000000187991 : jle 0x187995 ; jmp qword ptr [rax + 0x20fffc7d]
0x0000000000188349 : jle 0x188337 ; call rsp
0x0000000000188c48 : jle 0x188c34 ; jmp 0x188c4e
0x00000000001a1215 : jle 0x1a120a ; jmp qword ptr [rdx]
0x00000000001a125d : jle 0x1a1252 ; jmp qword ptr [rdx]
0x00000000001a12f5 : jle 0x1a12ea ; jmp qword ptr [rdx]
0x00000000001a12f4 : jle 0x1a12eb ; jmp qword ptr [rdx]
0x00000000001a133d : jle 0x1a1332 ; jmp qword ptr [rdx]
0x00000000001a133c : jle 0x1a1333 ; jmp qword ptr [rdx]
0x00000000001a1385 : jle 0x1a137a ; jmp qword ptr [rdx]
0x00000000001a1384 : jle 0x1a137b ; jmp qword ptr [rdx]
0x00000000001a13cd : jle 0x1a13c2 ; jmp qword ptr [rdx]
0x00000000001a1415 : jle 0x1a140a ; jmp qword ptr [rdx]
0x00000000001a145d : jle 0x1a1452 ; jmp qword ptr [rdx]
0x00000000001a6475 : jle 0x1a647e ; add byte ptr [rax - 0x42], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a648d : jle 0x1a6496 ; add byte ptr [rax - 0x42], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ad6b5 : jle 0x1ad6ae ; jmp qword ptr [rdx]
0x000000000002caa2 : jle 0x2cab5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000002f7d1 : jle 0x2f80b ; push qword ptr [rdi + rax - 0x77] ; fucompi st(0) ; ret
0x000000000003d987 : jle 0x3d943 ; jmp 0x3d950
0x000000000003d986 : jle 0x3d944 ; jmp 0x3d951
0x0000000000048a2a : jle 0x48a68 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007395b : jle 0x73962 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c1e1d : jle 0xc1e24 ; ret
0x00000000000c25f9 : jle 0xc25ff ; add byte ptr [rax], al ; ret
0x00000000001013cb : jmp 0x101112
0x000000000010be51 : jmp 0x10be17
0x000000000010d722 : jmp 0x10d4f1
0x000000000010dada : jmp 0x10d8c1
0x000000000010eb21 : jmp 0x10e9c6
0x000000000010f237 : jmp 0x10f23d
0x000000000010f236 : jmp 0x10f23e
0x000000000011bc7c : jmp 0x11bc00
0x00000000001218ce : jmp 0x1218f3
0x0000000000123c2f : jmp 0x123bf5
0x000000000012afee : jmp 0x12aff8
0x000000000012d602 : jmp 0x12d5c7
0x00000000001316ba : jmp 0x131680
0x0000000000135222 : jmp 0x135087
0x0000000000172d56 : jmp 0x172d58
0x00000000001743ca : jmp 0x174409
0x0000000000175109 : jmp 0x1750dc
0x0000000000176100 : jmp 0x176094
0x00000000001760ff : jmp 0x176095
0x0000000000188842 : jmp 0x188844
0x0000000000188862 : jmp 0x188864
0x000000000018889a : jmp 0x18889c
0x00000000001889b2 : jmp 0x1889b9
0x00000000001889b1 : jmp 0x1889ba
0x00000000001889ba : jmp 0x1889bc
0x00000000001889b9 : jmp 0x1889bd
0x0000000000188a2a : jmp 0x188a2c
0x0000000000188a29 : jmp 0x188a2d
0x0000000000188a4a : jmp 0x188a4c
0x0000000000188a49 : jmp 0x188a4d
0x0000000000188af2 : jmp 0x188af4
0x0000000000188b2a : jmp 0x188b2c
0x0000000000188c12 : jmp 0x188c14
0x0000000000188c4a : jmp 0x188c4c
0x0000000000188ca2 : jmp 0x188ca4
0x0000000000192b1a : jmp 0x192b1c
0x0000000000192c7e : jmp 0x192c80
0x0000000000192cc6 : jmp 0x192cc8
0x0000000000192d0e : jmp 0x192d10
0x0000000000192d56 : jmp 0x192d58
0x0000000000192d9e : jmp 0x192da0
0x0000000000192de6 : jmp 0x192de8
0x0000000000192e2e : jmp 0x192e30
0x0000000000192e76 : jmp 0x192e78
0x0000000000192f72 : jmp 0x192f74
0x00000000001930d2 : jmp 0x1930d4
0x00000000001930d1 : jmp 0x1930d5
0x00000000001931ba : jmp 0x1931bc
0x0000000000193202 : jmp 0x193204
0x0000000000193272 : jmp 0x193274
0x00000000001932d6 : jmp 0x1932d8
0x00000000001932d5 : jmp 0x1932d9
0x000000000019331e : jmp 0x193320
0x000000000019331d : jmp 0x193321
0x0000000000193366 : jmp 0x193368
0x0000000000193365 : jmp 0x193369
0x00000000001933ae : jmp 0x1933b0
0x00000000001933ad : jmp 0x1933b1
0x00000000001933f6 : jmp 0x1933f8
0x00000000001933f5 : jmp 0x1933f9
0x000000000019343e : jmp 0x193440
0x000000000019343d : jmp 0x193441
0x00000000001935e2 : jmp 0x1935e4
0x00000000001935fa : jmp 0x1935fc
0x000000000019365a : jmp 0x19365c
0x0000000000193659 : jmp 0x19365d
0x00000000001936ae : jmp 0x1936b0
0x00000000001936ad : jmp 0x1936b1
0x00000000001936f6 : jmp 0x1936f8
0x00000000001936f5 : jmp 0x1936f9
0x000000000019373e : jmp 0x193740
0x0000000000193786 : jmp 0x193788
0x00000000001939f6 : jmp 0x1939f8
0x0000000000193a3e : jmp 0x193a40
0x0000000000193b6e : jmp 0x193b70
0x0000000000193bb6 : jmp 0x193bb8
0x0000000000193d16 : jmp 0x193d18
0x0000000000193d5e : jmp 0x193d60
0x0000000000193eee : jmp 0x193ef0
0x0000000000193eed : jmp 0x193ef1
0x0000000000193f36 : jmp 0x193f38
0x000000000002177f : jmp 0x2173e
0x0000000000021b63 : jmp 0x21b28
0x00000000000230a7 : jmp 0x230e4
0x00000000000230a7 : jmp 0x230e5
0x00000000001adf3c : jmp 0x231ad4cb
0x00000000001ae2b4 : jmp 0x231ad844
0x0000000000026536 : jmp 0x264fb
0x0000000000026f7d : jmp 0x26f43
0x0000000000026fc7 : jmp 0x26f8c
0x0000000000029c0d : jmp 0x29bd2
0x000000000002addd : jmp 0x2ada2
0x000000000002f62e : jmp 0x2f636
0x00000000000333a2 : jmp 0x32633
0x00000000000333ba : jmp 0x32634
0x0000000000035adb : jmp 0x35aa0
0x0000000000003867 : jmp 0x382d
0x00000000000384f2 : jmp 0x38544
0x0000000000039c82 : jmp 0x39cd4
0x000000000003d7a6 : jmp 0x3d68a
0x000000000003d989 : jmp 0x3d94e
0x000000000003dc1d : jmp 0x3db4a
0x0000000000043234 : jmp 0x431e6
0x0000000000046ef5 : jmp 0x46ebb
0x00000000000b4ee0 : jmp 0x48cdd830
0x00000000000b54e0 : jmp 0x48cdde30
0x00000000000b556c : jmp 0x48cddebc
0x00000000000b55f9 : jmp 0x48cddf49
0x00000000000b6e57 : jmp 0x48cdf7a7
0x0000000000126362 : jmp 0x48d225f2
0x00000000000456b7 : jmp 0x48f4e00b
0x00000000000709b2 : jmp 0x48f59305
0x000000000005b49b : jmp 0x4905b45c
0x00000000000b711c : jmp 0x49cdfa6c
0x00000000000b7166 : jmp 0x49cdfab6
0x00000000000b75db : jmp 0x49cdff2b
0x000000000004e044 : jmp 0x4a265
0x000000000004e20c : jmp 0x4a487
0x000000000004e5cd : jmp 0x4a805
0x000000000004bff3 : jmp 0x4bfb9
0x00000000000376d9 : jmp 0x4c66ce4
0x0000000000050bc2 : jmp 0x4cc79512
0x0000000000092819 : jmp 0x4ccbb16d
0x00000000000b5837 : jmp 0x4ccde187
0x00000000000b5e91 : jmp 0x4ccde7e1
0x00000000000b5f1d : jmp 0x4ccde86d
0x00000000000b5f9e : jmp 0x4ccde8ee
0x00000000000b6d71 : jmp 0x4ccdf6c1
0x00000000000b6ebe : jmp 0x4ccdf80e
0x00000000000e3a71 : jmp 0x4cd0c3c1
0x00000000000d387c : jmp 0x4d02e87
0x00000000000e1ce3 : jmp 0x4d112ee
0x00000000000e418c : jmp 0x4d13797
0x00000000000e445c : jmp 0x4d13a67
0x00000000000ee4e0 : jmp 0x4d1daeb
0x0000000000135a9d : jmp 0x4d650a8
0x000000000004e806 : jmp 0x4e7cb
0x000000000014cb9a : jmp 0x4f93db98
0x000000000014cb99 : jmp 0x4f93db99
0x000000000014f66a : jmp 0x4f940668
0x000000000014f669 : jmp 0x4f940669
0x000000000015218a : jmp 0x4f943188
0x0000000000152189 : jmp 0x4f943189
0x0000000000058aaf : jmp 0x54d5a
0x000000000005a7a3 : jmp 0x5535d
0x00000000000565d5 : jmp 0x5659a
0x000000000005b49a : jmp 0x56a90
0x000000000006357f : jmp 0x5f819
0x0000000000061966 : jmp 0x600b8
0x0000000000061803 : jmp 0x617c9
0x0000000000066f9a : jmp 0x64578
0x000000000006a075 : jmp 0x662fe
0x000000000007547b : jmp 0x75441
0x000000000007547a : jmp 0x75442
0x0000000000076ef1 : jmp 0x76ef6
0x0000000000077abc : jmp 0x77a81
0x00000000000483f6 : jmp 0x77c6bd47
0x000000000007a2b9 : jmp 0x7a2c0
0x000000000007a723 : jmp 0x7a6e8
0x000000000007aaf4 : jmp 0x7ab08
0x000000000007e79a : jmp 0x7e626
0x00000000000805c2 : jmp 0x7fded
0x00000000000817b7 : jmp 0x8177d
0x000000000008191c : jmp 0x81789
0x0000000000082398 : jmp 0x823ad
0x0000000000082408 : jmp 0x8241b
0x0000000000085e82 : jmp 0x85e48
0x0000000000086060 : jmp 0x86026
0x0000000000086ef4 : jmp 0x86eba
0x0000000000087048 : jmp 0x8700d
0x000000000018817a : jmp 0x8a0687
0x000000000009347b : jmp 0x932d9
0x0000000000093b5c : jmp 0x93b22
0x0000000000093ca8 : jmp 0x93c6d
0x0000000000093e52 : jmp 0x93e17
0x00000000000975ae : jmp 0x97574
0x00000000000a14ee : jmp 0xa14b4
0x00000000000a15bf : jmp 0xa1585
0x00000000000a162e : jmp 0xa15f4
0x00000000000a9fb1 : jmp 0xa8a46
0x00000000000ba237 : jmp 0xba1fc
0x00000000000bcfc0 : jmp 0xbcf86
0x00000000000c3e27 : jmp 0xc3877
0x00000000000c4eab : jmp 0xc4246
0x00000000000c4b2b : jmp 0xc42c8
0x00000000000c7743 : jmp 0xc7709
0x00000000000c7788 : jmp 0xc774e
0x00000000000c84f4 : jmp 0xc8541
0x00000000000caa9d : jmp 0xca2a0
0x00000000000ccbaf : jmp 0xcbee2
0x00000000000ce9b8 : jmp 0xce8cf
0x00000000000d4884 : jmp 0xd452c
0x00000000000d49f3 : jmp 0xd46dc
0x00000000000d494f : jmp 0xd4757
0x00000000000d486a : jmp 0xd47d6
0x00000000000ddb15 : jmp 0xddb2d
0x00000000000de940 : jmp 0xde905
0x00000000000e4438 : jmp 0xe43fd
0x00000000000f0f01 : jmp 0xf0ec3
0x00000000000faab4 : jmp 0xf0faabd
0x00000000000f1715 : jmp 0xf16db
0x00000000000f1975 : jmp 0xf193b
0x00000000000f7a0f : jmp 0xf79d5
0x00000000000fbd81 : jmp 0xfbd47
0x0000000000112481 : jmp 0xffffffff895de711
0x000000000011e166 : jmp 0xffffffffc097b571
0x000000000004f662 : jmp 0xffffffffc24905b7
0x000000000004f661 : jmp 0xffffffffc24905b8
0x000000000000314e : jmp 0xffffffffc25d05fa
0x00000000000a8cc6 : jmp 0xffffffffc28dd4d0
0x00000000000a2bf3 : jmp 0xffffffffc30a2bfc
0x0000000000038c21 : jmp 0xffffffffc3131576
0x00000000000e4282 : jmp 0xffffffffc3484288
0x00000000000e4313 : jmp 0xffffffffc3484319
0x000000000007d6be : jmp 0xffffffffc39123c8
0x0000000000108e4e : jmp 0xffffffffc3e117a3
0x0000000000108c8e : jmp 0xffffffffc40915df
0x0000000000100163 : jmp 0xffffffffc810002b
0x00000000000a45b3 : jmp 0xfffffffffff9cf04
0x00000000000a48a6 : jmp 0xfffffffffff9d1f7
0x0000000000178a25 : jmp qword ptr [eax]
0x00000000000479b7 : jmp qword ptr [r8]
0x00000000001872a7 : jmp qword ptr [rax + 0x10fffc55]
0x000000000018722f : jmp qword ptr [rax + 0x10fffc5e]
0x0000000000187963 : jmp qword ptr [rax + 0x10fffc7b]
0x0000000000187777 : jmp qword ptr [rax + 0x10fffc81]
0x00000000001786c7 : jmp qword ptr [rax + 0x10fffc9d]
0x000000000018799b : jmp qword ptr [rax + 0x20fffc7c]
0x0000000000187993 : jmp qword ptr [rax + 0x20fffc7d]
0x000000000018798b : jmp qword ptr [rax + 0x20fffc7e]
0x0000000000187983 : jmp qword ptr [rax + 0x20fffc7f]
0x000000000018797b : jmp qword ptr [rax + 0x20fffc80]
0x0000000000187e6b : jmp qword ptr [rax + 0x30fffca0]
0x00000000001874ef : jmp qword ptr [rax - 0x1f0003c9]
0x0000000000186def : jmp qword ptr [rax - 0x1f000418]
0x0000000000178a07 : jmp qword ptr [rax - 0x2f000d9a]
0x00000000001789ef : jmp qword ptr [rax - 0x2f000d9b]
0x0000000000178717 : jmp qword ptr [rax - 0x3d]
0x000000000017afef : jmp qword ptr [rax - 0x47000573]
0x0000000000031f6d : jmp qword ptr [rax]
0x000000000018d83b : jmp qword ptr [rbp + 2]
0x0000000000188f53 : jmp qword ptr [rbx + rax*8]
0x0000000000002547 : jmp qword ptr [rbx]
0x00000000001868c3 : jmp qword ptr [rcx + 0x21fffda7]
0x00000000001868cb : jmp qword ptr [rcx + 0x21fffda8]
0x0000000000058d5c : jmp qword ptr [rcx + rcx*4 + 2]
0x000000000018904b : jmp qword ptr [rcx + rcx*8 - 0x3c960000]
0x000000000017911f : jmp qword ptr [rcx - 0x1f000c2f]
0x0000000000177d17 : jmp qword ptr [rcx]
0x000000000018c5a3 : jmp qword ptr [rdi + rbx + 2]
0x0000000000179113 : jmp qword ptr [rdi - 0x3d]
0x00000000000b4f5d : jmp qword ptr [rdi]
0x00000000001872f7 : jmp qword ptr [rdx + 0x12fffc5b]
0x00000000001875ef : jmp qword ptr [rdx + 0x12fffc84]
0x000000000018710b : jmp qword ptr [rdx + 0x32fffc62]
0x0000000000177adb : jmp qword ptr [rdx - 0xa]
0x00000000000cc76e : jmp qword ptr [rdx]
0x0000000000177abf : jmp qword ptr [rip + 0x20ffffed]
0x0000000000179517 : jmp qword ptr [rip - 0x1e000bfe]
0x00000000001869cf : jmp qword ptr [rsi + 0x11fffdb8]
0x000000000003c171 : jmp qword ptr [rsi + 0xf]
0x0000000000176fdb : jmp qword ptr [rsi - 0x11]
0x000000000004488d : jmp qword ptr [rsi - 0x70]
0x000000000000d058 : jmp qword ptr [rsi]
0x000000000018a3d3 : jmp qword ptr [rsp + rdx*2 + 0x4c240001]
0x00000000001789ed : jmp qword ptr gs:[rax - 0x2f000d9b]
0x0000000000001b5e : jmp r10
0x000000000002e2a3 : jmp r14
0x000000000002ddf3 : jmp r8
0x0000000000142bed : jmp r9
0x000000000018679b : jmp rax
0x00000000000e2cbd : jmp rbx
0x000000000004ce6c : jmp rcx
0x000000000012721b : jmp rdi
0x0000000000001b5f : jmp rdx
0x000000000002e2a4 : jmp rsi
0x0000000000002a4d : jmp rsp
0x0000000000105ece : jne 0x105edf ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107a6d : jne 0x107a66 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000107ae7 : jne 0x107af8 ; cmp qword ptr [rdi], 0 ; je 0x107b01 ; ret
0x0000000000107b58 : jne 0x107b67 ; mov eax, 1 ; ret
0x0000000000107b88 : jne 0x107b94 ; xor eax, eax ; ret
0x0000000000107bb8 : jne 0x107bc4 ; xor eax, eax ; ret
0x0000000000107be8 : jne 0x107bf4 ; xor eax, eax ; ret
0x0000000000107c18 : jne 0x107c24 ; xor eax, eax ; ret
0x0000000000107c48 : jne 0x107c54 ; xor eax, eax ; ret
0x0000000000107c78 : jne 0x107c84 ; xor eax, eax ; ret
0x0000000000107ca8 : jne 0x107cb4 ; xor eax, eax ; ret
0x0000000000107cd8 : jne 0x107ce4 ; xor eax, eax ; ret
0x0000000000107d08 : jne 0x107d14 ; xor eax, eax ; ret
0x0000000000107d38 : jne 0x107d44 ; xor eax, eax ; ret
0x0000000000107d68 : jne 0x107d74 ; xor eax, eax ; ret
0x0000000000107d98 : jne 0x107da4 ; xor eax, eax ; ret
0x0000000000107dc8 : jne 0x107dd4 ; xor eax, eax ; ret
0x0000000000107df8 : jne 0x107e04 ; xor eax, eax ; ret
0x0000000000107e28 : jne 0x107e34 ; xor eax, eax ; ret
0x0000000000107e58 : jne 0x107e64 ; xor eax, eax ; ret
0x0000000000107e88 : jne 0x107e94 ; xor eax, eax ; ret
0x0000000000107eb8 : jne 0x107ec4 ; xor eax, eax ; ret
0x0000000000107ee8 : jne 0x107ef4 ; xor eax, eax ; ret
0x0000000000107f18 : jne 0x107f24 ; xor eax, eax ; ret
0x0000000000107f78 : jne 0x107f84 ; xor eax, eax ; ret
0x0000000000107fa8 : jne 0x107fb4 ; xor eax, eax ; ret
0x0000000000107fd8 : jne 0x107fe4 ; xor eax, eax ; ret
0x0000000000108008 : jne 0x108014 ; xor eax, eax ; ret
0x0000000000108038 : jne 0x108044 ; xor eax, eax ; ret
0x0000000000108068 : jne 0x108074 ; xor eax, eax ; ret
0x0000000000108098 : jne 0x1080a4 ; xor eax, eax ; ret
0x00000000001080c8 : jne 0x1080d4 ; xor eax, eax ; ret
0x00000000001080f8 : jne 0x108104 ; xor eax, eax ; ret
0x0000000000108141 : jne 0x108139 ; pop rdx ; pop r10 ; ret
0x0000000000108235 : jne 0x108243 ; ret
0x00000000001083c4 : jne 0x1083a3 ; ret
0x000000000010843f : jne 0x108433 ; leave ; ret
0x000000000010853d : jne 0x108503 ; leave ; ret
0x0000000000108b37 : jne 0x108b87 ; add al, 0 ; ret
0x0000000000108c8d : jne 0x108c7d ; mov rax, rdi ; ret
0x0000000000108cec : jne 0x108ce1 ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000108e4d : jne 0x108e3d ; mov rax, r10 ; ret
0x00000000001098a1 : jne 0x109914 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010a2f8 : jne 0x10a306 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ae1b : jne 0x10adf6 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x000000000010bb41 : jne 0x10bbb4 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010becd : jne 0x10bebb ; ret
0x000000000010bf6c : jne 0x10bf5b ; ret
0x000000000010bfe5 : jne 0x10bfd9 ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000010fc18 : jne 0x10fbdd ; jmp 0x10fbd5
0x0000000000111853 : jne 0x111843 ; pop rbx ; ret
0x0000000000111752 : jne 0x1120ec ; mov eax, edx ; pop rbx ; ret
0x0000000000117d4d : jne 0x117d27 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000118a76 : jne 0x118aee ; add rsp, 8 ; ret
0x000000000011be34 : jne 0x11be68 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000011c2bc : jne 0x11c2c2 ; ret
0x000000000011c2fc : jne 0x11c2f0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000120e8d : jne 0x120ec0 ; mov dword ptr [rsi], 0 ; ret
0x00000000001216e5 : jne 0x1216f8 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001217ed : jne 0x121787 ; xor eax, eax ; pop rbx ; ret
0x00000000001249c8 : jne 0x1249d2 ; ret
0x000000000012b9e7 : jne 0x12b9d3 ; pop rbx ; ret
0x000000000012bc58 : jne 0x12bc62 ; ret
0x000000000012d163 : jne 0x12d15a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012d600 : jne 0x12d5c1 ; jmp 0x12d5c9
0x000000000012ea67 : jne 0x12ea72 ; ret
0x000000000012eaa7 : jne 0x12eab2 ; ret
0x000000000012eb5a : jne 0x12eb65 ; test r14d, r14d ; jne 0x12eb79 ; call 0x12adb9
0x000000000012eb5f : jne 0x12eb74 ; call 0x12adb4
0x00000000001331a7 : jne 0x133161 ; mov rdi, rbx ; call 0x1f417
0x0000000000133f48 : jne 0x133f75 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000133feb : jne 0x134018 ; mov eax, edx ; add rsp, 8 ; ret
0x00000000001361d3 : jne 0x1361bc ; add rsp, 0x58 ; ret
0x00000000001361d2 : jne 0x1361bd ; add rsp, 0x58 ; ret
0x00000000001361ba : jne 0x1361e8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000136274 : jne 0x136288 ; xor eax, eax ; add rsp, 0x58 ; ret
0x00000000001362e8 : jne 0x13630e ; add rsp, 0x48 ; ret
0x0000000000136e68 : jne 0x136e74 ; xor eax, eax ; ret
0x0000000000136e98 : jne 0x136ea4 ; xor eax, eax ; ret
0x0000000000136ec8 : jne 0x136ed4 ; xor eax, eax ; ret
0x0000000000136ef8 : jne 0x136f04 ; xor eax, eax ; ret
0x0000000000136f28 : jne 0x136f34 ; xor eax, eax ; ret
0x0000000000136f58 : jne 0x136f64 ; xor eax, eax ; ret
0x000000000015a4a1 : jne 0x15aa56 ; ret
0x000000000016163d : jne 0x161667 ; xor eax, eax ; ret
0x0000000000160c31 : jne 0x16166b ; xor eax, eax ; ret
0x0000000000160c59 : jne 0x161677 ; xor eax, eax ; ret
0x000000000016247d : jne 0x1624a7 ; xor eax, eax ; ret
0x0000000000162261 : jne 0x1624ab ; xor eax, eax ; ret
0x00000000001624b1 : jne 0x1624ba ; xor eax, eax ; ret
0x0000000000162287 : jne 0x1624be ; xor eax, eax ; ret
0x00000000001625c5 : jne 0x162556 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000162597 : jne 0x162556 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000162596 : jne 0x162557 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000163d24 : jne 0x163f38 ; xor eax, eax ; ret
0x0000000000163f29 : jne 0x163f49 ; xor eax, eax ; ret
0x0000000000163dd1 : jne 0x163f4d ; xor eax, eax ; ret
0x0000000000163f41 : jne 0x163f4e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000164556 : jne 0x164564 ; xor eax, eax ; ret
0x000000000016442d : jne 0x164566 ; ret
0x00000000001652bd : jne 0x1652ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165310 : jne 0x1652f0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016544d : jne 0x16543d ; pop rbx ; ret
0x0000000000165519 : jne 0x1654e7 ; add rsp, 8 ; ret
0x0000000000165711 : jne 0x165704 ; pop rbx ; ret
0x0000000000165758 : jne 0x165763 ; ret
0x0000000000165ffc : jne 0x16601f ; ret
0x000000000018add1 : jne 0x18adc8 ; call rsp
0x000000000018cec9 : jne 0x18cec5 ; jmp rsp
0x0000000000195c4d : jne 0x195c3e ; jmp qword ptr [rdx]
0x0000000000195c95 : jne 0x195c86 ; jmp qword ptr [rdx]
0x000000000019b2fc : jne 0x19b335 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0d8d : jne 0x1a0d82 ; jmp qword ptr [rdx]
0x00000000001a0d8c : jne 0x1a0d83 ; jmp qword ptr [rdx]
0x00000000001a0dd5 : jne 0x1a0dca ; jmp qword ptr [rdx]
0x00000000001a102c : jne 0x1a10ad ; int1 ; jmp qword ptr [rdx]
0x00000000001a9614 : jne 0x1a9600 ; hlt ; jmp qword ptr [rdx]
0x0000000000035444 : jne 0x35422 ; ret
0x00000000000363d7 : jne 0x363e6 ; add rsp, 8 ; ret
0x00000000000366b2 : jne 0x366c6 ; add rsp, 8 ; ret
0x0000000000036bc8 : jne 0x36bd3 ; ret
0x000000000000374e : jne 0x372c ; ret 0x975
0x00000000000376eb : jne 0x376fd ; xor eax, eax ; nop ; ret
0x000000000003827f : jne 0x38274 ; xor eax, eax ; ret
0x00000000000382a5 : jne 0x3828f ; mov eax, 1 ; ret
0x000000000003835f : jne 0x38354 ; xor eax, eax ; ret
0x0000000000038385 : jne 0x3836f ; mov eax, 1 ; ret
0x0000000000038627 : jne 0x38616 ; mov rax, rdx ; ret
0x0000000000038d0f : jne 0x38d06 ; mov rax, rdx ; ret
0x000000000003c046 : jne 0x3c149 ; xor eax, eax ; pop rbx ; ret
0x000000000004662f : jne 0x4674d ; pop rbx ; ret
0x00000000000470c8 : jne 0x470c9 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000004710d : jne 0x47103 ; pop rbx ; ret
0x00000000000487fb : jne 0x48803 ; pop rbx ; ret
0x0000000000049583 : jne 0x49568 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a9
0x00000000000499d1 : jne 0x499bd ; mov rax, rsi ; ret
0x0000000000049a55 : jne 0x49a35 ; mov rax, rsi ; ret
0x00000000000539f6 : jne 0x53a59 ; mov eax, edx ; pop rbx ; ret
0x000000000005d611 : jne 0x5d626 ; mov rax, rbx ; pop rbx ; ret
0x000000000005dda7 : jne 0x5ddae ; ret
0x000000000005e07c : jne 0x5e0f7 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000635d9 : jne 0x5fcfe ; jmp 0x5f81f
0x00000000000635a2 : jne 0x5fd64 ; jmp 0x5f81f
0x0000000000063579 : jne 0x5fdab ; jmp 0x5f81f
0x000000000006df8a : jne 0x6e005 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000006e801 : jne 0x6e882 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006f922 : jne 0x6fdd5 ; ret
0x0000000000070433 : jne 0x704b8 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000705d2 : jne 0x7063d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070b49 : jne 0x70bc5 ; mov eax, edx ; pop rbx ; ret
0x000000000007127d : jne 0x712c0 ; ret
0x0000000000071377 : jne 0x713c0 ; mov eax, esi ; ret
0x0000000000071477 : jne 0x714c0 ; mov eax, esi ; ret
0x00000000000715b7 : jne 0x71630 ; mov eax, edx ; pop rbx ; ret
0x0000000000071ba0 : jne 0x71c15 ; mov eax, edx ; pop rbx ; ret
0x0000000000071d02 : jne 0x71d81 ; mov eax, edx ; pop rbx ; ret
0x0000000000071ff7 : jne 0x72070 ; mov eax, edx ; pop rbx ; ret
0x0000000000072142 : jne 0x721a7 ; pop rbx ; ret
0x000000000007387c : jne 0x738ff ; mov eax, edx ; pop rbx ; ret
0x0000000000073946 : jne 0x73956 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074191 : jne 0x74183 ; ret
0x0000000000076abc : jne 0x76ac3 ; pop rbx ; ret
0x0000000000077709 : jne 0x7777e ; mov eax, edx ; pop rbx ; ret
0x000000000007789b : jne 0x77919 ; mov eax, edx ; pop rbx ; ret
0x0000000000077cab : jne 0x77d25 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078132 : jne 0x781aa ; mov eax, edx ; pop rbx ; ret
0x00000000000782d4 : jne 0x78354 ; mov eax, edx ; pop rbx ; ret
0x000000000007869c : jne 0x786b9 ; mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x0000000000078764 : jne 0x787b6 ; mov eax, edx ; pop rbx ; ret
0x000000000007ac1d : jne 0x7ac38 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae6a : jne 0x7aea0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007af41 : jne 0x7af33 ; ret
0x000000000007bec2 : jne 0x7bead ; pop rbx ; ret
0x000000000007befc : jne 0x7bef5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c686 : jne 0x7c67b ; ret
0x000000000007aa87 : jne 0x7ca62 ; ret
0x000000000007ca12 : jne 0x7cc8b ; ret
0x000000000007da7d : jne 0x7da71 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007df46 : jne 0x84a81 ; ret
0x0000000000086994 : jne 0x869d1 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000086b51 : jne 0x86b44 ; xor eax, eax ; ret
0x0000000000086bc4 : jne 0x86beb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086c0b : jne 0x86c03 ; ret
0x00000000000870a2 : jne 0x870b4 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000088c83 : jne 0x88c8e ; xor rax, rax ; ret
0x0000000000088f1e : jne 0x88f30 ; lea rax, qword ptr [rip + 9] ; ret
0x000000000008abf1 : jne 0x8ac06 ; add rsp, 8 ; ret
0x000000000008bec9 : jne 0x8bf25 ; xor rax, rax ; ret
0x000000000008be89 : jne 0x8bf49 ; xor rax, rax ; ret
0x000000000008bf78 : jne 0x8bf8b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000008c67e : jne 0x8c663 ; ret
0x000000000008c833 : jne 0x8c71f ; mov rax, rdi ; ret
0x000000000008c789 : jne 0x8c775 ; mov rax, rdi ; ret
0x000000000008cd4e : jne 0x8cd60 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008cdb1 : jne 0x8cdc3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008f03e : jne 0x8f050 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008f0a1 : jne 0x8f0b3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000009171e : jne 0x9170c ; xor eax, eax ; ret
0x000000000009174f : jne 0x91762 ; lea rax, qword ptr [rip + 0x6878] ; ret
0x00000000000918b8 : jne 0x91790 ; ret
0x00000000000917f9 : jne 0x917e3 ; ret
0x0000000000093da6 : jne 0x93d91 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000093e50 : jne 0x93e5f ; jmp 0x93e19
0x0000000000096ac6 : jne 0x96abb ; ret
0x0000000000096b12 : jne 0x96b03 ; ret
0x0000000000096b6b : jne 0x96b53 ; ret
0x0000000000096c11 : jne 0x96c05 ; mov rax, rdi ; ret
0x0000000000096c62 : jne 0x96c4c ; xor eax, eax ; ret
0x0000000000096cc2 : jne 0x96cb5 ; mov qword ptr [rdx], rcx ; ret
0x0000000000096d8b : jne 0x96d80 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096df8 : jne 0x96de8 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009702d : jne 0x970b8 ; xor eax, eax ; ret
0x000000000009706a : jne 0x970e4 ; xor eax, eax ; ret
0x00000000000974cc : jne 0x97470 ; mov rax, rdi ; ret
0x000000000009748d : jne 0x97484 ; xor eax, eax ; ret
0x00000000000974b8 : jne 0x974ce ; mov rax, rdi ; ret
0x0000000000097555 : jne 0x9754c ; xor eax, eax ; ret
0x000000000009763d : jne 0x97633 ; ret
0x0000000000097ad2 : jne 0x97a9f ; nop dword ptr [rax] ; ret
0x0000000000097cd9 : jne 0x97cc6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000097fbc : jne 0x97fa6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000009d73a : jne 0x9dff6 ; ret
0x000000000009eddd : jne 0x9f806 ; ret
0x00000000000a1321 : jne 0xa1312 ; ret
0x00000000000a13d1 : jne 0xa13c2 ; ret
0x00000000000a1541 : jne 0xa1536 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a1691 : jne 0xa1686 ; sub rax, 1 ; ret
0x00000000000a1e44 : jne 0xa1e4f ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a1e97 : jne 0xa1e8b ; ret
0x00000000000a2c66 : jne 0xa2ce2 ; ret
0x00000000000a2b8f : jne 0xa2ce6 ; ret
0x00000000000a2b6e : jne 0xa2ce8 ; xor eax, eax ; ret
0x00000000000a2d18 : jne 0xa2d2b ; lea rax, qword ptr [rip + 0xd48f] ; ret
0x00000000000a30ce : jne 0xa309b ; ret
0x00000000000a31d9 : jne 0xa31c7 ; sub eax, r8d ; nop ; ret
0x00000000000a32b8 : jne 0xa32a6 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a359b : jne 0xa35f6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a367b : jne 0xa364b ; ret
0x00000000000a3665 : jne 0xa365b ; ret
0x00000000000a3748 : jne 0xa373c ; xor eax, eax ; ret
0x00000000000a37b8 : jne 0xa3799 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000a38c8 : jne 0xa38db ; lea rax, qword ptr [rip + 0xc84f] ; ret
0x00000000000a3923 : jne 0xa391b ; ret
0x00000000000a4b0b : jne 0xa4ac6 ; nop dword ptr [rax] ; ret
0x00000000000a4b4c : jne 0xa4b43 ; ret
0x00000000000afd4c : jne 0xafdc7 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b01a7 : jne 0xb0170 ; ret
0x00000000000b01d4 : jne 0xb01cb ; ret
0x00000000000b4b19 : jne 0xb4b31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bd251 : jne 0xbd271 ; pop rbx ; ret
0x00000000000bd2ef : jne 0xbd319 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bda02 : jne 0xbd9b3 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000c2580 : jne 0xc254e ; ret
0x00000000000c25c7 : jne 0xc2552 ; mov eax, 0x7d00 ; ret
0x00000000000c268d : jne 0xc26c3 ; ret
0x00000000000c6137 : jne 0xc6118 ; ret
0x00000000000c6161 : jne 0xc6145 ; ret
0x00000000000c6170 : jne 0xc615f ; mov eax, 1 ; ret
0x00000000000c6256 : jne 0xc61ff ; mov eax, 1 ; ret
0x00000000000c6246 : jne 0xc622e ; mov eax, 1 ; ret
0x00000000000d09ab : jne 0xd0998 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d0d03 : jne 0xd0cfe ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000d1cd8 : jne 0xd1ca3 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d1eed : jne 0xd1e39 ; pop rbx ; ret
0x00000000000d1eec : jne 0xd1e3a ; pop rbx ; ret
0x00000000000d1ed5 : jne 0xd1e61 ; pop rbx ; ret
0x00000000000d1ea2 : jne 0xd1ea1 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1e3b ; pop rbx ; ret
0x00000000000d28a5 : jne 0xd2853 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4431 : jne 0xe43db ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4404
0x00000000000ebeaf : jne 0xebf39 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3d9e : jne 0xf47a8 ; ret
0x00000000000f5818 : jne 0xf5800 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f7d94 : jne 0xf7d4e ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7dcc
0x00000000000f7e65 : jne 0xf7e1f ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7e9e
0x00000000000f83c7 : jne 0xf83be ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f9421 : jne 0xf93f5 ; xor eax, eax ; pop rbx ; ret
0x00000000000f95e2 : jne 0xf95b5 ; xor eax, eax ; pop rbx ; ret
0x00000000001020a6 : jno 0x1020ae ; cmovne eax, edx ; ret
0x00000000001020a5 : jno 0x1020af ; cmovne eax, edx ; ret
0x00000000001020a6 : jno 0x1020b0 ; cmovne eax, edx ; ret
0x00000000001020a5 : jno 0x1020b1 ; cmovne eax, edx ; ret
0x0000000000160eee : jno 0x160efd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000177591 : jno 0x177583 ; call rax
0x0000000000186801 : jno 0x186804 ; call qword ptr [rax - 0x1f00048e]
0x0000000000186800 : jno 0x186805 ; call qword ptr [rax - 0x1f00048e]
0x00000000001935be : jno 0x1935cc ; ret
0x00000000001935be : jno 0x1935d3 ; ret
0x00000000001953bd : jno 0x1953ae ; jmp qword ptr [rdx]
0x0000000000195405 : jno 0x1953f6 ; jmp qword ptr [rdx]
0x000000000019544d : jno 0x19543e ; jmp qword ptr [rdx]
0x00000000001954cd : jno 0x1954be ; jmp qword ptr [rdx]
0x00000000001954cc : jno 0x1954bf ; jmp qword ptr [rdx]
0x0000000000195515 : jno 0x195506 ; jmp qword ptr [rdx]
0x000000000019555d : jno 0x19554e ; jmp qword ptr [rdx]
0x000000000019555c : jno 0x19554f ; jmp qword ptr [rdx]
0x00000000001955fd : jno 0x1955ee ; jmp qword ptr [rdx]
0x0000000000195645 : jno 0x195636 ; jmp qword ptr [rdx]
0x000000000019568d : jno 0x19567e ; jmp qword ptr [rdx]
0x0000000000195705 : jno 0x1956f6 ; jmp qword ptr [rdx]
0x000000000019574d : jno 0x19573e ; jmp qword ptr [rdx]
0x0000000000195795 : jno 0x195786 ; jmp qword ptr [rdx]
0x0000000000195805 : jno 0x1957f6 ; jmp qword ptr [rdx]
0x0000000000195895 : jno 0x195886 ; jmp qword ptr [rdx]
0x0000000000195894 : jno 0x195887 ; jmp qword ptr [rdx]
0x0000000000195945 : jno 0x195936 ; jmp qword ptr [rdx]
0x0000000000196624 : jno 0x1966a5 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196bac : jno 0x196b31 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a5755 : jno 0x1a575e ; add byte ptr [rax], bl ; jns 0x1a5755 ; jmp qword ptr [rcx]
0x00000000001a5785 : jno 0x1a578e ; add byte ptr [rax + 0x79], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001acc8d : jno 0x1acc86 ; jmp qword ptr [rdx]
0x00000000001acd0d : jno 0x1acd06 ; jmp qword ptr [rdx]
0x00000000001acd0c : jno 0x1acd07 ; jmp qword ptr [rdx]
0x00000000001b3ac9 : jno 0x1b3ac4 ; call qword ptr [rbx]
0x00000000000021c7 : jno 0x2214 ; ret 0x1dd4
0x0000000000038b14 : jno 0x38b66 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000003903 : jno 0x394d ; xchg eax, ebx ; and cl, ah ; ret
0x000000000005e07d : jno 0x5e0e1 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000783b1 : jno 0x783bf ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007d86d : jno 0x7d87f ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a1e42 : jno 0xa1e50 ; jne 0xa1e51 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000a1e47 : jno 0xa1e54 ; ret
0x00000000000afd4d : jno 0xafdb1 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b635c : jno 0xb62e9 ; ret 0xe283
0x00000000000b6436 : jno 0xb63c3 ; ret 0xe283
0x00000000000b650e : jno 0xb649b ; ret 0xe283
0x00000000000b65ee : jno 0xb657b ; ret 0xe283
0x00000000000b670e : jno 0xb669b ; ret 0xe283
0x00000000000b67ef : jno 0xb677c ; ret 0xe283
0x00000000000b6886 : jno 0xb6813 ; ret 0xe283
0x00000000000b76e9 : jno 0xb7676 ; ret 0xe283
0x00000000000b7ee9 : jno 0xb7e76 ; ret 0xe283
0x00000000000b7fea : jno 0xb7f77 ; ret 0xe283
0x00000000000b8113 : jno 0xb80a0 ; ret 0xe283
0x00000000000ebbf0 : jno 0xebbe7 ; ret
0x000000000011184e : jnp 0x1118a0 ; test rdi, rdi ; jne 0x111848 ; pop rbx ; ret
0x00000000001277e3 : jnp 0x12784f ; call rax
0x0000000000128213 : jnp 0x12826f ; call rax
0x0000000000174be5 : jnp 0x174ba2 ; ret
0x00000000001794cc : jnp 0x1794c1 ; call rax
0x0000000000179568 : jnp 0x17955d ; call qword ptr [rdi]
0x0000000000186821 : jnp 0x186820 ; call qword ptr [rax]
0x0000000000186a90 : jnp 0x186a4e ; std ; call qword ptr [rcx]
0x0000000000186a90 : jnp 0x186a52 ; std ; call qword ptr [rcx]
0x00000000001877a9 : jnp 0x1877a9 ; jmp rax
0x0000000000187965 : jnp 0x187965 ; call qword ptr [rax]
0x00000000001879a9 : jnp 0x1879ad ; push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018cb98 : jnp 0x18cbd9 ; clc ; jmp rsp
0x0000000000194bf9 : jnp 0x194bea ; jmp rcx
0x000000000019600d : jnp 0x195ffe ; jmp qword ptr [rdx]
0x0000000000196055 : jnp 0x196046 ; jmp qword ptr [rdx]
0x0000000000196105 : jnp 0x1960f6 ; jmp qword ptr [rdx]
0x000000000019614d : jnp 0x19613e ; jmp qword ptr [rdx]
0x0000000000196195 : jnp 0x196186 ; jmp qword ptr [rdx]
0x0000000000196245 : jnp 0x196236 ; jmp qword ptr [rdx]
0x000000000019628d : jnp 0x19627e ; jmp qword ptr [rdx]
0x00000000001962d5 : jnp 0x1962c6 ; jmp qword ptr [rdx]
0x0000000000196355 : jnp 0x196346 ; jmp qword ptr [rdx]
0x000000000019639d : jnp 0x19638e ; jmp qword ptr [rdx]
0x00000000001964ad : jnp 0x19649e ; jmp qword ptr [rdx]
0x000000000019b344 : jnp 0x19b37d ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a618d : jnp 0x1a6196 ; add byte ptr [rax], dl ; mov bh, 0xf4 ; call rdi
0x00000000001a9b7c : jnp 0x1a9b6c ; hlt ; jmp qword ptr [rdx]
0x00000000001ad014 : jnp 0x1ad091 ; cmc ; jmp qword ptr [rdx]
0x00000000001ad2cd : jnp 0x1ad2c6 ; jmp qword ptr [rdx]
0x00000000000236eb : jnp 0x23707 ; call rax
0x000000000003c8cb : jnp 0x3c8de ; mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x00000000000a4156 : jnp 0xa418e ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c443b : jnp 0xc444f ; xchg eax, esp ; ret 0xb60f
0x00000000000c466b : jnp 0xc467f ; xchg eax, esp ; ret 0xb60f
0x00000000000c48d7 : jnp 0xc48eb ; xchg eax, esp ; ret 0xb60f
0x00000000000dbc41 : jnp 0xdbc4f ; sti ; call rcx
0x00000000000ef141 : jnp 0xef0e2 ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000103e87 : jns 0x103e5f ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104009 : jns 0x104046 ; mov eax, r8d ; sub eax, r9d ; ret
0x0000000000173cee : jns 0x173c84 ; ret 0xf869
0x0000000000173ced : jns 0x173c85 ; ret 0xf869
0x00000000001760fe : jns 0x176155 ; jmp 0x176096
0x00000000001882b1 : jns 0x18829f ; call rsp
0x000000000018d2ed : jns 0x18d2f7 ; add byte ptr [rdx + rax], dh ; stc ; call rsp
0x00000000001917e5 : jns 0x1917d3 ; jmp qword ptr [rdx]
0x000000000019182d : jns 0x19181b ; jmp qword ptr [rdx]
0x0000000000191875 : jns 0x191863 ; jmp qword ptr [rdx]
0x0000000000195eb5 : jns 0x195ea6 ; jmp qword ptr [rdx]
0x00000000001a2e4d : jns 0x1a2e43 ; jmp qword ptr [rdx]
0x00000000001a2e95 : jns 0x1a2e8b ; jmp qword ptr [rdx]
0x00000000001a2e94 : jns 0x1a2e8c ; jmp qword ptr [rdx]
0x00000000001a5759 : jns 0x1a5751 ; jmp qword ptr [rcx]
0x00000000001a5789 : jns 0x1a5781 ; jmp qword ptr [rcx]
0x00000000001a5788 : jns 0x1a5782 ; jmp qword ptr [rcx]
0x00000000001ad1cd : jns 0x1ad1c6 ; jmp qword ptr [rdx]
0x0000000000001b29 : jns 0x1b34 ; ret
0x0000000000021b5d : jns 0x21a40 ; jmp 0x21b2e
0x0000000000002bbf : jns 0x2b8d ; clc ; ret
0x000000000000322f : jns 0x320a ; ret 0x5a51
0x0000000000036e5b : jns 0x36e71 ; add rsp, 0xd0 ; ret
0x000000000000389f : jns 0x38f2 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000086196 : jns 0x861e7 ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000000868cb : jns 0x8694c ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008cd53 : jns 0x8cd59 ; add byte ptr [rax], al ; ret
0x000000000008f043 : jns 0x8f049 ; add byte ptr [rax], al ; ret
0x00000000000c6589 : jns 0xc6593 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000e4d1f : jns 0xe4d1f ; add byte ptr [rsp + rax - 0x77], dh ; ret 0xeeeb
0x00000000000f2374 : jns 0xf2382 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a0e06 : jns 0xffffffffed3a116c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0e68 : jns 0xffffffffed3a15ce ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0e88 : jns 0xffffffffed3a16ee ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000001243ee : jo 0x124454 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124ccb : jo 0x124d31 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001293e7 : jo 0x129379 ; push rax ; adc dh, dh ; ret 0x7401
0x00000000001667a0 : jo 0x166820 ; in al, dx ; inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x0000000000174d64 : jo 0x174dde ; mov ebp, 0xfb67d10d ; ret
0x0000000000177580 : jo 0x1775fb ; out dx, al ; call qword ptr [rax - 0x2f00118e]
0x0000000000178575 : jo 0x17856e ; inc eax ; jb 0x178572 ; call qword ptr [rax]
0x0000000000178574 : jo 0x1785ed ; int1 ; inc eax ; jb 0x178573 ; call qword ptr [rax]
0x00000000001786b4 : jo 0x17864f ; cld ; jmp rax
0x0000000000178a04 : jo 0x178a73 ; jmp qword ptr [rax - 0x2f000d9a]
0x000000000018671c : jo 0x18673d ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x000000000018681c : jo 0x18689f ; sti ; inc eax ; jnp 0x186825 ; call qword ptr [rax]
0x0000000000186970 : jo 0x186926 ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x0000000000186ab0 : jo 0x186a6f ; std ; call qword ptr [rcx]
0x0000000000186ab0 : jo 0x186a73 ; std ; call qword ptr [rcx]
0x0000000000186c14 : jo 0x186bf8 ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x0000000000186c90 : jo 0x186c67 ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000186e08 : jo 0x186e04 ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186e5c : jo 0x186e5f ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000186fd4 : jo 0x186ffc ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x0000000000187438 : jo 0x187498 ; cld ; jmp rax
0x0000000000187730 : jo 0x1876b9 ; cld ; jmp rax
0x00000000001877a8 : jo 0x187828 ; cld ; jmp rax
0x00000000001879ac : jo 0x187a2b ; cld ; call qword ptr [rax]
0x000000000018e0e8 : jo 0x18e0ab ; cli ; call rsp
0x000000000018e505 : jo 0x18e50d ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x000000000018e504 : jo 0x18e50e ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x000000000019515c : jo 0x1951d0 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001959f0 : jo 0x19598a ; in eax, dx ; jmp rsi
0x000000000019b224 : jo 0x19b258 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0810 : jo 0x1a07da ; int1 ; call qword ptr [rdx]
0x00000000001a0bd0 : jo 0x1a0b9c ; int1 ; call qword ptr [rsi]
0x00000000001a2c20 : jo 0x1a2bac ; jmp qword ptr [rcx]
0x00000000001a5050 : jo 0x1a50b8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a5725 : jo 0x1a572e ; add al, ch ; js 0x1a5725 ; jmp qword ptr [rcx]
0x00000000001a6380 : jo 0x1a6340 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6490 : jo 0x1a6453 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7ee0 : jo 0x1a7f10 ; cmc ; jmp qword ptr [rcx]
0x00000000001a9134 : jo 0x1a9118 ; hlt ; jmp qword ptr [rdx]
0x00000000001aac20 : jo 0x1aabf9 ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7e0 : jo 0x1ab7c8 ; cmc ; call qword ptr [rax]
0x00000000001acc45 : jo 0x1acc3e ; jmp qword ptr [rdx]
0x00000000001b51f0 : jo 0x1b51fc ; sti ; jmp qword ptr [rdx]
0x00000000000278c0 : jo 0x2790f ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002a80e : jo 0x2a85d ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b95e : jo 0x2b9ad ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000030063 : jo 0x300b4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030062 : jo 0x300b5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000046398 : jo 0x463a3 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000006690 : jo 0x669b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000714ea : jo 0x71477 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000714e9 : jo 0x71478 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000007420a : jo 0x74222 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000077cac : jo 0x77d10 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000079be4 : jo 0x79c35 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d986 : jo 0x7d998 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000084919 : jo 0x8497b ; pop rbp ; pop r12 ; ret
0x00000000000849d8 : jo 0x84a12 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c3e25 : jo 0xc3e47 ; jmp 0xc3879
0x00000000000d209e : jo 0xd20c4 ; xor eax, eax ; ret
0x00000000000d8ef4 : jo 0xd8f45 ; mov ebx, eax ; mov edx, r8d ; jmp 0xd8f0a
0x00000000000eb6e7 : jo 0xeb6e1 ; ret 0x4840
0x00000000000eb714 : jo 0xeb773 ; ret
0x00000000000ebcfe : jo 0xebd5d ; ret
0x00000000000f0b16 : jo 0xf0b3b ; ret
0x00000000001064c5 : jp 0x10651c ; mov rsi, rdx ; call rax
0x0000000000121ced : jp 0x121d4d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000127872 : jp 0x12787e ; ret
0x000000000012788a : jp 0x127896 ; ret
0x00000000001280d2 : jp 0x1280de ; ret
0x00000000001280ea : jp 0x1280f6 ; ret
0x000000000012811a : jp 0x128126 ; ret
0x0000000000172d90 : jp 0x172db6 ; in al, dx ; call rsi
0x000000000018681d : jp 0x186820 ; inc eax ; jnp 0x186824 ; call qword ptr [rax]
0x0000000000187771 : jp 0x187771 ; jmp qword ptr [rax]
0x00000000001878b1 : jp 0x1878b1 ; call rsp
0x00000000001878ad : jp 0x1878b1 ; ljmp ptr [rsi] ; jp 0x1878b5 ; call rsp
0x00000000001878b0 : jp 0x1878b2 ; call rsp
0x000000000018796d : jp 0x18796d ; call qword ptr [rax]
0x00000000001879ad : jp 0x1879ad ; call qword ptr [rax]
0x0000000000188fe0 : jp 0x189048 ; in eax, dx ; call rsp
0x0000000000195efd : jp 0x195eee ; jmp qword ptr [rdx]
0x0000000000195f45 : jp 0x195f36 ; jmp qword ptr [rdx]
0x0000000000195fc5 : jp 0x195fb6 ; jmp qword ptr [rdx]
0x0000000000196354 : jp 0x1963d4 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001975ec : jp 0x197577 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6105 : jp 0x1a610e ; add byte ptr [rax], bh ; mov ch, 0xf4 ; call rdi
0x00000000001ae1e4 : jp 0x1ae171 ; cmc ; jmp qword ptr [rdx]
0x00000000001b3f21 : jp 0x1b3f1c ; call qword ptr [rdx]
0x0000000000002545 : jp 0x2529 ; jmp qword ptr [rbx]
0x0000000000002544 : jp 0x252a ; jmp qword ptr [rbx]
0x0000000000003902 : jp 0x397c ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000070434 : jp 0x70499 ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000848c0 : jp 0x848ca ; test rdx, rdi ; je 0x848d9 ; pop rbx ; ret
0x000000000008c715 : jp 0x8c70f ; ret 0x7401
0x00000000000f9dde : jp 0xf9e13 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108193 : jrcxz 0x108158 ; cmp r11d, 0xa ; je 0x1081a4 ; ret
0x000000000014c88a : jrcxz 0x14c885 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c889 : jrcxz 0x14c886 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f35a : jrcxz 0x14f355 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f359 : jrcxz 0x14f356 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151e7a : jrcxz 0x151e75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151e79 : jrcxz 0x151e76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173b45 : jrcxz 0x173b9f ; ret
0x00000000001785fd : jrcxz 0x1785f2 ; call qword ptr [rax]
0x0000000000178601 : jrcxz 0x1785f6 ; jmp qword ptr [rax]
0x0000000000194b45 : jrcxz 0x194b35 ; jmp qword ptr [rdx]
0x0000000000194b8d : jrcxz 0x194b7d ; jmp qword ptr [rdx]
0x0000000000195054 : jrcxz 0x1950c7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b4ac : jrcxz 0x19b4e8 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019c9cd : jrcxz 0x19c9d5 ; add byte ptr [rax - 0x75], ah ; cld ; call qword ptr [rdx]
0x000000000019ca05 : jrcxz 0x19ca0d ; add byte ptr [rax - 0x6b], cl ; out dx, al ; call qword ptr [rdx]
0x00000000001ab7e1 : jrcxz 0x1ab7da ; call qword ptr [rax]
0x00000000001ab7f9 : jrcxz 0x1ab7f2 ; jmp rbx
0x00000000001b1441 : jrcxz 0x1b143b ; call qword ptr [rdi]
0x0000000000045f51 : jrcxz 0x45f5b ; inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x0000000000096b6c : jrcxz 0x96b63 ; ret
0x00000000000d09ac : jrcxz 0xd09fd ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000100160 : js 0x100128 ; call 0xebf59
0x0000000000103e62 : js 0x103de4 ; sub eax, ecx ; ret
0x0000000000103e1a : js 0x103e79 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x0000000000107a6b : js 0x107a7d ; jne 0x107a68 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010c654 : js 0x10c669 ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010c6d4 : js 0x10c6e7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000135973 : js 0x135988 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000166791 : js 0x166781 ; call rax
0x000000000016678d : js 0x166781 ; inc dword ptr [rax] ; js 0x166785 ; call rax
0x0000000000179bc0 : js 0x179b5d ; hlt ; jmp qword ptr [rsi]
0x0000000000186cb0 : js 0x186cbc ; cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000187f91 : js 0x187f7e ; jmp rsp
0x000000000018d090 : js 0x18d036 ; clc ; jmp rsp
0x00000000001935c5 : js 0x1935d3 ; ret
0x00000000001936ac : js 0x1936ff ; jmp 0x1936b2
0x00000000001936f4 : js 0x193747 ; jmp 0x1936fa
0x0000000000196594 : js 0x196615 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a2f8 : js 0x19a314 ; out dx, al ; call qword ptr [rdi]
0x000000000019a7a8 : js 0x19a7cf ; out dx, al ; jmp qword ptr [rax]
0x000000000019c3f9 : js 0x19c3eb ; jmp qword ptr [rcx]
0x00000000001a0588 : js 0x1a0528 ; int1 ; call qword ptr [rax]
0x00000000001a0be8 : js 0x1a0bb4 ; int1 ; call qword ptr [rbx]
0x00000000001a56c9 : js 0x1a56c1 ; jmp qword ptr [rcx]
0x00000000001a56f9 : js 0x1a56f1 ; jmp qword ptr [rcx]
0x00000000001a5729 : js 0x1a5721 ; jmp qword ptr [rcx]
0x00000000001a5ee5 : js 0x1a5eee ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a6dc8 : js 0x1a6daa ; hlt ; jmp qword ptr [rcx]
0x00000000001a75d8 : js 0x1a75e7 ; cmc ; call rsp
0x00000000001a76c8 : js 0x1a76d8 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7fb8 : js 0x1a7fe9 ; cmc ; jmp qword ptr [rcx]
0x00000000001aa908 : js 0x1aa8df ; cmc ; jmp qword ptr [rsi]
0x00000000001acedd : js 0x1aced6 ; jmp qword ptr [rdx]
0x00000000001acf25 : js 0x1acf1e ; jmp qword ptr [rdx]
0x00000000001acf85 : js 0x1acf7e ; jmp qword ptr [rdx]
0x00000000001acfcd : js 0x1acfc6 ; jmp qword ptr [rdx]
0x00000000001ad015 : js 0x1ad00e ; jmp qword ptr [rdx]
0x00000000001ad05d : js 0x1ad056 ; jmp qword ptr [rdx]
0x00000000001ad0a5 : js 0x1ad09e ; jmp qword ptr [rdx]
0x00000000001ad0a4 : js 0x1ad09f ; jmp qword ptr [rdx]
0x00000000001ad0ed : js 0x1ad0e6 ; jmp qword ptr [rdx]
0x00000000001ad185 : js 0x1ad17e ; jmp qword ptr [rdx]
0x00000000001ad1cc : js 0x1ad24a ; cmc ; jmp qword ptr [rdx]
0x00000000000233a0 : js 0x233c0 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000280c2 : js 0x28111 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000002f61 : js 0x2f17 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000002fcc1 : js 0x2fc4d ; loopne 0x2fcd4 ; movzx eax, ax ; ret
0x000000000002fd01 : js 0x2fc8d ; loopne 0x2fd0e ; movzx eax, ax ; ret
0x000000000002fda1 : js 0x2fd2d ; loopne 0x2fdb0 ; movzx eax, ax ; ret
0x000000000002fe81 : js 0x2fe0a ; loopne 0x2fe8a ; ret
0x000000000002fefa : js 0x2fe83 ; loopne 0x2ff03 ; ret
0x000000000002ff0a : js 0x2fe96 ; loopne 0x2ff1d ; movzx eax, ax ; ret
0x000000000002ff4a : js 0x2fed6 ; loopne 0x2ff57 ; movzx eax, ax ; ret
0x000000000002ffea : js 0x2ff76 ; loopne 0x2fff9 ; movzx eax, ax ; ret
0x0000000000030073 : js 0x300c4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030072 : js 0x300c5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000032d88 : js 0x32d97 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x9be9
0x000000000003d981 : js 0x3d9ce ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d949 ; jmp 0x3d956
0x00000000000714ed : js 0x714fb ; ret
0x0000000000074f00 : js 0x74f3b ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000075479 : js 0x754be ; jmp 0x75443
0x0000000000083bd8 : js 0x83be3 ; ret
0x0000000000091754 : js 0x917c2 ; add byte ptr [rax], al ; ret
0x00000000000a4452 : js 0xa448a ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e115c : js 0xe1199 ; ret 0x1472
0x00000000000e45ec : js 0xe463e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e4f49 : js 0xe4f9b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f0b45 : js 0xf0b59 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f12b8 : js 0xf12e9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3252 : js 0xf3265 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f5eac : js 0xf5ec3 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000fd7b0 : js 0xfd73c ; loopne 0xfd7c3 ; movzx eax, ax ; ret
0x00000000000fd8f0 : js 0xfd879 ; loopne 0xfd8f9 ; ret
0x00000000000fd990 : js 0xfd91c ; loopne 0xfd99d ; movzx eax, ax ; ret
0x00000000000fdca0 : js 0xfdc2c ; loopne 0xfdcaf ; movzx eax, ax ; ret
0x00000000000fe0c9 : js 0xfe055 ; loopne 0xfe0dc ; movzx eax, ax ; ret
0x00000000000fe1e9 : js 0xfe172 ; loopne 0xfe1f2 ; ret
0x00000000000fe269 : js 0xfe1f5 ; loopne 0xfe276 ; movzx eax, ax ; ret
0x00000000000fe529 : js 0xfe4b5 ; loopne 0xfe538 ; movzx eax, ax ; ret
0x00000000000a0da8 : js 0xffffffffed3a100e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0dd6 : js 0xffffffffed3a123c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0e28 : js 0xffffffffed3a168e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000002c093 : lahf ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000006f8cd : lahf ; adc byte ptr [rip - 0x766b1500], dh ; ret 0x8b48
0x000000000008b96d : lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001889b5 : lahf ; add byte ptr [rax], al ; ret
0x00000000001a8645 : lahf ; add dword ptr [rax], eax ; clc ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a85cd : lahf ; add dword ptr [rax], eax ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a85e5 : lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a85fd : lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x000000000019ae7c : lahf ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000f549e : lahf ; dec dword ptr [rax - 0x75] ; jge 0xf54ac ; call rbx
0x00000000000f5483 : lahf ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f54ac : lahf ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000000f5490 : lahf ; dec dword ptr [rcx - 0x75] ; jge 0xf549e ; call rbx
0x0000000000196071 : lahf ; in eax, dx ; call rbx
0x0000000000193785 : lahf ; jmp 0x193789
0x00000000000f9ddd : lahf ; jp 0xf9e14 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000176223 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000013df2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f55f2 : lahf ; ret
0x00000000000f55f9 : lahf ; ret 0x3845
0x00000000000d0de8 : lahf ; ret 0x82eb
0x0000000000173a7d : lahf ; ret 0x871e
0x00000000000578ba : lahf ; ret 0x9529
0x00000000000d5018 : lahf ; ret 0xee9
0x000000000013e5bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c3ad : lar eax, word ptr [rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x000000000018c3ac : lar eax, word ptr fs:[rax] ; fisubr dword ptr [rbx - 9] ; call rsp
0x000000000017758f : lcall ptr [rax + 0x71] ; out dx, al ; call rax
0x0000000000178017 : lcall ptr [rax + rcx*2 - 0x11] ; call qword ptr [rax]
0x000000000017800f : lcall ptr [rax + rcx*2 - 0x11] ; jmp qword ptr [rax]
0x000000000017800b : lcall ptr [rax + rcx*2 - 0x11] ; lcall ptr [rax + rcx*2 - 0x11] ; jmp qword ptr [rax]
0x000000000018a013 : lcall ptr [rax + rsi] ; add dword ptr [rax], eax ; ret
0x00000000001890ab : lcall ptr [rbp + rcx*8 + 0x5c6f0000] ; out dx, al ; jmp rsp
0x000000000017955b : lcall ptr [rbx + 0x2efff3f6] ; div bl ; jmp rsp
0x00000000000a1887 : lcall ptr [rbx + 0x5d] ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000082dc1 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000075a83 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bfd6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000ad1d4 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x000000000002c22b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000076d38 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000d2468 : lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000189f93 : lcall ptr [rbx + rbp - 0x3507ffff] ; out dx, eax ; jmp rsp
0x0000000000188d53 : lcall ptr [rbx + rsi*4 + 0x152f0000] ; in al, dx ; jmp rsp
0x000000000006dae4 : lcall ptr [rbx - 0x77] ; call 0xffffffffc3631c50
0x0000000000189ecb : lcall ptr [rcx + rax*2 - 0x569bffff] ; out dx, eax ; jmp rsp
0x00000000001782ab : lcall ptr [rcx + rdx*2] ; out dx, eax ; jmp qword ptr [rax]
0x0000000000189533 : lcall ptr [rcx + rsi*8 - 0x5eac0000] ; out dx, al ; jmp rsp
0x00000000001798cb : lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x000000000017926b : lcall ptr [rcx] ; fdiv st(3) ; call qword ptr [rdx]
0x000000000018dd23 : lcall ptr [rdi + rax*8 + 0x55f40002] ; cli ; call rsp
0x0000000000189d93 : lcall ptr [rdi + rbx + 0x4d190001] ; out dx, eax ; jmp rsp
0x00000000001870e7 : lcall ptr [rdi + rbx*2 + 0x5f2cfffc] ; cld ; call rdx
0x000000000018d893 : lcall ptr [rdi - 0x34ebfffe] ; stc ; call rsp
0x00000000001878ab : lcall ptr [rsi + 0x2efffc7a] ; jp 0x1878b7 ; call rsp
0x000000000018c83b : lcall ptr [rsi + rbp + 0x4c40002] ; clc ; jmp rsp
0x000000000018aebb : lcall ptr [rsi + rbx*4 - 0x75a3ffff] ; jmp rsp
0x000000000018d513 : lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000018cb93 : lcall ptr [rsp + rax*2 + 0x3c7b0002] ; clc ; jmp rsp
0x000000000018a093 : lcall ptr [rsp + rsi - 0x315affff] ; out dx, eax ; jmp rsp
0x000000000014cf16 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000751ff : lea eax, dword ptr [r8 - 1] ; ret
0x00000000000b0173 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008bef4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008bf04 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00000000000970a4 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008bed4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000bcc12 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000075200 : lea eax, dword ptr [rax - 1] ; ret
0x0000000000049586 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a6
0x00000000001217cb : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c647a : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c637a : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000117f5e : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000097baa : lea eax, dword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a39b1 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000000a18de : lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x000000000008a9ad : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a1544 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000009e66c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000009e681 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000009e69f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009e6bf : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000009e6e2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009e701 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009e721 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000009e741 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000009e764 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000009e789 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000009e7a7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000009e7c7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000009e7e3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000009e803 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000009e823 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000009e843 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000009f693 : lea eax, dword ptr [rdi + 0x20] ; ret
0x000000000009f8f9 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009e5bd : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009e5dd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009e5ff : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009e61f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009e63f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000009e659 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000096a44 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000096a58 : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000096a63 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000096a77 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000096a87 : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000096a97 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e56b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000096a37 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000009e58a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000117840 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009e59f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008bf29 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008bf39 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008be23 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000086fba : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000093b07 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000013d104 : lea eax, dword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118290 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000008a8a9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000a348e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000a35f1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000a3611 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000a3601 : lea eax, dword ptr [rdi - 8] ; ret
0x000000000009e4f3 : lea eax, dword ptr [rdi] ; ret
0x000000000015ccfd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000015cd1d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000015cd3f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000015cd5f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000015cd7f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000015cc0f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000015cc37 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000015cc4d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000015cc65 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000015cc7b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000015cc8d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000015ccab : lea eax, dword ptr [rdx + 6] ; ret
0x000000000015cbb7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000015ccbd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000015ccdd : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000117c50 : lea eax, dword ptr [rdx + rax + 2] ; cmp rcx, rax ; sbb eax, eax ; ret
0x00000000000751ee : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a1c2c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002f8e5 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083561 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x00000000000f6637 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000018d505 : lea eax, dword ptr [rdx] ; add byte ptr [rbp - 7], al ; call rsp
0x000000000015cc25 : lea eax, dword ptr [rdx] ; ret
0x0000000000088ed5 : lea eax, dword ptr [rip + 0x10f35] ; ret
0x0000000000086c55 : lea eax, dword ptr [rip + 0x11595] ; ret
0x0000000000021fb1 : lea eax, dword ptr [rip + 0x15a5ec] ; ret
0x0000000000021fc1 : lea eax, dword ptr [rip + 0x15c5c3] ; ret
0x000000000008bf7b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000011efa9 : lea eax, dword ptr [rip + 0x2a46f1] ; pop rbx ; ret
0x000000000011ef71 : lea eax, dword ptr [rip + 0x2a4729] ; pop rbx ; ret
0x000000000011eeb2 : lea eax, dword ptr [rip + 0x2a47e8] ; pop rbx ; ret
0x00000000000f9650 : lea eax, dword ptr [rip + 0x2c8162] ; ret
0x00000000000f9490 : lea eax, dword ptr [rip + 0x2c8322] ; ret
0x000000000007e56c : lea eax, dword ptr [rip + 0x3401ee] ; ret
0x000000000005d5d3 : lea eax, dword ptr [rip + 0x363357] ; pop rbx ; pop rbp ; ret
0x00000000000223eb : lea eax, dword ptr [rip + 0x3a180f] ; ret
0x0000000000108a95 : lea eax, dword ptr [rip + 0x42045] ; ret
0x0000000000108b35 : lea eax, dword ptr [rip + 0x44a75] ; ret
0x0000000000091752 : lea eax, dword ptr [rip + 0x6878] ; ret
0x000000000008cd51 : lea eax, dword ptr [rip + 0x79] ; ret
0x0000000000091766 : lea eax, dword ptr [rip + 0xb1464] ; ret
0x000000000008ae62 : lea eax, dword ptr [rip + 0xb2258] ; ret
0x000000000008aad2 : lea eax, dword ptr [rip + 0xb24c8] ; ret
0x0000000000088642 : lea eax, dword ptr [rip + 0xb4818] ; ret
0x00000000000a2d23 : lea eax, dword ptr [rip + 0xbccb7] ; ret
0x00000000000a38df : lea eax, dword ptr [rip + 0xbddbb] ; ret
0x00000000000a38e7 : lea eax, dword ptr [rip + 0xc0673] ; ret
0x000000000008c6f5 : lea eax, dword ptr [rip + 0xc0ec5] ; ret
0x00000000000a38cb : lea eax, dword ptr [rip + 0xc84f] ; ret
0x000000000008a7b5 : lea eax, dword ptr [rip + 0xce245] ; ret
0x000000000008cbe5 : lea eax, dword ptr [rip + 0xce995] ; ret
0x0000000000088535 : lea eax, dword ptr [rip + 0xced15] ; ret
0x000000000008cd05 : lea eax, dword ptr [rip + 0xd0085] ; ret
0x000000000008bf8f : lea eax, dword ptr [rip + 0xd40cb] ; ret
0x00000000000a2d1b : lea eax, dword ptr [rip + 0xd48f] ; ret
0x000000000008bf97 : lea eax, dword ptr [rip + 0xd6853] ; ret
0x0000000000086e42 : lea eax, dword ptr [rip + 0xdb688] ; ret
0x00000000000870a5 : lea eax, dword ptr [rip + 5] ; ret
0x000000000008cdb4 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000088f21 : lea eax, dword ptr [rip + 9] ; ret
0x0000000000092c9b : lea eax, dword ptr [rip - 0x511] ; ret
0x00000000001aa5e4 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x00000000000c7785 : lea eax, dword ptr [rsi + rcx*8] ; jmp 0xc7751
0x00000000000b0821 : lea eax, dword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000f7a0b : lea eax, dword ptr [rsp - 1] ; jmp 0xf79d9
0x000000000006a00b : lea ebp, dword ptr [rax - 0x76000002] ; ret
0x0000000000179730 : lea ebx, dword ptr [rax] ; hlt ; jmp qword ptr [rdi]
0x0000000000050b9c : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000000513ee : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0xa9e9
0x0000000000174331 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000a3b7a : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000a3cc2 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000142c50 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009cdae : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000004bebc : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x00000000000616d4 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000fdee5 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000015a506 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x15aa59 ; ret
0x000000000015a804 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x15aa59 ; ret
0x000000000015a824 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x15aa59 ; ret
0x000000000015a844 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x15aa59 ; ret
0x00000000001a1b8e : lea ecx, dword ptr [rdx + 0xd1cfff1] ; mov dh, 0x88 ; int1 ; jmp qword ptr [rdx]
0x000000000015a866 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x15aa59 ; ret
0x000000000015a886 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x15aa59 ; ret
0x000000000015a8a6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x15aa59 ; ret
0x000000000015a6fc : lea ecx, dword ptr [rdx + 1] ; jne 0x15aa59 ; ret
0x000000000015a71e : lea ecx, dword ptr [rdx + 2] ; jne 0x15aa59 ; ret
0x000000000015a744 : lea ecx, dword ptr [rdx + 3] ; jne 0x15aa59 ; ret
0x000000000015a75c : lea ecx, dword ptr [rdx + 4] ; jne 0x15aa59 ; ret
0x0000000000074751 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000777c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000015a782 : lea ecx, dword ptr [rdx + 5] ; jne 0x15aa59 ; ret
0x000000000015a7a4 : lea ecx, dword ptr [rdx + 6] ; jne 0x15aa59 ; ret
0x000000000015a7c2 : lea ecx, dword ptr [rdx + 7] ; jne 0x15aa59 ; ret
0x000000000015a49e : lea ecx, dword ptr [rdx + 8] ; jne 0x15aa59 ; ret
0x000000000015a7e4 : lea ecx, dword ptr [rdx + 9] ; jne 0x15aa59 ; ret
0x00000000000384f0 : lea ecx, dword ptr [rdx] ; jmp 0x38546
0x0000000000039c80 : lea ecx, dword ptr [rdx] ; jmp 0x39cd6
0x00000000000a407b : lea ecx, dword ptr [rsp + 0x28] ; call rbx
0x00000000000a4109 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000001247be : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001960fe : lea edi, dword ptr [rbp + rbp*8 - 1] ; sbb al, 0xd ; xchg eax, ebp ; jnp 0x1960fd ; jmp qword ptr [rdx]
0x0000000000128212 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x00000000001277e2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000123c05 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000008c786 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8c778 ; mov rax, rdi ; ret
0x00000000000917f6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x917e6 ; ret
0x000000000009d91d : lea edi, dword ptr [rdi + 0x10] ; jne 0x9dff9 ; ret
0x000000000009f001 : lea edi, dword ptr [rdi + 0x10] ; jne 0x9f809 ; ret
0x000000000009d940 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9dff9 ; ret
0x000000000009f024 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9f809 ; ret
0x000000000009d965 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9dff9 ; ret
0x000000000009f049 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9f809 ; ret
0x000000000009d983 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9dff9 ; ret
0x000000000009f077 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9f809 ; ret
0x000000000009d9a3 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9dff9 ; ret
0x000000000009f0a7 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9f809 ; ret
0x000000000009d9c6 : lea edi, dword ptr [rdi + 0x15] ; jne 0x9dff9 ; ret
0x000000000009f0da : lea edi, dword ptr [rdi + 0x15] ; jne 0x9f809 ; ret
0x000000000009d9e5 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9dff9 ; ret
0x000000000009f109 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9f809 ; ret
0x000000000009da05 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9dff9 ; ret
0x000000000009f139 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9f809 ; ret
0x000000000009da25 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9dff9 ; ret
0x000000000009f169 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9f809 ; ret
0x000000000009da48 : lea edi, dword ptr [rdi + 0x19] ; jne 0x9dff9 ; ret
0x000000000009f19c : lea edi, dword ptr [rdi + 0x19] ; jne 0x9f809 ; ret
0x000000000009da7d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9dff9 ; ret
0x000000000009f1d1 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9f809 ; ret
0x000000000009daab : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9dff9 ; ret
0x000000000009f1ff : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9f809 ; ret
0x000000000009dadb : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9dff9 ; ret
0x000000000009f22f : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9f809 ; ret
0x000000000009db07 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9dff9 ; ret
0x000000000009f25b : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9f809 ; ret
0x000000000009db37 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9dff9 ; ret
0x000000000009f28b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9f809 ; ret
0x000000000009db67 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9dff9 ; ret
0x000000000009f2bb : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9f809 ; ret
0x000000000009db97 : lea edi, dword ptr [rdi + 0x20] ; jne 0x9dff9 ; ret
0x000000000009f2eb : lea edi, dword ptr [rdi + 0x20] ; jne 0x9f809 ; ret
0x000000000009d863 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9dff9 ; ret
0x000000000009ef07 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9f809 ; ret
0x000000000009d881 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9dff9 ; ret
0x000000000009ef35 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9f809 ; ret
0x000000000009d8a1 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9dff9 ; ret
0x000000000009ef55 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9f809 ; ret
0x000000000009d8c3 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9dff9 ; ret
0x000000000009ef77 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9f809 ; ret
0x000000000009d8e3 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9dff9 ; ret
0x000000000009efa7 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9f809 ; ret
0x000000000009d903 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9dff9 ; ret
0x000000000009efd7 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9f809 ; ret
0x000000000009d737 : lea edi, dword ptr [rdi + 1] ; jne 0x9dff9 ; ret
0x000000000009edda : lea edi, dword ptr [rdi + 1] ; jne 0x9f809 ; ret
0x000000000009d75b : lea edi, dword ptr [rdi + 2] ; jne 0x9dff9 ; ret
0x000000000009edff : lea edi, dword ptr [rdi + 2] ; jne 0x9f809 ; ret
0x000000000009d77e : lea edi, dword ptr [rdi + 3] ; jne 0x9dff9 ; ret
0x000000000009ee22 : lea edi, dword ptr [rdi + 3] ; jne 0x9f809 ; ret
0x000000000009d799 : lea edi, dword ptr [rdi + 4] ; jne 0x9dff9 ; ret
0x000000000009ee3d : lea edi, dword ptr [rdi + 4] ; jne 0x9f809 ; ret
0x000000000009d7bc : lea edi, dword ptr [rdi + 5] ; jne 0x9dff9 ; ret
0x000000000009ee60 : lea edi, dword ptr [rdi + 5] ; jne 0x9f809 ; ret
0x000000000009d7e1 : lea edi, dword ptr [rdi + 6] ; jne 0x9dff9 ; ret
0x000000000009ee85 : lea edi, dword ptr [rdi + 6] ; jne 0x9f809 ; ret
0x000000000009d7ff : lea edi, dword ptr [rdi + 7] ; jne 0x9dff9 ; ret
0x000000000009eea3 : lea edi, dword ptr [rdi + 7] ; jne 0x9f809 ; ret
0x000000000009d81b : lea edi, dword ptr [rdi + 8] ; jne 0x9dff9 ; ret
0x000000000009eebf : lea edi, dword ptr [rdi + 8] ; jne 0x9f809 ; ret
0x000000000009d83e : lea edi, dword ptr [rdi + 9] ; jne 0x9dff9 ; ret
0x000000000009eee2 : lea edi, dword ptr [rdi + 9] ; jne 0x9f809 ; ret
0x0000000000112211 : lea edi, dword ptr [rip + 0x2b0d69] ; call rax
0x0000000000111946 : lea edi, dword ptr [rip + 0x2b15d4] ; call rax
0x000000000010ae1e : lea edi, dword ptr [rip - 0x174] ; call rax
0x0000000000021f5c : lea edi, dword ptr [rsi + rdx] ; call rax
0x000000000019aa86 : lea edi, dword ptr [rsp + rdi*8 - 1] ; sbb al, 0xd ; jl 0x19aa94 ; jmp qword ptr [rdx]
0x0000000000037c89 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x38640e], edx ; ret
0x000000000004e7ff : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e7d2
0x0000000000142d24 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000096da1 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000fd6b7 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007537d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000087136 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000143118 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000121351 : lea edx, dword ptr [rip + 0x29c829] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000746ac : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000067d0b : lea esi, dword ptr [rax - 0x76000002] ; ret
0x00000000000f7d93 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7dcd
0x00000000000f7e64 : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7e9f
0x00000000000783b0 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eb2 : lea esi, dword ptr [rdi] ; ret 0x793b
0x00000000000463e5 : lea esi, dword ptr [rip + 0x195] ; call rax
0x000000000006f8ba : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007c18a : lea esi, dword ptr [rip - 0x1780] ; call rax
0x000000000007c58a : lea esi, dword ptr [rip - 0x1b80] ; call rax
0x000000000007ac72 : lea esi, dword ptr [rip - 0x268] ; call rax
0x000000000006fc16 : lea esi, dword ptr [rip - 0x32c] ; call rax
0x000000000007aeda : lea esi, dword ptr [rip - 0x4d0] ; call rax
0x000000000012d875 : lea esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012d272 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000121c25 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b97e : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d0a8 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000b3d95 : lea esp, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000087135 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000142c4f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000384ef : lea r9, qword ptr [rdx] ; jmp 0x38547
0x0000000000039c7f : lea r9, qword ptr [rdx] ; jmp 0x39cd7
0x00000000000a407a : lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a4108 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000f7a0a : lea rax, qword ptr [r12 - 1] ; jmp 0xf79da
0x00000000000a18dd : lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000c27e1 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008bef3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008bf03 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000970a3 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008bed3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000bcc11 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000049585 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a7
0x00000000001217ca : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c6479 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6379 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000097ba9 : lea rax, qword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000a39b0 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008a9ac : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a1543 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000009e66b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e680 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009e69e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e6be : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e6e1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e700 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009e720 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009e740 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009e763 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009e788 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009e7a6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009e7c6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009e7e2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009e802 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009e822 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009e842 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f692 : lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009f8f8 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009e5bc : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e5dc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009e5fe : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009e61e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009e63e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009e658 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000096a43 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096a57 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096a62 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096a76 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096a86 : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096a96 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e56a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096a36 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e589 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e59e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008bf28 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008bf38 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008be22 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000093b06 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000013d103 : lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000011828f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000008a8a8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000a348d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a35f0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000a3610 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000a3600 : lea rax, qword ptr [rdi - 8] ; ret
0x000000000009e4f2 : lea rax, qword ptr [rdi] ; ret
0x000000000015ccfc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015cd1c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015cd3e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015cd5e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015cd7e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015cc0e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000015cc36 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000015cc4c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000015cc64 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000015cc7a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000015cc8c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000015ccaa : lea rax, qword ptr [rdx + 6] ; ret
0x000000000015cbb6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000015ccbc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000015ccdc : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002f8e4 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000083560 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000015cc24 : lea rax, qword ptr [rdx] ; ret
0x0000000000088ed4 : lea rax, qword ptr [rip + 0x10f35] ; ret
0x0000000000086c54 : lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000021fb0 : lea rax, qword ptr [rip + 0x15a5ec] ; ret
0x0000000000021fc0 : lea rax, qword ptr [rip + 0x15c5c3] ; ret
0x000000000008bf7a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000011efa8 : lea rax, qword ptr [rip + 0x2a46f1] ; pop rbx ; ret
0x000000000011ef70 : lea rax, qword ptr [rip + 0x2a4729] ; pop rbx ; ret
0x000000000011eeb1 : lea rax, qword ptr [rip + 0x2a47e8] ; pop rbx ; ret
0x00000000000f964f : lea rax, qword ptr [rip + 0x2c8162] ; ret
0x00000000000f948f : lea rax, qword ptr [rip + 0x2c8322] ; ret
0x000000000007e56b : lea rax, qword ptr [rip + 0x3401ee] ; ret
0x000000000005d5d2 : lea rax, qword ptr [rip + 0x363357] ; pop rbx ; pop rbp ; ret
0x00000000000223ea : lea rax, qword ptr [rip + 0x3a180f] ; ret
0x0000000000108a94 : lea rax, qword ptr [rip + 0x42045] ; ret
0x0000000000108b34 : lea rax, qword ptr [rip + 0x44a75] ; ret
0x0000000000091751 : lea rax, qword ptr [rip + 0x6878] ; ret
0x000000000008cd50 : lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000091765 : lea rax, qword ptr [rip + 0xb1464] ; ret
0x000000000008ae61 : lea rax, qword ptr [rip + 0xb2258] ; ret
0x000000000008aad1 : lea rax, qword ptr [rip + 0xb24c8] ; ret
0x0000000000088641 : lea rax, qword ptr [rip + 0xb4818] ; ret
0x00000000000a2d22 : lea rax, qword ptr [rip + 0xbccb7] ; ret
0x00000000000a38de : lea rax, qword ptr [rip + 0xbddbb] ; ret
0x00000000000a38e6 : lea rax, qword ptr [rip + 0xc0673] ; ret
0x000000000008c6f4 : lea rax, qword ptr [rip + 0xc0ec5] ; ret
0x00000000000a38ca : lea rax, qword ptr [rip + 0xc84f] ; ret
0x000000000008a7b4 : lea rax, qword ptr [rip + 0xce245] ; ret
0x000000000008cbe4 : lea rax, qword ptr [rip + 0xce995] ; ret
0x0000000000088534 : lea rax, qword ptr [rip + 0xced15] ; ret
0x000000000008cd04 : lea rax, qword ptr [rip + 0xd0085] ; ret
0x000000000008bf8e : lea rax, qword ptr [rip + 0xd40cb] ; ret
0x00000000000a2d1a : lea rax, qword ptr [rip + 0xd48f] ; ret
0x000000000008bf96 : lea rax, qword ptr [rip + 0xd6853] ; ret
0x0000000000086e41 : lea rax, qword ptr [rip + 0xdb688] ; ret
0x00000000000870a4 : lea rax, qword ptr [rip + 5] ; ret
0x000000000008cdb3 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000088f20 : lea rax, qword ptr [rip + 9] ; ret
0x0000000000092c9a : lea rax, qword ptr [rip - 0x511] ; ret
0x00000000000c7784 : lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7752
0x00000000000b0820 : lea rax, qword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000a35c9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000009cdad : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a3b79 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a3cc1 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fdee4 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000777c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000021f5b : lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000001247bd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000128211 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001277e1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000123c04 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008c785 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8c779 ; mov rax, rdi ; ret
0x00000000000917f5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x917e7 ; ret
0x0000000000112210 : lea rdi, qword ptr [rip + 0x2b0d69] ; call rax
0x0000000000111945 : lea rdi, qword ptr [rip + 0x2b15d4] ; call rax
0x000000000010ae1d : lea rdi, qword ptr [rip - 0x174] ; call rax
0x0000000000142d23 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000004e7fe : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e7d3
0x00000000000fd6b6 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000143117 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000463e4 : lea rsi, qword ptr [rip + 0x195] ; call rax
0x000000000006f8b9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007c189 : lea rsi, qword ptr [rip - 0x1780] ; call rax
0x000000000007c589 : lea rsi, qword ptr [rip - 0x1b80] ; call rax
0x000000000007ac71 : lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006fc15 : lea rsi, qword ptr [rip - 0x32c] ; call rax
0x000000000007aed9 : lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x000000000012d874 : lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012d271 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000121c24 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b97d : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000189045 : leave ; add byte ptr [rax], al ; ret
0x000000000007f2f2 : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000002bc8 : leave ; clc ; ret
0x000000000008ab76 : leave ; cmove rax, rdx ; ret
0x000000000013cf09 : leave ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000002d506 : leave ; je 0x2d50e ; call rcx
0x000000000005dd59 : leave ; je 0x5dd64 ; ret
0x0000000000097b1a : leave ; je 0x97ae0 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000001a1074 : leave ; jl 0x1a106b ; jmp qword ptr [rdx]
0x00000000000bcfbf : leave ; jmp 0xbcf87
0x0000000000096b11 : leave ; jne 0x96b04 ; ret
0x00000000000a1320 : leave ; jne 0xa1313 ; ret
0x00000000000a13d0 : leave ; jne 0xa13c3 ; ret
0x00000000000a1690 : leave ; jne 0xa1687 ; sub rax, 1 ; ret
0x00000000000a3664 : leave ; jne 0xa365c ; ret
0x0000000000103e86 : leave ; jns 0x103e60 ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104008 : leave ; jns 0x104047 ; mov eax, r8d ; sub eax, r9d ; ret
0x000000000013d102 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000009c891 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a30c9 : leave ; mov dword ptr [r8 + 4], ecx ; jne 0xa30a0 ; ret
0x00000000000a1e94 : leave ; mov dword ptr [rdx], ecx ; jne 0xa1e8e ; ret
0x000000000009696f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000039b4e : leave ; ret
0x0000000000079cf6 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000017910f : ljmp ptr [rax + 0x67fff3bd] ; ret
0x0000000000188ef3 : ljmp ptr [rax + rax*8 + 0x53b40000] ; in eax, dx ; jmp rsp
0x000000000018da73 : ljmp ptr [rax + rdi*4 + 0x1ed40002] ; cli ; call rsp
0x000000000018aef3 : ljmp ptr [rax - 0x737bffff] ; call rsp
0x0000000000187cef : ljmp ptr [rax - 4] ; call qword ptr [rdx]
0x000000000017919b : ljmp ptr [rbp - 0x72000c37] ; ret
0x000000000017c4bf : ljmp ptr [rbx + rsi*4 - 0x42e30006] ; cli ; jmp rsp
0x000000000017a075 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000179497 : ljmp ptr [rcx] ; push rbx ; call rcx
0x000000000001f6a3 : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f683
0x00000000001870eb : ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x000000000018d763 : ljmp ptr [rdi + rbx*4 - 0x583bfffe] ; stc ; jmp rsp
0x00000000000bf9e4 : ljmp ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000186877 : ljmp ptr [rsi - 0x4f00025b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x000000000017955f : ljmp ptr [rsi] ; div bl ; jmp rsp
0x00000000001878af : ljmp ptr [rsi] ; jp 0x1878b3 ; call rsp
0x000000000018935b : ljmp ptr [rsp - 0x77230000] ; out dx, al ; call rsp
0x0000000000189515 : lock add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rsp
0x000000000016043e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019d6e5 : lock add byte ptr [rax], al ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000073dda : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f05e3 : lock and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x0000000000127545 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000127584 : lock dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000137ff0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001931fc : lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; push rax ; push rdi ; jmp 0x19320a
0x0000000000188c0d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; adc al, 0xe2 ; jmp 0x188c19
0x00000000001639d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000018b13d : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; je 0x18b17c ; hlt ; jmp rsp
0x00000000001a2efc : lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdx]
0x00000000001a0bfc : lodsb al, byte ptr [rsi] ; and eax, 0xc7800001 ; int1 ; call qword ptr [rbx]
0x0000000000187aa5 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffcab]
0x0000000000187be1 : lodsb al, byte ptr [rsi] ; cld ; call rsp
0x0000000000187bdd : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000187a61 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000018935c : lodsb al, byte ptr [rsi] ; in al, 0 ; add ch, bl ; mov dh, ch ; call rsp
0x0000000000196f99 : lodsb al, byte ptr [rsi] ; in eax, dx ; call qword ptr [rcx]
0x00000000001952fc : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov al, 0x92 ; in eax, dx ; call qword ptr [rax]
0x000000000018a7b4 : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; ret 0xfff1
0x00000000001a85fc : lodsb al, byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001ac7fc : lodsb al, byte ptr [rsi] ; loope 0x1ac807 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x000000000018da74 : lodsb al, byte ptr [rsi] ; mov eax, 0x1ed40002 ; cli ; call rsp
0x00000000001a1e64 : lodsb al, byte ptr [rsi] ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000138614 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001769bd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019ccfc : lodsb al, byte ptr [rsi] ; out 0, al ; add al, dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a3efc : lodsb al, byte ptr [rsi] ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rsi - 0xd], cl ; jmp qword ptr [rbx]
0x00000000001a50fc : lodsb al, byte ptr [rsi] ; push 1 ; add al, ah ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x0000000000108a4f : lodsb al, byte ptr [rsi] ; ret
0x000000000006a399 : lodsb al, byte ptr [rsi] ; ret 0xffff
0x0000000000188ef4 : lodsb al, byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0x53 ; in eax, dx ; jmp rsp
0x00000000000066b0 : lodsb al, byte ptr [rsi] ; sbb eax, 0x120000 ; or al, 0 ; push rax ; ret
0x00000000001869a9 : lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000001868e9 : lodsb al, byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x00000000000e32d4 : lodsb al, byte ptr [rsi] ; sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x000000000019767c : lodsb al, byte ptr [rsi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x0000000000047dec : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000003def4 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000064d13 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x0000000000188c45 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; jle 0x188c37 ; jmp 0x188c51
0x0000000000187a5d : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000187c55 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000187b19 : lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000187b15 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x0000000000187a99 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x00000000001a5db1 : lodsd eax, dword ptr [rsi] ; hlt ; jmp qword ptr [rdi]
0x0000000000195eb4 : lodsd eax, dword ptr [rsi] ; jns 0x195ea7 ; jmp qword ptr [rdx]
0x0000000000194b8c : lodsd eax, dword ptr [rsi] ; jrcxz 0x194b7e ; jmp qword ptr [rdx]
0x00000000001a1b4c : lodsd eax, dword ptr [rsi] ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000010068f : lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x100686
0x000000000013c180 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000067b1e : lodsd eax, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000194f9c : lodsd eax, dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000038c82 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000186971 : lodsd eax, dword ptr [rsi] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x0000000000085d90 : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000085e43 : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000a5565 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000085e42 : lodsq rax, qword ptr [rsi] ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000001166c1 : loop 0x116653 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011b4df : loop 0x11b4da ; ret 0xc001
0x000000000012242a : loop 0x122404 ; out dx, eax ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000125eec : loop 0x125f76 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000012ac9a : loop 0x12ac2f ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000013665b : loop 0x1366ae ; add ecx, ebx ; call rax
0x000000000014c7fa : loop 0x14c7f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c7f9 : loop 0x14c7f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f2ca : loop 0x14f2c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f2c9 : loop 0x14f2c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151dea : loop 0x151de5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151de9 : loop 0x151de6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176d5a : loop 0x176daf ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001785f9 : loop 0x1785f2 ; inc dword ptr [rax] ; jrcxz 0x1785f6 ; call qword ptr [rax]
0x0000000000179dbd : loop 0x179db9 ; dec dword ptr [rdi] ; loop 0x179dbd ; jmp rsp
0x0000000000179dc1 : loop 0x179db9 ; jmp rsp
0x0000000000186b01 : loop 0x186b00 ; call rax
0x0000000000186c25 : loop 0x186c24 ; jmp rax
0x0000000000188c11 : loop 0x188c00 ; jmp rsp
0x0000000000196dec : loop 0x196d72 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b14c : loop 0x19b179 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000021f59 : loop 0x21f65 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000000025c5 : loop 0x259f ; ret 0x23cb
0x00000000000376e9 : loop 0x376f3 ; jne 0x376ff ; xor eax, eax ; nop ; ret
0x000000000003c977 : loop 0x3c9a0 ; mov eax, eax ; or rax, rdx ; ret
0x000000000004bec1 : loop 0x4bf08 ; call qword ptr [rbx + rax*8]
0x00000000000519e7 : loop 0x519d9 ; shr dword ptr [rbp + 0x1480001], cl ; ret
0x000000000005e662 : loop 0x5e5f4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000063196 : loop 0x63184 ; scasb al, byte ptr [rdi] ; ret
0x00000000000848df : loop 0x848e5 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x0000000000085624 : loop 0x85676 ; mov edi, edi ; call rax
0x0000000000097fbd : loop 0x97ff5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000009da0a : loop 0x9da15 ; add byte ptr [rax], al ; ret
0x00000000000ba4e6 : loop 0xba4fa ; ret 0x144
0x00000000000ba7b1 : loop 0xba779 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c55c8 : loop 0xc55b4 ; ret 0xffa9
0x00000000000c6202 : loop 0xc623e ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000dbc3c : loop 0xdbc48 ; xor esi, esi ; call 0x8c5c8
0x00000000000e41b0 : loop 0xe41bc ; je 0xe41c0 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e4480 : loop 0xe448c ; je 0xe4490 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x0000000000123bce : loope 0x123b63 ; ret
0x00000000001361d4 : loope 0x136223 ; add esp, 0x58 ; ret
0x000000000014c76a : loope 0x14c765 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014c769 : loope 0x14c766 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f23a : loope 0x14f235 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014f239 : loope 0x14f236 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151d5a : loope 0x151d55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000151d59 : loope 0x151d56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a86b : loope 0x15a872 ; add byte ptr [rax], al ; ret
0x00000000001626fb : loope 0x162705 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001651de : loope 0x165244 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000177529 : loope 0x17751a ; call rbx
0x000000000017aae9 : loope 0x17aaf3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000186c21 : loope 0x186c20 ; jmp rax
0x000000000018a1b1 : loope 0x18a1a4 ; jmp rsp
0x000000000018c6b1 : loope 0x18c6ac ; jmp rsp
0x000000000018e145 : loope 0x18e14d ; add ah, dl ; ret 0xfffa
0x000000000018e14d : loope 0x18e157 ; add byte ptr [rsp + rax*8 - 6], dl ; jmp rsp
0x000000000018e639 : loope 0x18e63a ; jmp rsp
0x0000000000193d15 : loope 0x193d04 ; jmp qword ptr [rdx]
0x0000000000193d5d : loope 0x193d4c ; jmp qword ptr [rdx]
0x00000000001a91bd : loope 0x1a91b5 ; jmp qword ptr [rdx]
0x00000000001a9205 : loope 0x1a91fd ; jmp qword ptr [rdx]
0x00000000001a9204 : loope 0x1a91fe ; jmp qword ptr [rdx]
0x00000000001a924d : loope 0x1a9245 ; jmp qword ptr [rdx]
0x00000000001a9295 : loope 0x1a928d ; jmp qword ptr [rdx]
0x00000000001a92dd : loope 0x1a92d5 ; jmp qword ptr [rdx]
0x00000000001a9325 : loope 0x1a931d ; jmp qword ptr [rdx]
0x00000000001ab691 : loope 0x1ab68a ; call qword ptr [rcx]
0x00000000001ac7e5 : loope 0x1ac7ee ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ac7fd : loope 0x1ac806 ; add byte ptr [rax], dl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ac815 : loope 0x1ac81e ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ac82d : loope 0x1ac836 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x000000000002350f : loope 0x23562 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000023763 : loope 0x2376d ; cmp al, byte ptr [rax] ; ret
0x00000000000382a6 : loope 0x38266 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038386 : loope 0x38346 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038b17 : loope 0x38b69 ; mov dword ptr [rdi], ecx ; ret
0x0000000000038b48 : loope 0x38b9b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000038bbd : loope 0x38c10 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000003fcc7 : loope 0x3fccd ; dec dword ptr [rax - 0x77] ; ret
0x000000000007033b : loope 0x7038e ; mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000071281 : loope 0x71256 ; mov dword ptr [rdi], ecx ; ret
0x000000000008057a : loope 0x805b7 ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000091bfb : loope 0x91c0d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a1219 : loope 0xa1288 ; nop dword ptr [rax + rax] ; ret
0x00000000000a19ae : loope 0xa19b6 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000a1c57 : loope 0xa1c18 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a2f9e : loope 0xa2fb3 ; je 0xa2fc4 ; ret
0x00000000000bd48d : loope 0xbd41a ; ret 0xf631
0x00000000000e0a97 : loope 0xe0a9c ; ret
0x0000000000107acb : loopne 0x107ad0 ; ret
0x00000000001081f8 : loopne 0x10820d ; cmp eax, 4 ; je 0x108207 ; ret
0x0000000000108347 : loopne 0x108359 ; pop r12 ; ret
0x000000000010c6a0 : loopne 0x10c6b0 ; or eax, esi ; bswap eax ; ret
0x000000000010c6b1 : loopne 0x10c6cc ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x0000000000114848 : loopne 0x1148ae ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001148e7 : loopne 0x11494d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000117844 : loopne 0x117843 ; add eax, 0x10 ; ret
0x00000000001180be : loopne 0x1180c9 ; add eax, 8 ; ret
0x000000000011825b : loopne 0x118268 ; cdqe ; shr rax, 4 ; ret
0x000000000011d69d : loopne 0x11d6aa ; pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000012ae27 : loopne 0x12ae30 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f0c1 : loopne 0x12f131 ; nop dword ptr [rax + rax] ; ret
0x0000000000143171 : loopne 0x143188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143170 : loopne 0x143189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001432c1 : loopne 0x1432d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001432c0 : loopne 0x1432d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143411 : loopne 0x143428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143410 : loopne 0x143429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143561 : loopne 0x143578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143560 : loopne 0x143579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001436b1 : loopne 0x1436c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001436b0 : loopne 0x1436c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143801 : loopne 0x143818 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143800 : loopne 0x143819 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143951 : loopne 0x143968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143950 : loopne 0x143969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143a9f : loopne 0x143ab6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143a9e : loopne 0x143ab7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143bf1 : loopne 0x143c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143bf0 : loopne 0x143c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143d41 : loopne 0x143d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143d40 : loopne 0x143d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e91 : loopne 0x143ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143e90 : loopne 0x143ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143fe1 : loopne 0x143ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000143fe0 : loopne 0x143ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144131 : loopne 0x144148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144130 : loopne 0x144149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144281 : loopne 0x144298 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000144280 : loopne 0x144299 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001443d1 : loopne 0x1443e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001443d0 : loopne 0x1443e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145b41 : loopne 0x145b58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145b40 : loopne 0x145b59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145c91 : loopne 0x145ca8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145c90 : loopne 0x145ca9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145de1 : loopne 0x145df8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145de0 : loopne 0x145df9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145f31 : loopne 0x145f48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000145f30 : loopne 0x145f49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146081 : loopne 0x146098 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146080 : loopne 0x146099 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001461d1 : loopne 0x1461e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001461d0 : loopne 0x1461e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146321 : loopne 0x146338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146320 : loopne 0x146339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014646f : loopne 0x146486 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014646e : loopne 0x146487 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001465c1 : loopne 0x1465d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001465c0 : loopne 0x1465d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146711 : loopne 0x146728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146710 : loopne 0x146729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146861 : loopne 0x146878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146860 : loopne 0x146879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001469b1 : loopne 0x1469c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001469b0 : loopne 0x1469c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146b01 : loopne 0x146b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146b00 : loopne 0x146b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146c51 : loopne 0x146c68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146c50 : loopne 0x146c69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146da1 : loopne 0x146db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000146da0 : loopne 0x146db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148511 : loopne 0x148528 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148510 : loopne 0x148529 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148661 : loopne 0x148678 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148660 : loopne 0x148679 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001487b1 : loopne 0x1487c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001487b0 : loopne 0x1487c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148901 : loopne 0x148918 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148900 : loopne 0x148919 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148a51 : loopne 0x148a68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148a50 : loopne 0x148a69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148ba1 : loopne 0x148bb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148ba0 : loopne 0x148bb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148cf1 : loopne 0x148d08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148cf0 : loopne 0x148d09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148e3f : loopne 0x148e56 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148e3e : loopne 0x148e57 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148f91 : loopne 0x148fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000148f90 : loopne 0x148fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001490e1 : loopne 0x1490f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001490e0 : loopne 0x1490f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149231 : loopne 0x149248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149230 : loopne 0x149249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149381 : loopne 0x149398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149380 : loopne 0x149399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001494d1 : loopne 0x1494e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001494d0 : loopne 0x1494e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149621 : loopne 0x149638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149620 : loopne 0x149639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149771 : loopne 0x149788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000149770 : loopne 0x149789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000174334 : loopne 0x174314 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001787b0 : loopne 0x178801 ; inc dword ptr [rax] ; jmp qword ptr [rax]
0x00000000001787d0 : loopne 0x178822 ; inc dword ptr [rax] ; jmp qword ptr [rax]
0x000000000017884c : loopne 0x1788a3 ; call qword ptr [rax]
0x0000000000178a38 : loopne 0x178aa5 ; call qword ptr [rax]
0x0000000000178ab4 : loopne 0x178b28 ; inc dword ptr [rax] ; insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000178ccc : loopne 0x178c63 ; inc dword ptr [rax - 0x71] ; call rax
0x0000000000186748 : loopne 0x18676f ; sti ; call rax
0x0000000000186ac0 : loopne 0x186a7d ; std ; call qword ptr [rcx]
0x0000000000186ac0 : loopne 0x186a81 ; std ; call qword ptr [rcx]
0x0000000000186ae0 : loopne 0x186a9e ; std ; call qword ptr [rcx]
0x0000000000186ae0 : loopne 0x186aa2 ; std ; call qword ptr [rcx]
0x0000000000186afd : loopne 0x186afc ; call rax
0x0000000000186b9d : loopne 0x186b9c ; jmp qword ptr [rax]
0x0000000000186b9c : loopne 0x186b9d ; jmp qword ptr [rax]
0x0000000000186bbd : loopne 0x186bbc ; jmp rax
0x0000000000186c24 : loopne 0x186c0b ; sti ; jmp rax
0x0000000000186c28 : loopne 0x186c11 ; sti ; jmp rax
0x0000000000186c2c : loopne 0x186c1b ; sti ; call qword ptr [rax - 0x2f000440]
0x0000000000186cc0 : loopne 0x186ccf ; cld ; jmp rax
0x0000000000186cc4 : loopne 0x186cd5 ; cld ; jmp rax
0x0000000000186cc4 : loopne 0x186cd9 ; cld ; jmp rax
0x0000000000186cc8 : loopne 0x186cdb ; cld ; jmp rax
0x0000000000186ea0 : loopne 0x186ed7 ; cld ; call rax
0x0000000000193b6d : loopne 0x193b5c ; jmp qword ptr [rdx]
0x0000000000193bb5 : loopne 0x193ba4 ; jmp qword ptr [rdx]
0x000000000019a140 : loopne 0x19a155 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019abf4 : loopne 0x19abf2 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bea0 : loopne 0x19bee2 ; out dx, al ; call rsp
0x00000000001a2670 : loopne 0x1a2679 ; jmp rdx
0x00000000001a3a70 : loopne 0x1a3aa0 ; jmp rdx
0x00000000001a5100 : loopne 0x1a5168 ; hlt ; jmp qword ptr [rcx]
0x00000000001a5520 : loopne 0x1a5598 ; hlt ; jmp qword ptr [rcx]
0x00000000001a7e50 : loopne 0x1a7e7f ; cmc ; jmp qword ptr [rcx]
0x00000000001a8240 : loopne 0x1a8274 ; cmc ; jmp qword ptr [rcx]
0x00000000001aab90 : loopne 0x1aab68 ; cmc ; jmp qword ptr [rsi]
0x00000000001ac72d : loopne 0x1ac736 ; add byte ptr [rax], ah ; cli ; cmc ; call qword ptr [rax]
0x00000000001ac745 : loopne 0x1ac74e ; add byte ptr [rax], bl ; cli ; cmc ; call qword ptr [rax]
0x00000000001adef4 : loopne 0x1ade80 ; cmc ; jmp qword ptr [rdx]
0x00000000001af355 : loopne 0x1af34e ; jmp qword ptr [rdx]
0x00000000001af475 : loopne 0x1af46e ; jmp qword ptr [rdx]
0x00000000001af50d : loopne 0x1af506 ; jmp qword ptr [rdx]
0x00000000001af50c : loopne 0x1af507 ; jmp qword ptr [rdx]
0x00000000001af555 : loopne 0x1af54e ; jmp qword ptr [rdx]
0x00000000001af5b5 : loopne 0x1af5ae ; jmp qword ptr [rdx]
0x00000000001af5b4 : loopne 0x1af5af ; jmp qword ptr [rdx]
0x00000000001af5fd : loopne 0x1af5f6 ; jmp qword ptr [rdx]
0x000000000002fcc3 : loopne 0x2fcd2 ; movzx eax, ax ; ret
0x000000000002fd03 : loopne 0x2fd0c ; movzx eax, ax ; ret
0x000000000002fda3 : loopne 0x2fdae ; movzx eax, ax ; ret
0x000000000002fe83 : loopne 0x2fe88 ; ret
0x000000000002fefc : loopne 0x2ff01 ; ret
0x000000000002ff0c : loopne 0x2ff1b ; movzx eax, ax ; ret
0x000000000002ff4c : loopne 0x2ff55 ; movzx eax, ax ; ret
0x000000000002fed3 : loopne 0x2ff56 ; ret
0x000000000002ffec : loopne 0x2fff7 ; movzx eax, ax ; ret
0x0000000000036705 : loopne 0x36711 ; ret
0x0000000000037844 : loopne 0x37894 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000385cd : loopne 0x385d6 ; sub eax, 1 ; ret
0x0000000000038956 : loopne 0x389a2 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046de1 : loopne 0x46e06 ; or eax, esi ; ret
0x000000000006ca45 : loopne 0x6caa7 ; pop rbp ; pop r12 ; ret
0x000000000006ce11 : loopne 0x6ce57 ; pop rsp ; ret
0x000000000006d629 : loopne 0x6d68b ; pop rbp ; pop r12 ; ret
0x000000000006d649 : loopne 0x6d68f ; pop rsp ; ret
0x000000000006e4ff : loopne 0x6e505 ; add byte ptr [rax], al ; jmp rax
0x000000000006e52b : loopne 0x6e531 ; add byte ptr [rax], al ; call rax
0x000000000006e55d : loopne 0x6e563 ; add byte ptr [rax], al ; call rax
0x000000000006e59f : loopne 0x6e5a5 ; add byte ptr [rax], al ; jmp rax
0x0000000000072666 : loopne 0x726cc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000726d7 : loopne 0x72739 ; pop rbp ; pop r12 ; ret
0x00000000000736e6 : loopne 0x736eb ; ret
0x00000000000736f6 : loopne 0x736fb ; ret
0x00000000000793fa : loopne 0x79444 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000794a8 : loopne 0x794f2 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007c28d : loopne 0x7c2f1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d208 : loopne 0x7d26e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000801b6 : loopne 0x80143 ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000000806a9 : loopne 0x806e3 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000086028 : loopne 0x8608e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000861fd : loopne 0x86263 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008c67f : loopne 0x8c676 ; ret
0x0000000000091e6c : loopne 0x91e7e ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x0000000000093dac : loopne 0x93df2 ; pop rsp ; ret
0x0000000000093da7 : loopne 0x93e0c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009db0c : loopne 0x9db16 ; add byte ptr [rax], al ; ret
0x00000000000a1c0d : loopne 0xa1c27 ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000a1c4d : loopne 0xa1c67 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a7748 : loopne 0xa775c ; xchg eax, esp ; ret 0x294c
0x00000000000ac94a : loopne 0xac95e ; xchg eax, esp ; ret 0x294c
0x00000000000aecf4 : loopne 0xaed3a ; pop rsp ; ret
0x00000000000aedc6 : loopne 0xaee0e ; pop rsp ; pop r13 ; ret
0x00000000000b178c : loopne 0xb17d6 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b1778 : loopne 0xb17de ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b29b6 : loopne 0xb29c1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000bf8ff : loopne 0xbf90b ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c22a0 : loopne 0xc2306 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d1da2 : loopne 0xd1da9 ; pop rbp ; ret
0x00000000000d1e89 : loopne 0xd1e94 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000e3127 : loopne 0xe312f ; add byte ptr [rax], al ; call 0x1f406
0x00000000000eba56 : loopne 0xebaba ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1c68 : loopne 0xf1cce ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f34a8 : loopne 0xf34de ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000f4e0e : loopne 0xf4d9b ; ret
0x00000000000f528c : loopne 0xf5236 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000f8116 : loopne 0xf817c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd790 : loopne 0xfd79c ; nop word ptr [rax + rax] ; ret
0x00000000000fd7b2 : loopne 0xfd7c1 ; movzx eax, ax ; ret
0x00000000000fd830 : loopne 0xfd83c ; nop word ptr [rax + rax] ; ret
0x00000000000fd8d0 : loopne 0xfd8dc ; nop word ptr [rax + rax] ; ret
0x00000000000fd8f2 : loopne 0xfd8f7 ; ret
0x00000000000fd970 : loopne 0xfd97c ; nop word ptr [rax + rax] ; ret
0x00000000000fd992 : loopne 0xfd99b ; movzx eax, ax ; ret
0x00000000000fda10 : loopne 0xfda1c ; nop word ptr [rax + rax] ; ret
0x00000000000fdaa0 : loopne 0xfdaac ; nop word ptr [rax + rax] ; ret
0x00000000000fdb40 : loopne 0xfdb4c ; nop word ptr [rax + rax] ; ret
0x00000000000fdbe0 : loopne 0xfdbec ; nop word ptr [rax + rax] ; ret
0x00000000000fdc80 : loopne 0xfdc8c ; nop word ptr [rax + rax] ; ret
0x00000000000fdca2 : loopne 0xfdcad ; movzx eax, ax ; ret
0x00000000000fdd20 : loopne 0xfdd2c ; nop word ptr [rax + rax] ; ret
0x00000000000fddbb : loopne 0xfddc4 ; nop dword ptr [rax] ; ret
0x00000000000fde60 : loopne 0xfde6c ; nop word ptr [rax + rax] ; ret
0x00000000000fe03a : loopne 0xfe044 ; nop dword ptr [rax] ; ret
0x00000000000fe0b2 : loopne 0xfe0bc ; nop dword ptr [rax] ; ret
0x00000000000fe0cb : loopne 0xfe0da ; movzx eax, ax ; ret
0x00000000000fe142 : loopne 0xfe14c ; nop dword ptr [rax] ; ret
0x00000000000fe1d2 : loopne 0xfe1dc ; nop dword ptr [rax] ; ret
0x00000000000fe1eb : loopne 0xfe1f0 ; ret
0x00000000000fe252 : loopne 0xfe25c ; nop dword ptr [rax] ; ret
0x00000000000fe26b : loopne 0xfe274 ; movzx eax, ax ; ret
0x00000000000fe2e2 : loopne 0xfe2ec ; nop dword ptr [rax] ; ret
0x00000000000fe362 : loopne 0xfe36c ; nop dword ptr [rax] ; ret
0x00000000000fe3f2 : loopne 0xfe3fc ; nop dword ptr [rax] ; ret
0x00000000000fe482 : loopne 0xfe48c ; nop dword ptr [rax] ; ret
0x00000000000fe512 : loopne 0xfe51c ; nop dword ptr [rax] ; ret
0x00000000000fe52b : loopne 0xfe536 ; movzx eax, ax ; ret
0x00000000000fe5a2 : loopne 0xfe5ac ; nop dword ptr [rax] ; ret
0x00000000000fe6c2 : loopne 0xfe6cc ; nop dword ptr [rax] ; ret
0x00000000000fe87a : loopne 0xfe884 ; nop dword ptr [rax] ; ret
0x0000000000123c6f : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000173d4a : mov ah, 0x13 ; ret
0x00000000000e1ee7 : mov ah, 0x24 ; ret 0
0x000000000018d3a8 : mov ah, 0x31 ; stc ; call rsp
0x000000000018c904 : mov ah, 0x32 ; add al, byte ptr [rax] ; push rsp ; adc bh, al ; call rsp
0x00000000001a2504 : mov ah, 0x3e ; add dword ptr [rax], eax ; cld ; int1 ; jmp qword ptr [rcx]
0x000000000018dc70 : mov ah, 0x41 ; cli ; call qword ptr [rdx + rax*8 + 2]
0x00000000001a2c04 : mov ah, 0x45 ; add dword ptr [rax], eax ; pop rax ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001933ac : mov ah, 0x45 ; jmp 0x1933b2
0x000000000018a1ac : mov ah, 0x4a ; add dword ptr [rax], eax ; and al, 0xe1 ; out dx, eax ; jmp rsp
0x0000000000188ef8 : mov ah, 0x53 ; in eax, dx ; jmp rsp
0x000000000018cda8 : mov ah, 0x61 ; clc ; jmp rsp
0x00000000001871b8 : mov ah, 0x64 ; cld ; inc dword ptr [rsp - 4] ; call rsp
0x000000000018de18 : mov ah, 0x65 ; cli ; jmp rsp
0x000000000018d354 : mov ah, 0x7c ; add al, byte ptr [rax] ; adc r15b, cl ; jmp rsp
0x00000000001876e4 : mov ah, 0x85 ; cld ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x00000000001a7d04 : mov ah, 0x96 ; add dword ptr [rax], eax ; call 0x111a723c
0x000000000018df88 : mov ah, 0x99 ; cli ; jmp rsp
0x00000000001a8104 : mov ah, 0x9a ; add dword ptr [rax], eax ; sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001741f0 : mov ah, 0xa5 ; ret
0x0000000000187bdc : mov ah, 0xac ; cld ; inc dword ptr [rsp + rbp*4 - 4] ; call rsp
0x0000000000187f8c : mov ah, 0xb8 ; add byte ptr [rax], al ; pop rbp ; js 0x187f83 ; jmp rsp
0x000000000018e050 : mov ah, 0xb9 ; cli ; call rsp
0x000000000018db54 : mov ah, 0xbb ; add al, byte ptr [rax] ; add al, 0x2e ; cli ; jmp rsp
0x000000000019a904 : mov ah, 0xc2 ; add byte ptr [rax], al ; cmp byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000001aa904 : mov ah, 0xc2 ; add dword ptr [rax], eax ; js 0x1aa8e3 ; cmc ; jmp qword ptr [rsi]
0x000000000018a820 : mov ah, 0xcc ; int1 ; call rsp
0x000000000019ca04 : mov ah, 0xe3 ; add byte ptr [rax], al ; xchg rax, rbp ; out dx, al ; call qword ptr [rdx]
0x00000000001893fc : mov ah, 0xe8 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; nop ; out dx, al ; jmp rsp
0x000000000017844d : mov ah, 0xf0 ; call rdi
0x000000000018e594 : mov ah, 0xf8 ; add dword ptr [rax], eax ; xlatb ; std ; jmp rsp
0x000000000019e504 : mov ah, 0xfe ; add byte ptr [rax], al ; mov dh, ah ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000189774 : mov ah, 0xff ; add byte ptr [rax], al ; ret
0x00000000000f66d0 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000488d9 : mov ah, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001b7cec : mov ah, 5 ; add byte ptr [rax], al ; ret
0x0000000000187ec1 : mov ah, bh ; call qword ptr [rax]
0x0000000000187611 : mov ah, bh ; call qword ptr [rdx + 0x22fffc87]
0x000000000018758d : mov ah, bh ; call qword ptr [rsi]
0x000000000018774d : mov ah, bh ; call rax
0x0000000000187749 : mov ah, bh ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x00000000001876cd : mov ah, bh ; jmp rsp
0x0000000000173b44 : mov ah, bl ; push rsi ; ret
0x00000000001aac38 : mov ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000188c9d : mov al, 0 ; add ah, dl ; int1 ; jmp 0x188ca9
0x00000000000ccbe1 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012167c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000121635 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001a7cc0 : mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x00000000001a80c0 : mov al, 0x2d ; cmc ; jmp qword ptr [rcx]
0x00000000001a8600 : mov al, 0x38 ; cmc ; jmp qword ptr [rcx]
0x00000000001930d0 : mov al, 0x41 ; jmp 0x1930d6
0x0000000000178768 : mov al, 0x47 ; inc eax ; call rax
0x0000000000128089 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000c29be : mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000127829 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000f7d95 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7dcb
0x00000000000f7e66 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7e9d
0x000000000012f0b8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000017856c : mov al, 0x49 ; int1 ; jmp qword ptr [rax]
0x0000000000103cc7 : mov al, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103c61
0x00000000001787ec : mov al, 0x4f ; call rax
0x000000000017880c : mov al, 0x50 ; call rax
0x000000000017882c : mov al, 0x51 ; call rax
0x0000000000178848 : mov al, 0x52 ; jmp rax
0x0000000000178878 : mov al, 0x53 ; inc eax ; push rbx ; call rax
0x00000000001788b4 : mov al, 0x54 ; call rax
0x000000000018746c : mov al, 0x54 ; cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x00000000001788d4 : mov al, 0x55 ; call rax
0x0000000000178550 : mov al, 0x5b ; int1 ; inc eax ; pop rbp ; int1 ; call rax
0x000000000018725c : mov al, 0x60 ; cld ; inc dword ptr [rax + 0x60] ; cld ; call rax
0x00000000001890e8 : mov al, 0x60 ; out dx, al ; call rsp
0x0000000000187044 : mov al, 0x63 ; cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x00000000001789d4 : mov al, 0x64 ; call rax
0x0000000000178a34 : mov al, 0x68 ; jmp rax
0x0000000000178a6c : mov al, 0x69 ; call rax
0x0000000000178b00 : mov al, 0x6c ; inc eax ; insb byte ptr [rdi], dx ; call rax
0x000000000017758c : mov al, 0x72 ; out dx, al ; lcall ptr [rax + 0x71] ; out dx, al ; call rax
0x000000000011be1c : mov al, 0x75 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x11be30 ; ret
0x0000000000196194 : mov al, 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x000000000017867c : mov al, 0x84 ; cld ; call rax
0x0000000000187748 : mov al, 0x88 ; cld ; inc dword ptr [rax - 0x78] ; cld ; call rax
0x000000000019df10 : mov al, 0x8c ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001786a4 : mov al, 0x90 ; cld ; jmp qword ptr [rax]
0x0000000000195300 : mov al, 0x92 ; in eax, dx ; call qword ptr [rax]
0x000000000019fe20 : mov al, 0xa ; int1 ; call qword ptr [rcx]
0x000000000019fda0 : mov al, 0xa ; int1 ; jmp qword ptr [rcx]
0x0000000000187ea4 : mov al, 0xa1 ; cld ; jmp qword ptr [rax]
0x0000000000187ca0 : mov al, 0xa2 ; cld ; jmp qword ptr [rax]
0x000000000018687c : mov al, 0xa6 ; std ; jmp rcx
0x0000000000187a68 : mov al, 0xab ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x00000000001a5ed0 : mov al, 0xae ; hlt ; jmp qword ptr [rcx]
0x0000000000187c40 : mov al, 0xaf ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x00000000001a5fc0 : mov al, 0xb1 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6060 : mov al, 0xb2 ; hlt ; call qword ptr [rsi]
0x00000000001aaa40 : mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x0000000000189629 : mov al, 0xee ; call rsp
0x0000000000175ff6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000001b67a0 : mov al, 0xf2 ; cli ; call rcx
0x00000000001ac6d0 : mov al, 0xf8 ; cmc ; call qword ptr [rax]
0x000000000018d0f1 : mov al, 0xf8 ; jmp rsp
0x0000000000187a3d : mov al, 0xfc ; call qword ptr [rax]
0x00000000001a4960 : mov al, 0xfc ; call qword ptr [rsi]
0x0000000000187c39 : mov al, 0xfc ; jmp qword ptr [rax]
0x0000000000187afd : mov al, 0xfc ; jmp rdx
0x000000000018b1f5 : mov al, 1 ; add ah, al ; jge 0x18b1f5 ; jmp rsp
0x000000000012e3c7 : mov al, 1 ; ret
0x000000000018d9dd : mov al, 2 ; add ah, dl ; add dl, bh ; jmp rsp
0x000000000009db3c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000f62b4 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009d73c : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000006e428 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000001885b5 : mov al, byte ptr [rax] ; add byte ptr [rbp - 0x16], ah ; call rsp
0x00000000000fd6b9 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x0000000000099c6b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000099c99 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000099d1d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000015cc20 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000099c45 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000c257c : mov ax, 0xfde8 ; jne 0xc2552 ; ret
0x0000000000099c55 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000014d531 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000bd3f7 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000034c03 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x0000000000162598 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000d2453 : mov bh, 0x79 ; ret 0x6348
0x00000000000f50b5 : mov bh, 0xa3 ; dec dword ptr [rcx - 0x75] ; jge 0xf50c5 ; call rbx
0x0000000000002bc4 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000175024 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002fcc6 : mov bh, 0xc0 ; ret
0x00000000000a2d25 : mov bh, 0xcc ; or eax, dword ptr [rax] ; ret
0x000000000010068d : mov bh, 0xeb ; lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x100688
0x000000000003d988 : mov bh, 0xeb ; ret 0x1f0f
0x0000000000197811 : mov bh, 0xed ; jmp qword ptr [rdx]
0x00000000001a6191 : mov bh, 0xf4 ; call rdi
0x000000000010c6b4 : mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000003748 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x3732 ; ret 0x975
0x00000000000fbcb3 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fcbf : mov bh, 4 ; js 0x2fc4f ; loopne 0x2fcd6 ; movzx eax, ax ; ret
0x000000000002fcff : mov bh, 4 ; js 0x2fc8f ; loopne 0x2fd10 ; movzx eax, ax ; ret
0x000000000002fd9f : mov bh, 4 ; js 0x2fd2f ; loopne 0x2fdb2 ; movzx eax, ax ; ret
0x000000000002fe7f : mov bh, 4 ; js 0x2fe0c ; loopne 0x2fe8c ; ret
0x000000000002fef8 : mov bh, 4 ; js 0x2fe85 ; loopne 0x2ff05 ; ret
0x000000000002ff08 : mov bh, 4 ; js 0x2fe98 ; loopne 0x2ff1f ; movzx eax, ax ; ret
0x000000000002ff48 : mov bh, 4 ; js 0x2fed8 ; loopne 0x2ff59 ; movzx eax, ax ; ret
0x000000000002ffe8 : mov bh, 4 ; js 0x2ff78 ; loopne 0x2fffb ; movzx eax, ax ; ret
0x00000000000fd7ae : mov bh, 4 ; js 0xfd73e ; loopne 0xfd7c5 ; movzx eax, ax ; ret
0x00000000000fd8ee : mov bh, 4 ; js 0xfd87b ; loopne 0xfd8fb ; ret
0x00000000000fd98e : mov bh, 4 ; js 0xfd91e ; loopne 0xfd99f ; movzx eax, ax ; ret
0x00000000000fdc9e : mov bh, 4 ; js 0xfdc2e ; loopne 0xfdcb1 ; movzx eax, ax ; ret
0x00000000000fe0c7 : mov bh, 4 ; js 0xfe057 ; loopne 0xfe0de ; movzx eax, ax ; ret
0x00000000000fe1e7 : mov bh, 4 ; js 0xfe174 ; loopne 0xfe1f4 ; ret
0x00000000000fe267 : mov bh, 4 ; js 0xfe1f7 ; loopne 0xfe278 ; movzx eax, ax ; ret
0x00000000000fe527 : mov bh, 4 ; js 0xfe4b7 ; loopne 0xfe53a ; movzx eax, ax ; ret
0x00000000000b26e4 : mov bh, 5 ; salc ; out 0x30, eax ; add byte ptr [rcx], ch ; ret 0x428d
0x0000000000176733 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f0b75 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e4601 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000187ec5 : mov bh, ah ; call qword ptr [rax + 0x10fffc8b]
0x000000000018773d : mov bh, ah ; call qword ptr [rax + 0x20fffc89]
0x0000000000187f05 : mov bh, ah ; call qword ptr [rax]
0x000000000018757d : mov bh, ah ; call rsi
0x0000000000187579 : mov bh, ah ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x0000000000186845 : mov bh, bl ; call qword ptr [rax + 0x10fffb8b]
0x00000000001b4399 : mov bh, dh ; call qword ptr [rdx]
0x0000000000163e8e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000fbcfc : mov bl, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000e08cb : mov bl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000176103 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000f5cf9 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000000dbc6c : mov bl, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000001b0f : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000017842d : mov bl, 0xf0 ; jmp rax
0x00000000001b0079 : mov bl, 0xf6 ; call qword ptr [rax]
0x0000000000003aa1 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000186841 : mov bl, bh ; call qword ptr [rax]
0x0000000000097b1d : mov byte ptr [r10 + 1], 0 ; ret
0x0000000000108f8d : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x00000000001300b5 : mov byte ptr [r8 + 1], r9b ; ret
0x00000000000f4e0a : mov byte ptr [r9 + r15 - 0x20], 0x89 ; ret
0x00000000000cae21 : mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x00000000000f3302 : mov byte ptr [r9 - 1], 0 ; ret
0x00000000000311e9 : mov byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000002ecac : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ce592 : mov byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000001300b6 : mov byte ptr [rax + 1], cl ; ret
0x00000000000b09c4 : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000498ee : mov byte ptr [rax + 8], 0 ; ret
0x00000000001265ac : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000829c4 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x00000000000829c3 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000135acd : mov byte ptr [rax + rcx], dl ; ret
0x0000000000046ec4 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000018eb84 : mov byte ptr [rax - 0x17], bl ; jmp qword ptr [rdx]
0x00000000001a56c8 : mov byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x0000000000188fdd : mov byte ptr [rax], 0 ; jp 0x18904b ; in eax, dx ; call rsp
0x00000000000f6ece : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000372ff : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000037384 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004e20a : mov byte ptr [rax], cl ; jmp 0x4a489
0x000000000009c892 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a82b8 : mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x000000000011823b : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108f8e : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x00000000000f2376 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000105af5 : mov byte ptr [rbx], ch ; add al, ch ; ret
0x00000000001a7ef8 : mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000002f5e : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000015a8e3 : mov byte ptr [rcx + 2], dl ; ret
0x000000000015a902 : mov byte ptr [rcx + 4], dl ; ret
0x000000000015a943 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000096973 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002689d : mov byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000f4e0b : mov byte ptr [rcx + rdi - 0x20], 0x89 ; ret
0x00000000001a0abe : mov byte ptr [rcx + rsi*8 - 1], dh ; sbb al, 0xd ; push rdi ; je 0x1a0ac1 ; jmp qword ptr [rdx]
0x00000000000cae22 : mov byte ptr [rcx - 0x77], al ; ret 0xdb84
0x00000000000f3303 : mov byte ptr [rcx - 1], 0 ; ret
0x0000000000094793 : mov byte ptr [rcx], 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000096da4 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000096cd0 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000e155f : mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000095aa9 : mov byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000097bcf : mov byte ptr [rcx], 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000097cd7 : mov byte ptr [rcx], al ; jne 0x97cc8 ; mov rax, rbx ; pop rbx ; ret
0x000000000019d410 : mov byte ptr [rcx], al ; ret
0x0000000000070c1a : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x0000000000070c19 : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x000000000015a8c0 : mov byte ptr [rcx], dl ; ret
0x0000000000097cd6 : mov byte ptr [rcx], r8b ; jne 0x97cc9 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a0f0a : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009f4ab : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009dccb : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a0f1b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009e668 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009cff8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0f20 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0f42 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f60 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0f80 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009e6de : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009d04e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009f531 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009dd21 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a0fa1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0fa6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0fc2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0fe2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1002 : mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009f5b3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009dda3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a1023 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009e760 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009d0d0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a1028 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a104a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1068 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1088 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a10a4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a10c4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a10e4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1104 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009dea5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a1125 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a112a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a117a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0e50 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e6e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0e8e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0eb0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0ed0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0ef0 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0d86 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000117db2 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000117db1 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000096a53 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000969b3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a0d98 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009e516 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cf16 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009f339 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009dbe9 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a0da9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0dae : mov byte ptr [rdi + 3], ch ; ret
0x0000000000096a72 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000969d2 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a0dc6 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009e532 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009cf32 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009f367 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009dc07 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a0dd7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0ddc : mov byte ptr [rdi + 5], ch ; ret
0x00000000000969f9 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a0dee : mov byte ptr [rdi + 6], ch ; ret
0x0000000000125ef2 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a0e0c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d0c40 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d0c06 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d0c70 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d0c97 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d0ce0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d0ccd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d0c30 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d0c10 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a0e18 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009cf73 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009f3b9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009dc49 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a0e29 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0e2e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000097b70 : mov byte ptr [rdi + rcx], 0xb6 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000117f2d : mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x000000000009694e : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000014479b : mov byte ptr [rdi - 1], dl ; ret
0x000000000018ef98 : mov byte ptr [rdi - 3], bl ; jmp qword ptr [rdx]
0x000000000019e418 : mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x0000000000096980 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f5e8 : mov byte ptr [rdi], 0 ; ret
0x00000000000376f8 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d0c60 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000108c8b : mov byte ptr [rdi], al ; jne 0x108c7f ; mov rax, rdi ; ret
0x0000000000108e4b : mov byte ptr [rdi], al ; jne 0x108e3f ; mov rax, r10 ; ret
0x00000000000d0cb9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a0d72 : mov byte ptr [rdi], ch ; ret
0x00000000000675ca : mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000067543 : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x00000000000679f2 : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x000000000006763c : mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000067911 : mov byte ptr [rdi], cl ; xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x00000000000968b9 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x000000000009e4f0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000019b41c : mov byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000009cef0 : mov byte ptr [rdi], dh ; ret
0x000000000009f312 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dbc2 : mov byte ptr [rdi], dl ; ret
0x00000000000a0d82 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009ca1a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000097b1e : mov byte ptr [rdx + 1], 0 ; ret
0x000000000015cc49 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000099c6e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000015cc77 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000099c9c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009c9b0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000099d20 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000190a28 : mov byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x00000000001111c2 : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000f8001 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000006038b : mov byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000015cc22 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000099c47 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000acbf6 : mov byte ptr [rip + 0x358d4800], cl ; ret
0x000000000002ef08 : mov byte ptr [rip + 0x390d6f], dl ; ret
0x000000000000245c : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000010b624 : mov byte ptr [rip - 0x7aba000b], dh ; in al, -0x77 ; ret 0x87e
0x000000000008124d : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x000000000008124c : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x0000000000092ce4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x92cd7 ; ret
0x000000000018759c : mov byte ptr [rsi - 0x79a90004], 0xfc ; jmp rsi
0x0000000000049a53 : mov byte ptr [rsi], al ; jne 0x49a37 ; mov rax, rsi ; ret
0x00000000001a8138 : mov byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000499cf : mov byte ptr [rsi], dl ; jne 0x499bf ; mov rax, rsi ; ret
0x0000000000173b42 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000174e83 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001ad7ec : mov ch, 0x80 ; cmc ; jmp qword ptr [rdx]
0x00000000000d21e2 : mov ch, 0x83 ; ret 0x8901
0x00000000000af5ea : mov ch, 0x89 ; ret 0xe283
0x000000000017621f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000019853c : mov ch, 0xaa ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000176bca : mov ch, 0xab ; ret
0x0000000000003747 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3733 ; ret 0x975
0x00000000001a6109 : mov ch, 0xf4 ; call rdi
0x00000000001b00e1 : mov ch, 0xf6 ; call qword ptr [rdi]
0x000000000018dadd : mov ch, 2 ; add byte ptr [rbx + 0x21], cl ; cli ; call rsp
0x00000000001b83c0 : mov ch, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000004881c : mov ch, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000160fb6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000134bae : mov ch, bl ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001951a4 : mov ch, byte ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x000000000019777d : mov ch, ch ; jmp qword ptr [rdx]
0x0000000000189399 : mov ch, dh ; call rsp
0x00000000001ae0f5 : mov ch, dh ; jmp qword ptr [rdx]
0x000000000008be8b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000003b54 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000007aaf7 : mov cl, 0x35 ; ret
0x0000000000033fd7 : mov cl, 0x38 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001331a8 : mov cl, 0x48 ; mov edi, ebx ; call 0x1f416
0x0000000000002bc5 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x0000000000086993 : mov cl, 0x75 ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000186a10 : mov cl, 0xb9 ; std ; call qword ptr [rcx]
0x0000000000108555 : mov cl, 0xd ; fnstsw dword ptr [rax + 0x3948002b] ; ret 0x840f
0x00000000001a5fc1 : mov cl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001aff29 : mov cl, 0xf6 ; call qword ptr [rcx]
0x00000000001aff41 : mov cl, 0xf6 ; jmp qword ptr [rcx]
0x000000000018e029 : mov cl, 0xfa ; call rsp
0x0000000000187c35 : mov cl, 0xfc ; call qword ptr [rax + 0x20fffcb0]
0x0000000000187a75 : mov cl, 0xfc ; call rsi
0x00000000000fdee7 : mov cl, 3 ; add al, 0xa ; ret
0x00000000001b6de8 : mov cl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000fb9f5 : mov cl, byte ptr [rax - 0x7d] ; ret
0x000000000008efd5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000087134 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000175ff2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001a19f5 : mov cl, dh ; jmp qword ptr [rdx]
0x00000000000a2f9b : mov cl, dl ; and cl, 0xf ; je 0xa2fc7 ; ret
0x00000000001762ac : mov cs, edi ; ret 0x8b36
0x00000000000d6462 : mov cs, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000002a215 : mov cs, word ptr [rax] ; add eax, 0x29480000 ; ret 0x8b49
0x000000000013da3e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000009cf10 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000007a6c6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d9 : mov dh, 0 ; pop rbx ; ret
0x0000000000073743 : mov dh, 0 ; ret
0x000000000014d5a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008c074 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000035440 : mov dh, 0x17 ; test dl, dl ; jne 0x35426 ; ret
0x00000000000565cf : mov dh, 0x30 ; add r12, 1 ; jmp 0x565a0
0x00000000000b82a6 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000049c1d : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000c3c7e : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000c38ea : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000108f6f : mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x0000000000047eed : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000059d2f : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011a7a2 : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000005ff2e : mov dh, 0x45 ; or al, 0x89 ; ret 0xeac0
0x00000000000963f6 : mov dh, 0x45 ; ret
0x000000000009660b : mov dh, 0x45 ; ret 0x8348
0x00000000000963e3 : mov dh, 0x45 ; ret 0x8349
0x0000000000097b73 : mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000163a61 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000163a51 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000163a21 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000163a41 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000163a31 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000027975 : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000e2405 : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x0000000000097b06 : mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000279bf : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000002a973 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000174fe2 : mov dh, 0x4e ; ret 0x474c
0x0000000000117fcd : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000033a82 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006ce44 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000006d581 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000e7780 : mov dh, 0x54 ; add eax, 0xbe0f4101 ; ret 0xe883
0x0000000000163a65 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000163a55 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000163a25 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000005031f : mov dh, 0x56 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000163a35 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000f56b1 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x000000000018708c : mov dh, 0x62 ; cld ; inc dword ptr [rsi + 0x62] ; cld ; call rsi
0x00000000000c816d : mov dh, 0x7b ; dec dword ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000045f56 : mov dh, 0x7d ; add cl, ch ; ret 0xffe1
0x00000000001ad9fc : mov dh, 0x80 ; cmc ; jmp qword ptr [rdx]
0x00000000000e2e9c : mov dh, 0x84 ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x0000000000187570 : mov dh, 0x84 ; cld ; jmp qword ptr [rsi]
0x00000000001a1b94 : mov dh, 0x88 ; int1 ; jmp qword ptr [rdx]
0x0000000000187578 : mov dh, 0x8a ; cld ; inc dword ptr [rsi - 0x76] ; cld ; call rsi
0x00000000001772a0 : mov dh, 0xb ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000086a45 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000121ba8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012decc : mov dh, 0xc0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012175d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0171 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c27df : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000036afd : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006c818 : mov dh, 0xc0 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x0000000000054b13 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000c7d65 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000006c8d8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000101f61 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dc3d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000022c29 : mov dh, 0xc0 ; neg eax ; ret
0x0000000000126154 : mov dh, 0xc0 ; pop r12 ; ret
0x00000000001229fe : mov dh, 0xc0 ; pop rbp ; ret
0x0000000000048b03 : mov dh, 0xc0 ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f4cfd : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003766a : mov dh, 0xc0 ; ret
0x00000000000a1b98 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000a1bc0 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a826 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b8391 : mov dh, 0xc6 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000070c1e : mov dh, 0xc7 ; ret
0x0000000000176224 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000e19ec : mov dh, 0xc8 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000ad0e8 : mov dh, 0xca ; cmp dl, 0xff ; cmovne eax, ecx ; ret
0x00000000000b4d79 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000008c09a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000054c42 : mov dh, 0xdb ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000884e1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160094 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000001927e9 : mov dh, 0xea ; call qword ptr [rax]
0x0000000000192801 : mov dh, 0xea ; call qword ptr [rdx]
0x00000000000d450c : mov dh, 0xed ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000019ce19 : mov dh, 0xee ; call qword ptr [rax]
0x000000000019f84d : mov dh, 0xf0 ; jmp qword ptr [rdx]
0x0000000000074f6f : mov dh, 0xf6 ; ret 0x7508
0x000000000010c69d : mov dh, 0xf6 ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x000000000007a6d1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c4b29 : mov dh, 2 ; jmp 0xc42ca
0x00000000000e10ff : mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x0000000000160091 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008c071 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000884e4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000019e508 : mov dh, ah ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018aec1 : mov dh, bl ; jmp rsp
0x00000000001959d4 : mov dh, byte ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x00000000000a1d6e : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x000000000019b38c : mov dh, byte ptr [rsi + rbp*8] ; jmp qword ptr [rdx]
0x0000000000189361 : mov dh, ch ; call rsp
0x00000000001a2df1 : mov dh, dl ; call qword ptr [rcx]
0x00000000001a2eb1 : mov dh, dl ; call qword ptr [rdi]
0x00000000001a2f01 : mov dh, dl ; call qword ptr [rdx]
0x0000000000003a4c : mov dl, 0x1e ; ret
0x000000000008592c : mov dl, 0x33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003d985 : mov dl, 0x40 ; jle 0x3d945 ; jmp 0x3d952
0x000000000002e29f : mov dl, 0x4d ; add esi, edx ; jmp r14
0x000000000016592d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018761c : mov dl, 0x86 ; cld ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x000000000002f8e7 : mov dl, 0x8b ; add al, 7 ; ret
0x0000000000187b14 : mov dl, 0xad ; cld ; inc dword ptr [rdx - 0x53] ; cld ; call rdx
0x00000000000c2815 : mov dl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011f12d : mov dl, 0xeb ; or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x000000000018a729 : mov dl, 0xf1 ; call rsp
0x00000000001a6061 : mov dl, 0xf4 ; call qword ptr [rsi]
0x00000000001a6079 : mov dl, 0xf4 ; jmp qword ptr [rcx]
0x0000000000114974 : mov dl, 2 ; cmove eax, edx ; ret
0x00000000000f6532 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f6452 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001ac918 : mov dl, bh ; cmc ; jmp rsp
0x000000000009dbe3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009dc02 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009dc43 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000144820 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009f310 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009dbc0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a0d80 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000e4bd2 : mov dl, dl ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000178ccd : mov dr0, edx ; inc dword ptr [rax - 0x71] ; call rax
0x0000000000178cc9 : mov dr0, edx ; jmp rax
0x0000000000186851 : mov dr1, ebx ; call qword ptr [rax]
0x0000000000187ed1 : mov dr1, esp ; call qword ptr [rax]
0x00000000000dad12 : mov dr1, word ptr [rbx + rbp*8 + 0x39] ; ret 0xc789
0x0000000000196054 : mov dr1, word ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x000000000013d1b2 : mov dr1, word ptr [rip - 0xc000001] ; ret
0x00000000000fa472 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000c1e43 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x00000000000f0b14 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000f0b0f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000123d29 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x00000000000a30ca : mov dword ptr [r8 + 4], ecx ; jne 0xa309f ; ret
0x0000000000123d3a : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000118078 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000117fd4 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000020bf0 : mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000001088d8 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000001281bc : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x00000000000741c9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074209 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075069 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000c3e24 : mov dword ptr [rax + 0x18], esi ; jmp 0xc387a
0x0000000000073029 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000d206b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000d209d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000f0b15 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000f0b10 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x00000000000741cd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000075107 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c8ce : mov dword ptr [rax + 0x60], edx ; call qword ptr [rbx]
0x0000000000123d2a : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x000000000012809c : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x000000000005dd6b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x00000000000a30cb : mov dword ptr [rax + 4], ecx ; jne 0xa309e ; ret
0x000000000007bcca : mov dword ptr [rax + 8], 0 ; ret
0x000000000005dcf5 : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000123ca4 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x0000000000103dd7 : mov dword ptr [rax + rax - 0x3ed70000], eax ; mov eax, ecx ; ret
0x00000000000e1b50 : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c6a2 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000127543 : mov dword ptr [rax - 0x76b70010], edx ; ret 0x8d48
0x00000000001acfcc : mov dword ptr [rax - 0xb], edi ; jmp qword ptr [rdx]
0x000000000012eb2d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000004e03e : mov dword ptr [rax], 0x16 ; jmp 0x4a26b
0x00000000000f1aa8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x0000000000036f75 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000000f4d48 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000f4d09 : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000b06c8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000006f795 : mov dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000081270 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000081430 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000f1268 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bced5 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022c36 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000a2c53 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004bff1 : mov dword ptr [rax], eax ; jmp 0x4bfbb
0x0000000000061801 : mov dword ptr [rax], eax ; jmp 0x617cb
0x0000000000123d3b : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000cb50f : mov dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000000000e1b36 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026fc5 : mov dword ptr [rax], ebx ; jmp 0x26f8e
0x0000000000029c07 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd8
0x000000000002add7 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada8
0x00000000000498ec : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000002652f : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x26502
0x0000000000074755 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000777ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000f97a1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000118079 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000082736 : mov dword ptr [rax], edi ; ret
0x00000000000be7d2 : mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x00000000000fa343 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be880 : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x00000000000a3921 : mov dword ptr [rax], edx ; jne 0xa391d ; ret
0x00000000000746b0 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000117fd5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f0b23 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f170f : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf16e1
0x00000000000f196f : mov dword ptr [rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf1941
0x000000000002fa04 : mov dword ptr [rax], edx ; ret
0x0000000000075381 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000be95f : mov dword ptr [rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010bf6a : mov dword ptr [rax], esi ; jne 0x10bf5d ; ret
0x00000000000be153 : mov dword ptr [rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000de93c : mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xde909
0x00000000000de93b : mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xde90a
0x00000000000cb50e : mov dword ptr [rax], r8d ; or eax, 0xffffffff ; ret
0x00000000000e42c2 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005efa1 : mov dword ptr [rbp - 0x11a0], ecx ; jmp rax
0x0000000000063176 : mov dword ptr [rbp - 0x11a8], edx ; call 0x1f418
0x0000000000058aec : mov dword ptr [rbp - 0x204], eax ; jmp 0x54d60
0x000000000004a0b9 : mov dword ptr [rbp - 0x5b0], ecx ; jmp rax
0x00000000000233a3 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x00000000000f7d97 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7dc9
0x00000000000f7e68 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0xf7e9b
0x0000000000107738 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r14 ; call rax
0x00000000001079f0 : mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000106fb5 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000107340 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001077bc : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001073c0 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000050b1e : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x00000000001134d2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001134d1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ca87 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136146 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000788f7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bcfb8 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0xbcf8e
0x0000000000078e09 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000102014 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007eefe : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e7c2 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001360f3 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102044 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000012e819 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3bab : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073055 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000086867 : mov dword ptr [rbx + 0x30], eax ; call rcx
0x00000000001113f1 : mov dword ptr [rbx + 0x30], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000000d4dae : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086861 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000036aff : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000007b5cf : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f05e6 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x0000000000086922 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x000000000007b20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007524a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079be2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007425e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074f31 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000787e7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000007878b : mov dword ptr [rbx + 0xc0], eax ; mov edx, r8d ; jmp 0x78733
0x000000000007878a : mov dword ptr [rbx + 0xc0], r8d ; mov edx, r8d ; jmp 0x78734
0x000000000002caa7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000101fe4 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000037555 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b42d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000086bdd : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d9e7f : mov dword ptr [rbx + rdi + 0x24], 0x39da7fbe ; ret 0xc189
0x00000000000da150 : mov dword ptr [rbx + rdi + 0x24], 0x39ec7fbe ; ret 0xc189
0x00000000000db688 : mov dword ptr [rbx + rdi + 4], 0x39da7fbe ; ret 0xc189
0x000000000012eb22 : mov dword ptr [rbx], 0 ; call 0x12ade8
0x00000000000f4d32 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001b742c : mov dword ptr [rbx], 0x6c50000 ; add byte ptr [rax], al ; ret
0x0000000000122181 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013636e : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008691f : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x000000000007b5d2 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012acf2 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f4cf7 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000129918 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000007506c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000086865 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000007b530 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073a3c : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006e638 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123c8c : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000001278d8 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000127835 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000127905 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000021bfd : mov dword ptr [rcx + 0x968], edx ; ret
0x00000000001a1cae : mov dword ptr [rcx + 0xd1cfff1], ecx ; ret
0x000000000015a922 : mov dword ptr [rcx + 3], edx ; ret
0x000000000015a913 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000a1e41 : mov dword ptr [rcx + 4], esi ; jne 0xa1e52 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000015a984 : mov dword ptr [rcx + 5], edx ; ret
0x000000000015a994 : mov dword ptr [rcx + 6], edx ; ret
0x000000000015a963 : mov dword ptr [rcx + 7], edx ; ret
0x000000000015a954 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000a1e46 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000096906 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000020bf1 : mov dword ptr [rcx + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000000d9e6d : mov dword ptr [rcx + rdi + 0x24], 0x39ec7cbe ; ret 0xc189
0x00000000000db676 : mov dword ptr [rcx + rdi + 4], 0x39ec7cbe ; ret 0xc189
0x00000000000c6133 : mov dword ptr [rcx], 0xdc75d284 ; ret
0x00000000000c615d : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000000a32b6 : mov dword ptr [rcx], eax ; jne 0xa32a8 ; mov rax, rbx ; pop rbx ; ret
0x0000000000036fca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000783b7 : mov dword ptr [rcx], eax ; ret
0x00000000000772c4 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000001088d9 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000000000011807c : mov dword ptr [rcx], ecx ; ret
0x0000000000078201 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000118048 : mov dword ptr [rcx], edi ; ret
0x000000000008bbe7 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000015a8e1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a900 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015a941 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a920 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015a961 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a971 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a981 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a991 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a9a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a9b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a910 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015a951 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000117fd8 : mov dword ptr [rcx], edx ; ret
0x00000000000a32b5 : mov dword ptr [rcx], r8d ; jne 0xa32a9 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e4f4b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e4f82 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000009e67d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f4cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009e6bb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f50b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009e73d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f58d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009d04b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009dd1e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009d0cd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000038ccf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0f3d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f7b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0ffd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009dda0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009d110 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d130 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d0f1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e4f70 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x000000000009e7a3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f5f3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009d113 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a1063 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012e481 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000733e7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000009207a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009e785 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f5d5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009e7c3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009f613 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009d0f5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a1045 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1083 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012e44f : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000012e424 : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000012e3c1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e3e6 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000012e3c4 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001280fc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012e551 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d1cda : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d1cdd : mov dword ptr [rdi + 0x30], eax ; ret
0x0000000000091f69 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000001280b4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037809 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000e45ee : mov dword ptr [rdi + 0x80], edx ; ret
0x0000000000117865 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000001975e6 : mov dword ptr [rdi + 0xd1cffed], eax ; jp 0x19757d ; in eax, dx ; jmp qword ptr [rdx]
0x000000000009e6fd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f54d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009d06d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a0fbd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009e69b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f4eb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009e71d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f56d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009d02b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0f5b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0fdd : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014d3e5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d228 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d4c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000014d375 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d1b8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003d460 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009e567 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009f397 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014d305 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d148 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cf57 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a0e07 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000096a33 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096993 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003d45a : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000096a83 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009f379 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014d0d8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000969e3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x000000000009cf49 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a0de9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e4640 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000096a32 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096992 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009e5fb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f43b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014d068 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cfbb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a0eab : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009e61b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f45b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014cff8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cfcb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a0ecb : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009e5b9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f3f9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009e63b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f47b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014cf88 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cf99 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a0e69 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0eeb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3268 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000007b137 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000f0760 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000038c54 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004e803 : mov dword ptr [rdi + 8], edx ; jmp 0x4e7ce
0x000000000009f3db : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e5d9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f419 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009e59b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000038454 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000007373f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cdca : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a0e4b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e89 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000f3258 : mov dword ptr [rdi + 8], esi ; ret
0x000000000008c6a9 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008c6b2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00000000001444e5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144523 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038bbf : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000014486c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014ca38 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144a4c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c9b8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144c3c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c938 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144e0d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c8a9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000014500d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c819 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000014520d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c789 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009dee0 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000144bed : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000144a05 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000144be9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000968d7 : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000144fc9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000014469f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009691b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000144fc6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096935 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00000000001451c6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096951 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00000000001453c6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000038b4a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000144527 : mov dword ptr [rdi - 8], edx ; ret
0x000000000014469c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144798 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001446e4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014cab8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000488c0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000036983 : mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039dae : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000f3255 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000091daa : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000038b44 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038c4e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037b26 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000053916 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000968e2 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x0000000000096a60 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e535 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e587 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e514 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cf14 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009f337 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009dbe7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000969d0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009f365 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009dc05 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009f3b7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009dc47 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009e565 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009f395 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009cf55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000096990 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009e5b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f3f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009cf97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009e5d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009cfa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008c6a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000009cfb8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009cfc8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009cfd8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cdda : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008c6af : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000969c0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000969e0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009cf46 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009cf88 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000038b19 : mov dword ptr [rdi], ecx ; ret
0x000000000007ca37 : mov dword ptr [rdi], edi ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009e504 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f324 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e522 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f352 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009e574 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f3a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009df00 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009df41 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009df61 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009df71 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009df81 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009df91 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009df10 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009df51 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc28 : mov dword ptr [rdi], edx ; ret
0x00000000000a0d94 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0dc2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0e14 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000096a41 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000969b1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000039d8f : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000000969a1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000e4621 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x000000000011816b : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x000000000006e427 : mov dword ptr [rdx + 0x140], ecx ; ret
0x0000000000078955 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x00000000000781fe : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000783b4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000121d10 : mov dword ptr [rdx + 0x20], esi ; ret
0x0000000000025729 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000002572c : mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000121cec : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000121cf0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000015cca7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000099cdc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000015cc89 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099cbe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000015cd3b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015ccb9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000158969 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000015cd5b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015ccd9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000158979 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000015ccf9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015cd7b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000099d60 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000015cd19 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015cc0b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000099d42 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000127871 : mov dword ptr [rdx + 8], edi ; ret
0x000000000018dd25 : mov dword ptr [rdx], 0xfa55f400 ; call rsp
0x000000000015cc34 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000015cc62 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000015cbb4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000ebc82 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000039e43 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000099c59 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000036cf4 : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071ddf : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000cb261 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a1e95 : mov dword ptr [rdx], ecx ; jne 0xa1e8d ; ret
0x000000000003cdfc : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x0000000000074546 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000039d96 : mov dword ptr [rdx], ecx ; ret
0x00000000000e32db : mov dword ptr [rdx], edi ; ret
0x000000000012786e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000009229f : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010adb8 : mov dword ptr [rip + 0x2b7a02], edx ; pop rbp ; ret
0x00000000000fc730 : mov dword ptr [rip + 0x2c1bca], ebx ; pop rbx ; ret
0x00000000000f479a : mov dword ptr [rip + 0x2c9b10], edi ; ret
0x00000000000f2625 : mov dword ptr [rip + 0x2cd2f5], eax ; mov rdx, rax ; jmp 0xf25c7
0x00000000000f3a36 : mov dword ptr [rip + 0x2cdbf4], eax ; mov rdx, rax ; jmp 0xf3a18
0x000000000008ab92 : mov dword ptr [rip + 0x3360d8], eax ; ret
0x0000000000037ca3 : mov dword ptr [rip + 0x3863e7], eax ; mov eax, edx ; ret
0x0000000000037c8c : mov dword ptr [rip + 0x38640e], edx ; ret
0x0000000000021a9b : mov dword ptr [rip + 0x39c78f], eax ; pop r12 ; ret
0x000000000001f570 : mov dword ptr [rip + 0x3a04da], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000002257d : mov dword ptr [rip + 0x3a167d], edi ; pop rbx ; ret
0x00000000000221a2 : mov dword ptr [rip + 0x3a1a58], eax ; pop rbx ; ret
0x00000000000221a1 : mov dword ptr [rip + 0x3a1a58], r8d ; pop rbx ; ret
0x00000000000e4074 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003d386 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003cd34 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003cd38 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000c9e69 : mov dword ptr [rsi + 0x30], ebp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe06 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000e455f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003d3d0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003d417 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000a3114 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e4057 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000120e71 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e4070 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b01d1 : mov dword ptr [rsi + rcx], edx ; jne 0xb01ce ; ret
0x0000000000120e8f : mov dword ptr [rsi], 0 ; ret
0x00000000000fa7f9 : mov dword ptr [rsi], 0x16 ; ret
0x0000000000096933 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000120f00 : mov dword ptr [rsi], 0xa ; ret
0x0000000000120ef0 : mov dword ptr [rsi], 0xb ; ret
0x0000000000120f40 : mov dword ptr [rsi], 0xc ; ret
0x00000000000a559e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa5559
0x00000000000a7dde : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa7d99
0x00000000000aa48e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xaa449
0x0000000000120f30 : mov dword ptr [rsi], 8 ; ret
0x000000000007d60b : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x00000000000fa7ec : mov dword ptr [rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000733eb : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003cdfe : mov dword ptr [rsi], ecx ; ret
0x0000000000117d50 : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000117869 : mov dword ptr [rsi], edi ; ret
0x000000000010c5b9 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x00000000000367c5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000080a6c : mov dword ptr [rsp + 0x10], ecx ; call qword ptr [rax]
0x0000000000080b40 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x0000000000080b3b : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000105fcd : mov dword ptr [rsp + 0x28], eax ; call 0x72206
0x0000000000080952 : mov dword ptr [rsp + 0x28], ebx ; call rax
0x0000000000080919 : mov dword ptr [rsp + 0x28], esi ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000080951 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000008094d : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000011fada : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x00000000000868d0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000028b22 : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000025b5f : mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ae : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a66 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000012db55 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012e8dc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000007dff3 : mov dword ptr [rsp + 8], ecx ; call qword ptr [rax]
0x0000000000129d10 : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027ea2 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x0000000000039f36 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000036a75 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000120568 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x00000000000278c2 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000235b5 : mov dword ptr [rsp], eax ; call rbx
0x000000000011dc44 : mov dword ptr [rsp], ecx ; call r12
0x00000000000bdcfd : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000004e03d : mov dword ptr fs:[rax], 0x16 ; jmp 0x4a26c
0x00000000000f1aa7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000f4d47 : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000b06c7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000008142f : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bced4 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022c35 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000f97a0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000be7d1 : mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x00000000000be87f : mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
0x00000000000f0b22 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000f170e : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf16e2
0x00000000000f196e : mov dword ptr fs:[rax], edx ; or rax, 0xffffffffffffffff ; jmp 0xf1942
0x00000000000cb50d : mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x00000000001134d0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036fc9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ebc81 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000036cf3 : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa7f8 : mov dword ptr fs:[rsi], 0x16 ; ret
0x00000000000fa7eb : mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000144a00 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009cf00 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011f564 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a1c58 : mov eax, 0x10 ; pop rbx ; ret
0x000000000011498a : mov eax, 0x100 ; nop ; ret
0x0000000000114984 : mov eax, 0x101 ; ret
0x0000000000114991 : mov eax, 0x102 ; ret
0x000000000011497c : mov eax, 0x104 ; ret
0x00000000000f114d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000e4f63 : mov eax, 0x16 ; jbe 0xe4f78 ; ret
0x00000000000848a7 : mov eax, 0x16 ; je 0x848b7 ; ret
0x00000000000e4615 : mov eax, 0x16 ; je 0xe4628 ; ret
0x000000000003e0f9 : mov eax, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x00000000000cb758 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x000000000018da75 : mov eax, 0x1ed40002 ; cli ; call rsp
0x00000000000a1c7b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c26c0 : mov eax, 0x20 ; ret
0x000000000002fea7 : mov eax, 0x200 ; ret
0x00000000001655f7 : mov eax, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a1c74 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000be440 : mov eax, 0x302c ; add al, 0 ; add al, ch ; ret
0x0000000000108558 : mov eax, 0x3948002b ; ret 0x840f
0x00000000000c10e1 : mov eax, 0x3948fffb ; ret
0x00000000000d6455 : mov eax, 0x39c77f04 ; ret 0xc189
0x00000000000d643d : mov eax, 0x39df7f04 ; ret 0xc189
0x00000000000975a9 : mov eax, 0x3d ; jmp 0x97579
0x00000000000a1c6d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c2710 : mov eax, 0x40 ; ret
0x00000000001791e8 : mov eax, 0x44fff3c0 ; fcomi st(3) ; call qword ptr [rdx]
0x000000000017413b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008cb5a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x0000000000129589 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000eb4d0 : mov eax, 0x5f ; syscall ; ret
0x00000000000a1c66 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000f813a : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x00000000000c1e60 : mov eax, 0x66 ; syscall ; ret
0x00000000000c1e80 : mov eax, 0x68 ; syscall ; ret
0x00000000000c1e70 : mov eax, 0x6b ; syscall ; ret
0x00000000000c1e90 : mov eax, 0x6c ; syscall ; ret
0x00000000000c1e50 : mov eax, 0x6e ; syscall ; ret
0x00000000000c2090 : mov eax, 0x6f ; syscall ; ret
0x00000000000c25c9 : mov eax, 0x7d00 ; ret
0x00000000000c25f8 : mov eax, 0x7e ; ret
0x00000000000c254b : mov eax, 0x7f ; ret
0x00000000000a1c5f : mov eax, 0x80 ; pop rbx ; ret
0x00000000000c10a8 : mov eax, 0x8948fffb ; ret
0x00000000000ebbd6 : mov eax, 0x894c1f74 ; ret 0x6348
0x0000000000179bb4 : mov eax, 0x8fff498 ; cdq ; hlt ; jmp qword ptr [rsi]
0x0000000000123db7 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001869b1 : mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000000c257d : mov eax, 0xc975fde8 ; ret
0x000000000010c5a8 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000108162 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000012ae26 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fa8f0 : mov eax, 0xe4 ; syscall ; ret
0x00000000000b1cf4 : mov eax, 0xf0030f1 ; xchg eax, ebp ; ret 0xf749
0x00000000000c25ef : mov eax, 0xfa ; ret
0x00000000000c2610 : mov eax, 0xfc17 ; ret
0x00000000000c2600 : mov eax, 0xfffa ; ret
0x00000000000c0a7c : mov eax, 0xfffffff2 ; ret
0x0000000000108941 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x00000000000257e7 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000000754b1 : mov eax, 0xffffffff ; ja 0x754c8 ; ret
0x0000000000117c60 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x0000000000073ad7 : mov eax, 0xffffffff ; pop r12 ; ret
0x000000000011796f : mov eax, 0xffffffff ; pop r14 ; ret
0x0000000000075f75 : mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000076a2d : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002c227 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076d34 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003577e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c87 : mov eax, 0xffffffff ; ret
0x0000000000048822 : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000f277e : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000164560 : mov eax, 1 ; jg 0x164579 ; neg eax ; ret
0x00000000000a2ce0 : mov eax, 1 ; jg 0xa2cf2 ; neg eax ; ret
0x00000000001624b6 : mov eax, 1 ; jl 0x1624c9 ; neg eax ; ret
0x000000000012ea62 : mov eax, 1 ; jne 0x12ea77 ; ret
0x000000000012eaa2 : mov eax, 1 ; jne 0x12eab7 ; ret
0x0000000000039d91 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000073ac0 : mov eax, 1 ; pop r12 ; ret
0x000000000005392d : mov eax, 1 ; pop r13 ; ret
0x000000000005385f : mov eax, 1 ; pop r14 ; ret
0x0000000000074ffb : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d3d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000f9122 : mov eax, 1 ; pop rbx ; ret
0x000000000002bfd0 : mov eax, 1 ; ret
0x00000000000a3001 : mov eax, 2 ; ret
0x0000000000046ef0 : mov eax, 3 ; jmp 0x46ec0
0x00000000000f8506 : mov eax, 3 ; pop rbx ; pop rbp ; ret
0x00000000000a3011 : mov eax, 3 ; ret
0x0000000000113823 : mov eax, 3 ; syscall ; ret
0x00000000000a3021 : mov eax, 4 ; ret
0x00000000000e536d : mov eax, 5 ; pop r12 ; ret
0x00000000000a3031 : mov eax, 5 ; ret
0x00000000000a3041 : mov eax, 6 ; ret
0x0000000000026531 : mov eax, 7 ; jmp 0x26500
0x000000000010614c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000a3051 : mov eax, 7 ; ret
0x00000000000a1c82 : mov eax, 8 ; pop rbx ; ret
0x00000000000e43ce : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001abedc : mov eax, ds ; add dword ptr [rax], eax ; push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x00000000000c773b : mov eax, dword ptr [r12 + 8] ; xor r12d, r12d ; jmp 0xc7711
0x00000000001079ec : mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a188a : mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000136158 : mov eax, dword ptr [rax + 0x108] ; jmp rax
0x00000000000fce10 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000007457c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000fcbc0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000011c2b7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11c2c7 ; ret
0x00000000000f1ba8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xf1bbb ; ret
0x000000000007491c : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000074721 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000107a70 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000fd527 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007b788 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000127784 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070073 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007bb9c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000007033d : mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070c64 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000128034 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048856 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002ccee : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f83f1 : mov eax, dword ptr [rax + 0xc8] ; ret
0x000000000013605f : mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x000000000012d175 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000f83ca : mov eax, dword ptr [rax + 8] ; ret
0x0000000000108537 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x108509 ; leave ; ret
0x000000000002d17a : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d18c ; call rax
0x000000000002fea5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000030067 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fa4f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000116b77 : mov eax, dword ptr [rax + rdx*8 + 4] ; pop rbx ; ret
0x00000000001204d5 : mov eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012d16a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002ccec : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bfee : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4bfbe
0x00000000000617fe : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x617ce
0x000000000002fe7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000048853 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011c599 : mov eax, dword ptr [rax] ; ret
0x00000000000838b4 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x838c4 ; call rax
0x00000000000d1d58 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012dcb9 : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000f58b5 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000bd97b : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000023f71 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000073051 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000121c91 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c0fb8 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xc0fca ; call rax
0x000000000012acba : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12acd0 ; pop rbx ; ret
0x000000000012ad26 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12ace4 ; pop rbx ; ret
0x00000000000c11c5 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xc11db ; call rax
0x0000000000099cd9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a188b : mov eax, dword ptr [rcx + 4] ; pop r12 ; ret
0x0000000000158966 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000158976 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000099d5d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000099d7d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000013955a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000013ae32 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000015cc60 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000127890 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000099c85 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000015cbb1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000158881 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015cc31 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000099c56 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000752ff : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c6a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c6c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000108230 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x108248 ; ret
0x000000000012e7ec : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e381 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120e6e : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000bd331 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a2c60 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xa2ce8 ; ret
0x00000000000a2c75 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xa2ce8 ; ret
0x0000000000120ee7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012e760 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000073091 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a2c80 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2ce8 ; ret
0x00000000000a2c9b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xa2ce8 ; ret
0x00000000000a2cb0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xa2ce8 ; ret
0x00000000000a2cc5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xa2ce8 ; ret
0x00000000000a2cd0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2ce8 ; ret
0x0000000000120f1f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072f81 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070c61 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c971 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000000714e8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x71500 ; ret
0x000000000007869e : mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000e4630 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f0710 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000012d871 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000121c21 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e189 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012e199 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012d171 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012d166 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012b489 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000121bb1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a3675 : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa3651 ; ret
0x000000000002f8e8 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000072ff0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000072fc0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000128120 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000108245 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000bd430 : mov eax, dword ptr [rdi] ; ret
0x00000000000736e0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000736f0 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000001249c4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1249d6 ; ret
0x00000000001249c3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1249d7 ; ret
0x000000000012bc54 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bc66 ; ret
0x000000000012bc53 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bc67 ; ret
0x00000000000a3744 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xa3740 ; xor eax, eax ; ret
0x0000000000070c3b : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000002fe33 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000356f3 : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x00000000000a1d69 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1d59 ; ret
0x000000000008efd6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000121358 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x0000000000076a38 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e32d8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000074757 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000754c0 : mov eax, dword ptr [rdx] ; ret
0x000000000007c681 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c680 ; ret
0x0000000000133b01 : mov eax, dword ptr [rip + 0x287ff9] ; jmp rax
0x0000000000133ab1 : mov eax, dword ptr [rip + 0x288041] ; pop r12 ; jmp rax
0x0000000000133a51 : mov eax, dword ptr [rip + 0x288099] ; pop r12 ; jmp rax
0x0000000000135622 : mov eax, dword ptr [rip + 0x28a268] ; call qword ptr [rax]
0x0000000000133b62 : mov eax, dword ptr [rip + 0x28bd28] ; call qword ptr [rax]
0x0000000000112311 : mov eax, dword ptr [rip + 0x2ad6d9] ; ret
0x00000000000fd521 : mov eax, dword ptr [rip + 0x2c0939] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008272f : mov eax, dword ptr [rip + 0x33b79b] ; mov qword ptr [rax], rdi ; ret
0x0000000000080b78 : mov eax, dword ptr [rip + 0x33d23a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007c951 : mov eax, dword ptr [rip + 0x342849] ; ret
0x0000000000037c60 : mov eax, dword ptr [rip + 0x38642a] ; ret
0x0000000000037c50 : mov eax, dword ptr [rip + 0x38644a] ; ret
0x000000000002f9fd : mov eax, dword ptr [rip + 0x38e3d5] ; mov qword ptr [rax], rdx ; ret
0x000000000002c0e1 : mov eax, dword ptr [rip + 0x3939d9] ; ret
0x0000000000023761 : mov eax, dword ptr [rip + 0x3a04e1] ; ret
0x0000000000023751 : mov eax, dword ptr [rip + 0x3a0501] ; ret
0x0000000000030061 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030071 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000d2099 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000118167 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000002ef61 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x00000000001079ed : mov eax, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000746b2 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000aeee4 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f558a : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000220f6 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000021ebf : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000029c09 : mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd6
0x000000000002add9 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada6
0x0000000000026fc0 : mov eax, dword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26f93
0x000000000002a4dc : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000286c0 : mov eax, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000280bf : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000c0ca4 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x0000000000136316 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x0000000000037076 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f13d6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000c773c : mov eax, dword ptr [rsp + 8] ; xor r12d, r12d ; jmp 0xc7710
0x00000000000f2560 : mov eax, dword ptr [rsp - 0x68] ; ret
0x0000000000133e24 : mov eax, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125094 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f0b47 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd583 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fd5e4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000518c8 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000815e2 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022aea : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000007d72b : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000003c979 : mov eax, eax ; or rax, rdx ; ret
0x000000000004f2ba : mov eax, eax ; ret
0x000000000010400c : mov eax, eax ; sub eax, r9d ; ret
0x000000000007956a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073a3a : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aee49 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000724f9 : mov eax, ebp ; pop r13 ; ret
0x000000000006f6d9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dae6 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f203 : mov eax, ebp ; pop rbp ; ret
0x00000000000f4fb0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006ee95 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c98dd : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f185 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000038593 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012a881 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b0688 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092187 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdaf2 : mov eax, ebx ; call rax
0x0000000000117f2b : mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000f7fff : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cbf6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f664 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003400f : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003cb1b : mov eax, ebx ; pop rbx ; ret
0x0000000000038457 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000093479 : mov eax, ecx ; jmp 0x932db
0x00000000000f08e2 : mov eax, ecx ; pop r12 ; ret
0x00000000000306e3 : mov eax, ecx ; pop r13 ; ret
0x0000000000085232 : mov eax, ecx ; pop r14 ; ret
0x0000000000030669 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f09b6 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003570f : mov eax, ecx ; pop rbx ; ret
0x0000000000035719 : mov eax, ecx ; ret
0x0000000000103e59 : mov eax, ecx ; sub eax, edx ; ret
0x0000000000108cef : mov eax, edi ; add rsp, 8 ; ret
0x000000000002fed0 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000010c656 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010c630 : mov eax, edi ; bswap eax ; ret
0x00000000000497c9 : mov eax, edi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a5 : mov eax, edi ; cmovae rax, rsi ; ret
0x000000000003c981 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000077aba : mov eax, edi ; jmp 0x77a83
0x00000000000f337a : mov eax, edi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000969f7 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a37bb : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000fd6c0 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x0000000000101ecc : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007da80 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108f21 : mov eax, edi ; pop rbx ; ret
0x0000000000022c3c : mov eax, edi ; ret
0x000000000010c640 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003c922 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010abda : mov eax, edi ; sar rax, 6 ; ret
0x000000000010c6d6 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000104030 : mov eax, edi ; sub eax, esi ; ret
0x00000000000f2469 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000b4b1c : mov eax, edx ; add rsp, 8 ; ret
0x00000000000c1e1b : mov eax, edx ; jle 0xc1e26 ; ret
0x000000000005e080 : mov eax, edx ; pop r12 ; ret
0x000000000009426c : mov eax, edx ; pop r14 ; ret
0x000000000005371b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000493ff : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005df1b : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000391d5 : mov eax, edx ; pop rbx ; ret
0x0000000000037ca9 : mov eax, edx ; ret
0x0000000000046dde : mov eax, edx ; shl eax, 0x1e ; or eax, esi ; ret
0x0000000000103e89 : mov eax, edx ; sub eax, r9d ; ret
0x00000000001afa44 : mov eax, esi ; cmc ; jmp qword ptr [rdx]
0x0000000000036bb6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000ba2b2 : mov eax, esi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000004989c : mov eax, esi ; nop ; ret
0x00000000001098a5 : mov eax, esi ; pop r12 ; ret
0x00000000000bd40d : mov eax, esi ; pop r14 ; ret
0x00000000000c28e4 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c40a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000049791 : mov eax, esi ; pop rbx ; ret
0x00000000000499d4 : mov eax, esi ; ret
0x00000000001180bb : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x00000000000b178b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aedc5 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000006ce10 : mov eax, esp ; pop r12 ; ret
0x000000000007c28c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ca44 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aedc4 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000aecf2 : mov eax, r12d ; pop r12 ; ret
0x000000000007c28b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000726d5 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aee48 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000724f8 : mov eax, r13d ; pop r13 ; ret
0x00000000000e5215 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000518c7 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004f2b9 : mov eax, r8d ; ret
0x000000000010400b : mov eax, r8d ; sub eax, r9d ; ret
0x00000000000f08e1 : mov eax, r9d ; pop r12 ; ret
0x00000000000f09b5 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103e58 : mov eax, r9d ; sub eax, edx ; ret
0x000000000018dbb5 : mov ebp, 0x33c40002 ; cli ; jmp rsp
0x00000000000f2699 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x0000000000097091 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000970a1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000097081 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000100164 : mov ebp, 0x5c7fffe ; jmp rcx
0x000000000013cf41 : mov ebp, 0x63480003 ; ret 0xf66
0x000000000001fd4f : mov ebp, 0x85000e7d ; ror byte ptr [rdi], 0x95 ; ret
0x000000000017972c : mov ebp, 0x8dfff418 ; sbb ah, dh ; jmp qword ptr [rdi]
0x0000000000172cfd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000179151 : mov ebp, 0xc2d4fff3 ; push qword ptr [rdi] ; ret 0xfff3
0x0000000000179111 : mov ebp, 0xc367fff3 ; call rdx
0x00000000001294f5 : mov ebp, 0xe8000186 ; ret 0xffd9
0x0000000000097101 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000970e1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000970c1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000971b2 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008a818 : mov ebp, 0xf80148c0 ; ret
0x000000000008aa9c : mov ebp, 0xf80148c6 ; ret
0x0000000000174d66 : mov ebp, 0xfb67d10d ; ret
0x00000000000c3dd0 : mov ebp, 0xfffffbd0 ; call r15
0x00000000001126f4 : mov ebp, 0xfffffdfc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000c5484 : mov ebp, 0xfffffe30 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000cc750 : mov ebp, 0xffffff58 ; call rbx
0x000000000018e0e4 : mov ebp, ds ; add al, byte ptr [rax] ; jo 0x18e0af ; cli ; call rsp
0x00000000000d8ef2 : mov ebp, dword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd8f0c
0x00000000001114c8 : mov ebp, dword ptr [rbx + 0x50] ; call 0x11d6e5
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000efced : mov ebp, dword ptr [rsi] ; call 0xebf54
0x000000000012afe9 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x12affd
0x0000000000194e59 : mov ebp, ebp ; call qword ptr [rax]
0x0000000000194cb9 : mov ebp, ebp ; call qword ptr [rdx]
0x0000000000197b85 : mov ebp, ebp ; jmp qword ptr [rdx]
0x0000000000114d4d : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000036bbc : mov ebp, ecx ; jmp rdx
0x000000000006e526 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000001ae385 : mov ebp, esi ; jmp qword ptr [rdx]
0x00000000000a5d05 : mov ebp, esi ; setne dl ; jmp 0xa5d1c
0x00000000000aabb5 : mov ebp, esi ; setne dl ; jmp 0xaabcc
0x000000000011dd55 : mov ebp, esp ; call r15
0x000000000010aca4 : mov ebp, esp ; pop rbp ; ret
0x0000000000197b3d : mov ebp, gs ; jmp qword ptr [rdx]
0x0000000000097b1c : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x97b22
0x000000000018db55 : mov ebx, 0x2e040002 ; cli ; jmp rsp
0x000000000010830e : mov ebx, 0x3948002b ; ret 0xda75
0x00000000000e4281 : mov ebx, 0x39fffde9 ; ret
0x0000000000033d03 : mov ebx, 0x89490038 ; ret 0x65e9
0x00000000000d8a35 : mov ebx, 0x8dfffffd ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d0de1 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000d5011 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000108194 : mov ebx, 0xafb8341 ; je 0x1081a3 ; ret
0x00000000001869ed : mov ebx, 0xb895fffd ; std ; call qword ptr [rcx]
0x00000000001869cd : mov ebx, 0xb8a6fffd ; std ; call qword ptr [rcx]
0x00000000001869dd : mov ebx, 0xb8c0fffd ; std ; call qword ptr [rcx]
0x00000000001869bd : mov ebx, 0xb8d1fffd ; std ; call qword ptr [rcx]
0x0000000000186abd : mov ebx, 0xb8e0fffd ; std ; call qword ptr [rcx]
0x0000000000186a7d : mov ebx, 0xb8fbfffd ; std ; call qword ptr [rcx]
0x0000000000186a3d : mov ebx, 0xb916fffd ; std ; call qword ptr [rcx]
0x00000000001869fd : mov ebx, 0xb931fffd ; std ; call qword ptr [rcx]
0x0000000000186acd : mov ebx, 0xb960fffd ; std ; call qword ptr [rcx]
0x0000000000186a8d : mov ebx, 0xb97bfffd ; std ; call qword ptr [rcx]
0x0000000000186a4d : mov ebx, 0xb996fffd ; std ; call qword ptr [rcx]
0x0000000000186a0d : mov ebx, 0xb9b1fffd ; std ; call qword ptr [rcx]
0x0000000000186add : mov ebx, 0xb9e0fffd ; std ; call qword ptr [rcx]
0x0000000000186a9d : mov ebx, 0xb9fbfffd ; std ; call qword ptr [rcx]
0x0000000000186a5d : mov ebx, 0xba16fffd ; std ; call qword ptr [rcx]
0x0000000000186a1d : mov ebx, 0xba31fffd ; std ; call qword ptr [rcx]
0x0000000000186aad : mov ebx, 0xba70fffd ; std ; call qword ptr [rcx]
0x0000000000186a6d : mov ebx, 0xba87fffd ; std ; call qword ptr [rcx]
0x0000000000186a2d : mov ebx, 0xba9efffd ; std ; call qword ptr [rcx]
0x00000000001869b5 : mov ebx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000186a39 : mov ebx, 0xbb11fffd ; std ; call qword ptr [rsi]
0x00000000001869b9 : mov ebx, 0xbb11fffd ; std ; call rcx
0x0000000000186ab9 : mov ebx, 0xbb11fffd ; std ; jmp rax
0x00000000001791f1 : mov ebx, 0xbb12fff3 ; call qword ptr [rdx]
0x0000000000172cfb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000123c06 : mov ebx, 0xc8 ; call rax
0x00000000001984a7 : mov ebx, 0xd1cffed ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198537 : mov ebx, 0xd1cffed ; mov ch, 0xaa ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198f97 : mov ebx, 0xd1cffed ; push 0xbb ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000179269 : mov ebx, 0xd819fff3 ; call qword ptr [rdx]
0x0000000000058af7 : mov ebx, 1 ; jmp 0x54d5f
0x00000000000ba232 : mov ebx, 1 ; jmp 0xba201
0x000000000018aef9 : mov ebx, dr0 ; call rsp
0x00000000001217eb : mov ebx, eax ; jne 0x121789 ; xor eax, eax ; pop rbx ; ret
0x00000000000d8ef6 : mov ebx, eax ; mov edx, r8d ; jmp 0xd8f08
0x00000000000f0e8f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012eb99 : mov ebx, eax ; test r14d, r14d ; jle 0x12ebe1 ; call 0x12adb9
0x000000000019ac84 : mov ebx, edi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000007b57a : mov ebx, edi ; je 0x7b590 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001013c9 : mov ebx, edi ; jmp 0x101114
0x00000000000a84e1 : mov ebx, edi ; setne dl ; jmp 0xa84fb
0x000000000002e7a6 : mov ebx, edi ; test rax, rax ; je 0x2e7b6 ; call rax
0x00000000001aa9dc : mov ebx, es ; add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000194b44 : mov ebx, esp ; in al, dx ; jmp qword ptr [rdx]
0x00000000000f53b3 : mov ecx, 0x49fff2a0 ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000059891 : mov ecx, 0x89000000 ; ret 0x348
0x000000000006c0d3 : mov ecx, 0x89000084 ; ret
0x0000000000179b90 : mov ecx, 0xb9fff498 ; cwde ; hlt ; jmp qword ptr [rsi]
0x0000000000186a01 : mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000172cf9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000000314c : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000018b30d : mov ecx, 0xd7f40001 ; hlt ; jmp rsp
0x0000000000081ae9 : mov ecx, 0xf6000005 ; ret
0x000000000002d501 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2d513 ; call rcx
0x0000000000197b7e : mov ecx, dword ptr [rbp + rbp*8 - 0x5f2e301] ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001283a6 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000103cc5 : mov ecx, dword ptr [rbp - 0x50] ; mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x103c63
0x000000000011ed87 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000111754 : mov ecx, dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001020a2 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000047256 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000142c4e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000007c691 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000008efd3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000136657 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000a3661 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa365f ; ret
0x0000000000047596 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000144fc3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001451c3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001453c3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009cf30 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009cf71 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000014d3e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d373 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d303 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014d225 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d1b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d145 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d0d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d065 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cff5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014cf85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d4c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009cf11 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a43f9 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000124105 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000af8db : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000123f0e : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x0000000000120b1e : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000003d7a4 : mov ecx, eax ; jmp 0x3d68c
0x0000000000120ec8 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f09c2 : mov ecx, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x0000000000096ce6 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000011e165 : mov ecx, ebp ; call rbx
0x00000000000a45b2 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000009696e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000096cd4 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000070fc1 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000012e3af : mov ecx, edx ; cmp rdx, rcx ; je 0x12e3c8 ; ret
0x000000000012e3ae : mov ecx, edx ; cmp rdx, rcx ; je 0x12e3c9 ; ret
0x000000000003dc1b : mov ecx, edx ; jmp 0x3db4c
0x000000000007bb97 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000f3300 : mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000848a5 : mov ecx, esi ; mov eax, 0x16 ; je 0x848b9 ; ret
0x00000000000a3e5b : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x000000000018a008 : mov ecx, esp ; out dx, eax ; call rsp
0x00000000001ab7dc : mov ecx, ss ; add dword ptr [rax], eax ; jo 0x1ab7cc ; cmc ; call qword ptr [rax]
0x0000000000102258 : mov edi, 0x2000004 ; call rax
0x000000000018dc15 : mov edi, 0x3ad40002 ; cli ; jmp rsp
0x000000000003d1d3 : mov edi, 0x4800386b ; add esp, 8 ; ret
0x00000000000b8340 : mov edi, 0x487c8d44 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000123427 : mov edi, 0x8948ffef ; ret 0x8949
0x00000000001aa5cd : mov edi, 0x97600001 ; cmc ; call rsp
0x00000000000d64a9 : mov edi, 0xb8643b45 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000d6439 : mov edi, 0xb86c3b41 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000dbde5 : mov edi, 0xbe443b44 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x0000000000108093 : mov edi, 0xc085002b ; jne 0x1080a9 ; xor eax, eax ; ret
0x00000000001080c3 : mov edi, 0xc085002b ; jne 0x1080d9 ; xor eax, eax ; ret
0x00000000001080f3 : mov edi, 0xc085002b ; jne 0x108109 ; xor eax, eax ; ret
0x0000000000178711 : mov edi, 0xc160fffd ; std ; jmp qword ptr [rax - 0x3d]
0x000000000006e52a : mov edi, 0xe0 ; call rax
0x000000000006e4fe : mov edi, 0xe0 ; jmp rax
0x00000000000a1b44 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x00000000000c4192 : mov edi, 0xf6000000 ; ret
0x000000000011f634 : mov edi, 1 ; call 0x12b8d7
0x00000000000eef65 : mov edi, 1 ; call 0xeb1e7
0x00000000000e4a9b : mov edi, 7 ; call 0xf0d57
0x00000000001890e4 : mov edi, cs ; add byte ptr [rax], al ; mov al, 0x60 ; out dx, al ; call rsp
0x000000000002339f : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075478 : mov edi, dword ptr [rax + 0x40] ; jmp 0x75444
0x00000000000f5463 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000006fc92 : mov edi, dword ptr [rbp + 0x70] ; cmp edi, ebx ; je 0x6fca7 ; call 0xebf62
0x00000000000c3dcf : mov edi, dword ptr [rbp - 0x430] ; call r15
0x00000000000bda05 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000cab85 : mov edi, dword ptr [rbp - 0x70] ; movsx esi, byte ptr [rax] ; call 0x86e58
0x00000000000cc74f : mov edi, dword ptr [rbp - 0xa8] ; call rbx
0x00000000000a3e5e : mov edi, dword ptr [rbp] ; call r12
0x00000000000f50ba : mov edi, dword ptr [rbp] ; call rbx
0x00000000000236ea : mov edi, dword ptr [rbx + 0x18] ; call rax
0x000000000011184d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x111849 ; pop rbx ; ret
0x000000000019639c : mov edi, dword ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x00000000000f6ba8 : mov edi, dword ptr [rbx] ; call r12
0x00000000001249c1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1249d9 ; ret
0x000000000012bc51 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12bc69 ; ret
0x000000000004725a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006e529 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006e4fd : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f5068 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001064c4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000175026 : mov edi, dword ptr [rdx] ; ret
0x00000000000f5027 : mov edi, dword ptr [rsi] ; call rbx
0x000000000002bf6d : mov edi, dword ptr [rsp + 0x10] ; call r15
0x0000000000025b5b : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264aa : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a62 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000029eb0 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000028499 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028b1e : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029534 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000027792 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278bd : mov edi, dword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a4 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000f5585 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f54b0 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000a3b76 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ebf7e : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0x1081d8
0x0000000000129717 : mov edi, eax ; call qword ptr [r10]
0x00000000000ccf68 : mov edi, eax ; call rbx
0x00000000000bd5d1 : mov edi, eax ; je 0xbd608 ; mov rdi, r15 ; call r14
0x00000000000499cd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x499c1 ; mov rax, rsi ; ret
0x000000000011ed84 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000039237 : mov edi, ebp ; call 0x384b9
0x000000000006fc57 : mov edi, ebp ; call 0xebf5d
0x000000000012006b : mov edi, ebp ; call qword ptr [rax]
0x000000000012188a : mov edi, ebp ; call qword ptr [rbx]
0x00000000000f6cb1 : mov edi, ebp ; call r14
0x000000000011f81a : mov edi, ebp ; call rax
0x00000000000f67f9 : mov edi, ebp ; call rbx
0x000000000012e581 : mov edi, ebp ; call rcx
0x000000000008619b : mov edi, ebp ; call rdx
0x000000000012db7c : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001114c5 : mov edi, ebp ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11d6e8
0x00000000001283a3 : mov edi, ebp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000124102 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123f0b : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011e162 : mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000022e85 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000120cfe : mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000070fc4 : mov edi, ebp ; xor r8d, r8d ; call r12
0x00000000001331aa : mov edi, ebx ; call 0x1f414
0x000000000010bc83 : mov edi, ebx ; call 0x77f84
0x0000000000121c98 : mov edi, ebx ; call qword ptr [rax]
0x000000000002c097 : mov edi, ebx ; call r12
0x00000000000238ed : mov edi, ebx ; call r15
0x000000000006d830 : mov edi, ebx ; call r8
0x0000000000050b25 : mov edi, ebx ; call rax
0x000000000011dc41 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011dd52 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000efce9 : mov edi, ebx ; mov r13d, dword ptr fs:[r14] ; call 0xebf58
0x0000000000135c13 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f4fad : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000120b1b : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000858c6 : mov edi, ebx ; mov rdx, r15 ; call rax
0x0000000000074918 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007471d : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001353fa : mov edi, ebx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012cff0 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000165448 : mov edi, ebx ; test rdi, rdi ; jne 0x165442 ; pop rbx ; ret
0x0000000000086926 : mov edi, ecx ; call rcx
0x0000000000080a69 : mov edi, ecx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000e8b52 : mov edi, edi ; call 0x1f478
0x0000000000074d76 : mov edi, edi ; call 0x70ff4
0x000000000006fc82 : mov edi, edi ; call 0xebf5d
0x000000000011fe63 : mov edi, edi ; call qword ptr [rax]
0x00000000000bd5d6 : mov edi, edi ; call r14
0x0000000000085626 : mov edi, edi ; call rax
0x00000000000f5d8e : mov edi, edi ; call rbx
0x00000000000860c3 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000fe1e4 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000108248 : mov edi, edx ; jmp rax
0x0000000000049a51 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x49a39 ; mov rax, rsi ; ret
0x0000000000105a32 : mov edi, esi ; call 0x101d24
0x0000000000105b0b : mov edi, esi ; call 0x101dd4
0x00000000000e2840 : mov edi, esi ; call 0xdeae4
0x000000000008091e : mov edi, esi ; call qword ptr [rax]
0x00000000001208b8 : mov edi, esi ; call rax
0x00000000000f5d6e : mov edi, esi ; call rbx
0x00000000000f58b2 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000023f6e : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000105b69 : mov edi, esi ; xor eax, eax ; call 0x101dd6
0x000000000013315e : mov edi, esp ; call 0x1f404
0x00000000001331da : mov edi, esp ; call 0x1f474
0x000000000001ff62 : mov edi, esp ; call qword ptr [r14]
0x0000000000187ec9 : mov edi, esp ; call qword ptr [rax]
0x000000000019c9d1 : mov edi, esp ; call qword ptr [rdx]
0x00000000000834aa : mov edi, esp ; call rax
0x00000000000f5d25 : mov edi, esp ; call rbx
0x00000000001213e9 : mov edi, esp ; call rdx
0x00000000001218ca : mov edi, esp ; mov edx, ebx ; jmp 0x1218f7
0x00000000000e3124 : mov edi, esp ; mov esi, 0xe0 ; call 0x1f409
0x000000000019dee1 : mov edi, gs ; jmp qword ptr [rax]
0x000000000019df11 : mov edi, gs ; jmp qword ptr [rdx]
0x000000000006fc56 : mov edi, r13d ; call 0xebf5e
0x000000000006fc81 : mov edi, r15d ; call 0xebf5e
0x0000000000108601 : mov edx, 0x1002b ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011493a : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000011491c : mov edx, 0x107 ; cmove eax, edx ; ret
0x000000000019a13d : mov edx, 0x10e00000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000000048f8 : mov edx, 0x1200002a ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x0000000000078956 : mov edx, 0x140 ; pop rbx ; ret
0x00000000000e3902 : mov edx, 0x1d6 ; call 0x2fbf7
0x00000000000e3940 : mov edx, 0x213 ; call 0x2fbf7
0x00000000000e3921 : mov edx, 0x215 ; call 0x2fbf7
0x000000000018db35 : mov edx, 0x29640002 ; cli ; call rsp
0x00000000001083be : mov edx, 0x3948002b ; ret 0xda75
0x00000000000d21cf : mov edx, 0x75cf3840 ; ret
0x000000000006390f : mov edx, 0x826 ; call 0x2fbf7
0x0000000000118e22 : mov edx, 0x83fffffe ; ret 0x8303
0x0000000000035d19 : mov edx, 0x89490005 ; ret 0xf41
0x0000000000186a21 : mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001744de : mov edx, 0xcac982a4 ; call 0xffffffffaed9e35e
0x0000000000198c27 : mov edx, 0xd1cffed ; test al, 0xb9 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000008c560 : mov edx, 0xf48000b ; ret 0x8348
0x00000000000c2599 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x0000000000100250 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000012db34 : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012db7e : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000ef56c : mov edx, 8 ; call 0x3b827
0x00000000000ef56b : mov edx, 8 ; call 0x3b828
0x000000000017afcd : mov edx, dr1 ; call rax
0x00000000000e4433 : mov edx, dword ptr [r12 + 4] ; jmp 0xe4402
0x0000000000073025 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c113d : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1153 ; call rdx
0x000000000008680f : mov edx, dword ptr [rax - 0x76b7fff1] ; ret 0xff31
0x0000000000074548 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021ebc : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000a4b48 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0xa4b47 ; ret
0x000000000007e670 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x7e680 ; call rdx
0x0000000000107180 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001077b9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000103cc9 : mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103c5f
0x00000000001316b4 : mov edx, dword ptr [rbp - 0xc0] ; jmp 0x131686
0x0000000000078cce : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000010be4f : mov edx, dword ptr [rbx] ; jmp 0x10be19
0x000000000013ae2f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013955d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000010843a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0x108438 ; leave ; ret
0x0000000000165149 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165160 ; call rdx
0x0000000000108241 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000037a26 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000086c05 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x86c09 ; ret
0x0000000000165040 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165052 ; call rdx
0x0000000000106fb2 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000d2067 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009cf52 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009cf43 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009cf93 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b01a1 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb0176 ; ret
0x000000000009cfa3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000107630 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000144a01 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000144dc0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144651 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009e520 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f350 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009cf20 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a0dc0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009e571 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f3a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009cf61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009e501 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f321 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cf01 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000102254 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x0000000000102157 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000bdd01 : mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000e4434 : mov edx, dword ptr [rsp + 4] ; jmp 0xe4401
0x00000000000ebf82 : mov edx, eax ; call 0x1081d4
0x0000000000100690 : mov edx, eax ; jmp 0x100685
0x000000000010c998 : mov edx, eax ; jmp 0x10c933
0x0000000000127587 : mov edx, eax ; jmp 0x12754b
0x000000000004958a : mov edx, eax ; jmp 0x495a2
0x000000000004c6a9 : mov edx, eax ; jmp 0x4c6df
0x000000000004c80d : mov edx, eax ; jmp 0x4c82d
0x0000000000070b5e : mov edx, eax ; jmp 0x70b1b
0x00000000000715c9 : mov edx, eax ; jmp 0x71589
0x0000000000071bae : mov edx, eax ; jmp 0x71b72
0x0000000000071d1a : mov edx, eax ; jmp 0x71cd4
0x0000000000072009 : mov edx, eax ; jmp 0x71fc9
0x0000000000077551 : mov edx, eax ; jmp 0x774f7
0x0000000000077717 : mov edx, eax ; jmp 0x776db
0x00000000000778b2 : mov edx, eax ; jmp 0x7786d
0x0000000000078143 : mov edx, eax ; jmp 0x78104
0x00000000000782ed : mov edx, eax ; jmp 0x782a6
0x0000000000078792 : mov edx, eax ; jmp 0x7872c
0x0000000000097b24 : mov edx, eax ; jmp 0x97b1a
0x00000000000a5583 : mov edx, eax ; jmp 0xa5551
0x00000000000a7738 : mov edx, eax ; jmp 0xa7761
0x00000000000a7dc3 : mov edx, eax ; jmp 0xa7d91
0x00000000000aa473 : mov edx, eax ; jmp 0xaa441
0x00000000000c42f1 : mov edx, eax ; jmp 0xc430f
0x00000000000c4882 : mov edx, eax ; jmp 0xc4821
0x00000000000d8ef9 : mov edx, eax ; jmp 0xd8f05
0x00000000000e4d24 : mov edx, eax ; jmp 0xe4d17
0x00000000000f262c : mov edx, eax ; jmp 0xf25c0
0x00000000000f3a3d : mov edx, eax ; jmp 0xf3a11
0x00000000000f7d9b : mov edx, eax ; jmp 0xf7dc5
0x00000000000f7e6c : mov edx, eax ; jmp 0xf7e97
0x0000000000105b66 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; call 0x101dd9
0x0000000000107344 : mov edx, ebp ; call rax
0x00000000000a42aa : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000023511 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000012a70c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012281e : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000010c526 : mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x000000000002079b : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x207b0
0x00000000000bcfbc : mov edx, ebp ; xor ecx, ecx ; jmp 0xbcf8a
0x00000000001073c4 : mov edx, ebx ; call rax
0x00000000001218cc : mov edx, ebx ; jmp 0x1218f5
0x00000000000860c6 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000086282 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000f2591 : mov edx, ebx ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000858c9 : mov edx, edi ; call rax
0x0000000000110f8a : mov edx, edi ; mov rdi, r12 ; call rax
0x000000000010773c : mov edx, esi ; call rax
0x00000000001a2d79 : mov edx, esi ; jmp qword ptr [rdi]
0x000000000018aa51 : mov edx, esi ; jmp rsp
0x0000000000076652 : mov edx, esi ; mov rdi, rbx ; call rax
0x0000000000122921 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000013665a : mov edx, esp ; add r9, r11 ; call rax
0x0000000000106fb9 : mov edx, esp ; call rax
0x0000000000085623 : mov edx, esp ; mov rdi, r15 ; call rax
0x000000000010c525 : mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x0000000000078791 : mov edx, r8d ; jmp 0x7872d
0x00000000000d8ef8 : mov edx, r8d ; jmp 0xd8f06
0x00000000000749d9 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001886bd : mov es, word ptr [rax] ; add byte ptr [rcx + rsi*8 - 0x16], dl ; call rsp
0x00000000001aa5e6 : mov es, word ptr [rbx] ; pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x000000000018d515 : mov es, word ptr [rdx] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000009f16e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000004e5ca : mov esi, 0x31e9ffff ; ret 0xffff
0x0000000000085e83 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000dbe01 : mov esi, 0x39c77f04 ; ret 0xc189
0x00000000000dbde9 : mov esi, 0x39df7f04 ; ret 0xc189
0x0000000000187530 : mov esi, 0x40fffc84 ; mov edi, esp ; call rax
0x000000000003deef : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a352e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000025726 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000004f2b3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000110e47 : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000040a22 : mov esi, 0x8349016b ; ret
0x0000000000096b65 : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x000000000008568c : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000085205 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000129e95 : mov esi, 0xa ; mov rdi, rax ; call qword ptr [r10]
0x000000000017910d : mov esi, 0xbda8fff3 ; jmp qword ptr [rdi - 0x3d]
0x0000000000096c5d : mov esi, 0xc0844507 ; jne 0x96c51 ; xor eax, eax ; ret
0x0000000000172cfe : mov esi, 0xc2c1c0bf ; ret
0x00000000000887cb : mov esi, 0xc3d089d6 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000101f92 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000096b0d : mov esi, 0xc984070c ; jne 0x96b08 ; ret
0x0000000000096b95 : mov esi, 0xca390714 ; je 0x96b98 ; ret
0x0000000000096ac1 : mov esi, 0xd2840714 ; jne 0x96ac0 ; ret
0x00000000000e3126 : mov esi, 0xe0 ; call 0x1f407
0x0000000000002bcd : mov esi, 0xf8cbeb8f ; ret
0x00000000000f5db0 : mov esi, 1 ; call rbx
0x00000000000f5f9d : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000000f5e69 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000000f5de1 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000011fe5d : mov esi, 1 ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000129711 : mov esi, 1 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6227 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006d82a : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006ceaf : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f621b : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000000f5f8e : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000f5e5a : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000000f5dd2 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000001298d0 : mov esi, 2 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f677c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000000f67d3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000000f6853 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x000000000012ab64 : mov esi, 3 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6953 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001299b0 : mov esi, 3 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012016e : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000129aeb : mov esi, 6 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000129c1b : mov esi, 7 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000129dc1 : mov esi, 8 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001297eb : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x000000000018b8f9 : mov esi, dr0 ; call rsp
0x00000000000a39ad : mov esi, dr1 ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000bda01 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022e88 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000065b6b : mov esi, dword ptr [rip + 0x3583ef] ; call rax
0x0000000000064273 : mov esi, dword ptr [rip + 0x359ce7] ; call rax
0x000000000005edf7 : mov esi, dword ptr [rip + 0x35f163] ; call rax
0x000000000005608d : mov esi, dword ptr [rip + 0x367ecd] ; call rax
0x000000000004f083 : mov esi, dword ptr [rip + 0x36eed7] ; call rax
0x0000000000049f3f : mov esi, dword ptr [rip + 0x37401b] ; call rax
0x000000000004759a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000011f618 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023514 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000008287b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000834a5 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027ea7 : mov esi, dword ptr [rsp + 0x50] ; call rax
0x000000000010215c : mov esi, dword ptr [rsp + 8] ; call rax
0x0000000000082ecb : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000093e4a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x93e65 ; jmp 0x93e1f
0x00000000000782e6 : mov esi, eax ; call 0x74554
0x00000000000eef63 : mov esi, eax ; mov edi, 1 ; call 0xeb1e9
0x00000000000dedf0 : mov esi, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000011f54d : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003a2f3 : mov esi, ebp ; call r12
0x00000000000860c9 : mov esi, ebp ; call rax
0x0000000000189381 : mov esi, ebp ; jmp rsp
0x00000000000a3cbf : mov esi, ebp ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086285 : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000010bc80 : mov esi, ebp ; mov rdi, rbx ; call 0x77f87
0x000000000008643d : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000001353fe : mov esi, ebp ; pop rbp ; jmp rax
0x000000000013315b : mov esi, ebx ; mov rdi, r12 ; call 0x1f407
0x00000000000f6cae : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000086198 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000012b48d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012e57e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000e283d : mov esi, edi ; mov rdi, r14 ; call 0xdeae7
0x000000000012475a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000007dfa2 : mov esi, edx ; call qword ptr [rax]
0x00000000001064c8 : mov esi, edx ; call rax
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000188fdc : mov esi, es ; add byte ptr [rax], al ; jp 0x18904c ; in eax, dx ; call rsp
0x00000000000851a5 : mov esi, esi ; call rax
0x0000000000128084 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c29b9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000127824 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000dbd7f : mov esi, esi ; ret 0x7408
0x0000000000072572 : mov esi, esp ; call 0x49cf9
0x00000000000cb77a : mov esi, esp ; call 0xf0d59
0x0000000000121bb5 : mov esi, esp ; call qword ptr [rax]
0x000000000010c523 : mov esi, esp ; mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x000000000012dcbd : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012a70f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000011e15f : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000121c95 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000085413 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000011dd4f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000782e5 : mov esi, r8d ; call 0x74555
0x000000000019a2f5 : mov esp, 0x17780000 ; out dx, al ; call qword ptr [rdi]
0x000000000019a325 : mov esp, 0x18680000 ; out dx, al ; call qword ptr [rcx]
0x000000000018af2c : mov esp, 0x240001a1 ; nop ; call rsp
0x000000000018d2ec : mov esp, 0x34000279 ; add bh, cl ; call rsp
0x000000000019bc0c : mov esp, 0x400000d5 ; and ebp, esi ; jmp rcx
0x00000000000f3013 : mov esp, 0x401f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cb97 : mov esp, 0x440f48c7 ; ret 0xc083
0x000000000012b742 : mov esp, 0x440f49dd ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008bed1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008bf01 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008bef1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001a540c : mov esp, 0x6000016d ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001885b4 : mov esp, 0x6400008a ; in eax, -0x16 ; call rsp
0x0000000000189624 : mov esp, 0x740000f8 ; mov al, 0xee ; call rsp
0x000000000018c0cc : mov esp, 0x74000202 ; xor dh, bh ; call rsp
0x000000000019780c : mov esp, 0x80000091 ; mov bh, 0xed ; jmp qword ptr [rdx]
0x00000000001a1f0c : mov esp, 0x80000138 ; in eax, -0xf ; jmp rsi
0x00000000001aaa0c : mov esp, 0x800001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000028eee : mov esp, 0x89fffffc ; ret 0xe283
0x00000000000450e6 : mov esp, 0x9024 ; add bl, ch ; ret 0x9066
0x000000000018e3e4 : mov esp, 0x94000166 ; push rdx ; sti ; call rsp
0x000000000018bfcc : mov esp, 0x940001ff ; sub esi, edi ; call rsp
0x0000000000188344 : mov esp, 0xa400007d ; jle 0x18833c ; call rsp
0x000000000018a724 : mov esp, 0xa4000169 ; mov dl, 0xf1 ; call rsp
0x0000000000179240 : mov esp, 0xa4fff3da ; fdiv st(3) ; call qword ptr [rdx]
0x000000000019df0c : mov esp, 0xb00000f8 ; mov edi, gs ; jmp qword ptr [rdx]
0x000000000018bdec : mov esp, 0xb40001f7 ; add esi, edi ; call rsp
0x000000000018d3a4 : mov esp, 0xb400027f ; xor ecx, edi ; call rsp
0x000000000018de14 : mov esp, 0xb40002cd ; cli ; jmp rsp
0x000000000016e3c0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000019e30c : mov esp, 0xc00000fc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001a770c : mov esp, 0xc0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000008cb86 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000018c9fc : mov esp, 0xc400023a ; and al, bh ; call rsp
0x0000000000088c6b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000018b8f4 : mov esp, 0xd40001de ; mov esi, dr0 ; call rsp
0x000000000018d6fc : mov esp, 0xd400029c ; popfq ; stc ; call rsp
0x00000000001aba0c : mov esp, 0xf00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x000000000009390b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008bee1 : mov esp, 0xf80148c0 ; ret
0x000000000004fdd8 : mov esp, 0xfc239c1 ; ret 0xb941
0x0000000000187f09 : mov esp, dr1 ; call qword ptr [rax + 0x10fffc8d]
0x000000000012afec : mov esp, dword ptr [rax] ; jmp 0x12affa
0x0000000000021ac1 : mov esp, eax ; call 0xa1b38
0x0000000000036bb9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000a7735 : mov esp, ebx ; mov r10, rax ; jmp 0xa7764
0x0000000000187f01 : mov esp, edi ; call qword ptr [rax + 0x10fffc8a]
0x0000000000187545 : mov esp, edi ; call qword ptr [rax]
0x0000000000187741 : mov esp, edi ; jmp qword ptr [rax]
0x0000000000187605 : mov esp, edi ; jmp rdx
0x0000000000028e12 : mov fs, ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001893e9 : mov gs, esi ; jmp rsp
0x000000000004e802 : mov qword ptr [r15 + 8], rdx ; jmp 0x4e7cf
0x0000000000123ca3 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x000000000004bff0 : mov qword ptr [r8], rax ; jmp 0x4bfbc
0x0000000000061800 : mov qword ptr [r8], rax ; jmp 0x617cc
0x0000000000123d72 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000117fd7 : mov qword ptr [r9], r10 ; ret
0x000000000011807b : mov qword ptr [r9], rcx ; ret
0x0000000000118047 : mov qword ptr [r9], rdi ; ret
0x00000000000741c8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074208 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075068 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000073028 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000d206a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000d209c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x00000000000741cc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075106 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c8cd : mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x000000000007bcc9 : mov qword ptr [rax + 8], 0 ; ret
0x000000000005dcf4 : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000f1267 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000026fc4 : mov qword ptr [rax], rbx ; jmp 0x26f8f
0x0000000000029c06 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd9
0x000000000002add6 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada9
0x00000000000498eb : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x0000000000074754 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000777c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000082735 : mov qword ptr [rax], rdi ; ret
0x00000000000fa342 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000746af : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002fa03 : mov qword ptr [rax], rdx ; ret
0x0000000000075380 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005efa0 : mov qword ptr [rbp - 0x11a0], rcx ; jmp rax
0x0000000000063175 : mov qword ptr [rbp - 0x11a8], r10 ; call 0x1f419
0x000000000004a0b8 : mov qword ptr [rbp - 0x5b0], rcx ; jmp rax
0x00000000000233a2 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000000f7d96 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7dca
0x00000000000f7e67 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0xf7e9c
0x0000000000107737 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x000000000002ca86 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136145 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000788f6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000078e08 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012e7c1 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001360f2 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e818 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e3baa : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073054 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000086921 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000f05e5 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000787e6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b42c : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000086bdc : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012eb21 : mov qword ptr [rbx], 0 ; call 0x12ade9
0x00000000000f4d31 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000013636d : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012acf1 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000086864 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000123c8b : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000021bfc : mov qword ptr [rcx + 0x968], rdx ; ret
0x000000000015a983 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a993 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a9a3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a9b3 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000772c3 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000015a940 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015a960 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015a970 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015a980 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015a990 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015a9a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015a9b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015a950 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015a930 : mov qword ptr [rcx], rdx ; ret
0x00000000000e4f4a : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000038cce : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009e73c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f58c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009d0cc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009d0ac : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0ffc : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009dd9f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009d10f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d12f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d0f0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000733e6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012e423 : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000012e3c0 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012e3e5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001280fb : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000091f68 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000001280b3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037808 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000e45ed : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009e6fc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f54c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009d06c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0fbc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009e71c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f56c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009d08c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0fdc : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000014d227 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d1b7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d147 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014d0d7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009e5fa : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f43a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014d067 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cfba : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a0eaa : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009e61a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f45a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014cff7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cfca : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a0eca : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009e63a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f47a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014cf87 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009cfda : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a0eea : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3267 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000038453 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000038c53 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000007373e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cdc9 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f3257 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000008c6b1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001444e4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144522 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038bbe : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000014486b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014ca37 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144a4b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c9b7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144c3b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014c937 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000144e0c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c8a8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000014500c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c818 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000014520c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c788 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009df20 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000038b49 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001444e8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000144526 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000014469b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144797 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001446e3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014cab7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000053915 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038b18 : mov qword ptr [rdi], r9 ; ret
0x0000000000039dad : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000f3254 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000091da9 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000037b25 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009e586 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009dc46 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009cf96 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009cfa6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009cfb7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009cfc7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009cfd7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cdd9 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008c6ae : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009cf87 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000091d28 : mov qword ptr [rdi], rcx ; ret
0x000000000009e573 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f3a3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009df40 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009df60 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009df70 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009df80 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009df90 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009df50 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc27 : mov qword ptr [rdi], rdx ; ret
0x00000000000a0e13 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000011816a : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000006e426 : mov qword ptr [rdx + 0x140], rcx ; ret
0x0000000000078954 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x00000000000781fd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000783b3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000121d0f : mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000121ceb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000121cef : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000015cd3a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001589aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000015cd5a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001589ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000015cd7a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000001589ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000015cc0a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001588da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000127870 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000015cbb3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001278c7 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000158883 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000071dde : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000074545 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000007c693 : mov qword ptr [rdx], rcx ; ret
0x00000000000e32da : mov qword ptr [rdx], rdi ; ret
0x000000000012786d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010adb7 : mov qword ptr [rip + 0x2b7a02], rdx ; pop rbp ; ret
0x00000000000fc72f : mov qword ptr [rip + 0x2c1bca], rbx ; pop rbx ; ret
0x00000000000f2624 : mov qword ptr [rip + 0x2cd2f5], rax ; mov rdx, rax ; jmp 0xf25c8
0x00000000000f3a35 : mov qword ptr [rip + 0x2cdbf4], rax ; mov rdx, rax ; jmp 0xf3a19
0x000000000008ab91 : mov qword ptr [rip + 0x3360d8], rax ; ret
0x0000000000021a9a : mov qword ptr [rip + 0x39c78f], rax ; pop r12 ; ret
0x00000000000e4073 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000120eae : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d385 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003cd37 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e455e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e4056 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000120e7e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e406f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007d60a : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x00000000000733ea : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000117d4f : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000117868 : mov qword ptr [rsi], rdi ; ret
0x000000000010c5b8 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000080a6b : mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000080b3f : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000080918 : mov qword ptr [rsp + 0x28], r14 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000105fcc : mov qword ptr [rsp + 0x28], rax ; call 0x72207
0x000000000011fad9 : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x00000000000868cf : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000029eb3 : mov qword ptr [rsp + 8], rax ; call r14
0x000000000002849c : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000012e8db : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007dff2 : mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x0000000000129d0f : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000120567 : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000278c1 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000ccb26 : mov qword ptr [rsp], rax ; call rbx
0x000000000011dc43 : mov qword ptr [rsp], rcx ; call r12
0x00000000000bdcfc : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000003014c : mov qword ptr fs:[rax], rdx ; ret
0x000000000012acf0 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103cc8 : mov r10, qword ptr [rbp - 0x48] ; sete dl ; jmp 0x103c60
0x0000000000097b23 : mov r10, r8 ; jmp 0x97b1b
0x00000000000a7737 : mov r10, rax ; jmp 0xa7762
0x000000000008592b : mov r10b, 0x33 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001744dd : mov r10d, 0xcac982a4 ; call 0xffffffffaed9e35f
0x00000000001316b3 : mov r10d, dword ptr [rbp - 0xc0] ; jmp 0x131687
0x00000000000d8ef5 : mov r11, rax ; mov edx, r8d ; jmp 0xd8f09
0x00000000000fbcfb : mov r11b, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000ba231 : mov r11d, 1 ; jmp 0xba202
0x00000000000a7734 : mov r12, r11 ; mov r10, rax ; jmp 0xa7765
0x0000000000021ac0 : mov r12, rax ; call 0xa1b39
0x000000000012afeb : mov r12d, dword ptr [rax] ; jmp 0x12affb
0x00000000000d8ef1 : mov r13, qword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd8f0d
0x00000000000a5d04 : mov r13, r14 ; setne dl ; jmp 0xa5d1d
0x00000000000aabb4 : mov r13, r14 ; setne dl ; jmp 0xaabcd
0x000000000011dd54 : mov r13, rsp ; call r15
0x00000000000efcec : mov r13d, dword ptr [r14] ; call 0xebf55
0x00000000000efceb : mov r13d, dword ptr fs:[r14] ; call 0xebf56
0x000000000007dfa1 : mov r14, rdx ; call qword ptr [rax]
0x000000000019f84c : mov r14b, 0xf0 ; jmp qword ptr [rdx]
0x00000000000bd5d0 : mov r15, rax ; je 0xbd609 ; mov rdi, r15 ; call r14
0x000000000018757c : mov r15b, spl ; call rsi
0x00000000000f58b1 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000220f5 : mov r8, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000078765 : mov r8, rdx ; pop rbx ; ret
0x00000000000ccbe0 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103cc6 : mov r8b, 0x4c ; mov edx, dword ptr [rbp - 0x48] ; sete dl ; jmp 0x103c62
0x00000000000975a8 : mov r8d, 0x3d ; jmp 0x9757a
0x0000000000071378 : mov r8d, esi ; ret
0x00000000000f32ff : mov r9, rsi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001a1a7c : mov r9b, r14b ; jmp qword ptr [rdx]
0x0000000000136656 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000f09c1 : mov r9d, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x00000000000c0a7b : mov rax, -0xe ; ret
0x00000000000787f0 : mov rax, -1 ; pop rbx ; ret
0x0000000000036c86 : mov rax, -1 ; ret
0x00000000000a2ff0 : mov rax, 1 ; ret
0x00000000000a3000 : mov rax, 2 ; ret
0x00000000000a3010 : mov rax, 3 ; ret
0x00000000000a3020 : mov rax, 4 ; ret
0x00000000000a3030 : mov rax, 5 ; ret
0x00000000000a3040 : mov rax, 6 ; ret
0x00000000000a3050 : mov rax, 7 ; ret
0x0000000000136157 : mov rax, qword ptr [rax + 0x108] ; jmp rax
0x00000000000fce0f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fcbbf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007491b : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000074720 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000107a6f : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b787 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000127783 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070072 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007bb9b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007033c : mov rax, qword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070c63 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000128033 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f83e8 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f83f0 : mov rax, qword ptr [rax + 0xc8] ; ret
0x000000000013605e : mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x000000000012d174 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000f83c9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002d179 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d18d ; call rax
0x000000000002fec4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fa4e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000012d169 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cceb : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bfed : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4bfbf
0x00000000000617fd : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x617cf
0x0000000000048852 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011c598 : mov rax, qword ptr [rax] ; ret
0x00000000000838b3 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x838c5 ; call rax
0x00000000000f58b4 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000bd97a : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000023f70 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000073050 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000c0fb7 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xc0fcb ; call rax
0x000000000012acb9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12acd1 ; pop rbx ; ret
0x000000000012ad25 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12ace5 ; pop rbx ; ret
0x00000000000c11c4 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xc11dc ; call rax
0x0000000000158880 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012e7eb : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e380 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bd330 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120ee6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073090 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000120f1e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072f80 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070c60 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007c970 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012d870 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000121c20 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e188 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012e198 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012d170 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012d165 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000121bb0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000108244 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002fe62 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000121357 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000e32d7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c680 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c681 ; ret
0x0000000000133b00 : mov rax, qword ptr [rip + 0x287ff9] ; jmp rax
0x0000000000133ab0 : mov rax, qword ptr [rip + 0x288041] ; pop r12 ; jmp rax
0x0000000000133a50 : mov rax, qword ptr [rip + 0x288099] ; pop r12 ; jmp rax
0x0000000000135621 : mov rax, qword ptr [rip + 0x28a268] ; call qword ptr [rax]
0x0000000000133b61 : mov rax, qword ptr [rip + 0x28bd28] ; call qword ptr [rax]
0x0000000000112310 : mov rax, qword ptr [rip + 0x2ad6d9] ; ret
0x0000000000080b77 : mov rax, qword ptr [rip + 0x33d23a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007c950 : mov rax, qword ptr [rip + 0x342849] ; ret
0x000000000002c0e0 : mov rax, qword ptr [rip + 0x3939d9] ; ret
0x0000000000023760 : mov rax, qword ptr [rip + 0x3a04e1] ; ret
0x0000000000023750 : mov rax, qword ptr [rip + 0x3a0501] ; ret
0x000000000002ef60 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x00000000000f5589 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021ebe : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026fbf : mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26f94
0x000000000002a4db : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000286bf : mov rax, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000280be : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003d128 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f13d5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000f255f : mov rax, qword ptr [rsp - 0x68] ; ret
0x0000000000133e23 : mov rax, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013395c : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd582 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fd5e3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000011c597 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000108e4f : mov rax, r10 ; ret
0x00000000000922a1 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b178a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006ce0f : mov rax, r12 ; pop r12 ; ret
0x000000000006ca43 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ee94 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bd40c : mov rax, r14 ; pop r14 ; ret
0x00000000000815e1 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d72a : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000007d60d : mov rax, r8 ; ret
0x0000000000079569 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073a39 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f6d8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f562 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f4faf : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006f6ab : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c98dc : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007355f : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b0687 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092186 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdaf1 : mov rax, rbx ; call rax
0x00000000000f7ffe : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cbf5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e6de : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003400e : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003cb1a : mov rax, rbx ; pop rbx ; ret
0x00000000000306e2 : mov rax, rcx ; pop r13 ; ret
0x0000000000085231 : mov rax, rcx ; pop r14 ; ret
0x0000000000030668 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003570e : mov rax, rcx ; pop rbx ; ret
0x0000000000035718 : mov rax, rcx ; ret
0x0000000000108cee : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000497c8 : mov rax, rdi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a4 : mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000003c980 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000077ab9 : mov rax, rdi ; jmp 0x77a84
0x00000000000f3379 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000969f6 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a37ba : mov rax, rdi ; nop dword ptr [rax] ; ret
0x0000000000101ecb : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007da7f : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108f20 : mov rax, rdi ; pop rbx ; ret
0x000000000007c980 : mov rax, rdi ; ret
0x000000000010abd9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000b4b1b : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000070437 : mov rax, rdx ; pop r12 ; ret
0x00000000000bcff2 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000701f9 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e1ee : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000391d4 : mov rax, rdx ; pop rbx ; ret
0x0000000000038629 : mov rax, rdx ; ret
0x000000000004989b : mov rax, rsi ; nop ; ret
0x00000000000c28e3 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c409 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000049790 : mov rax, rsi ; pop rbx ; ret
0x00000000000499d3 : mov rax, rsi ; ret
0x00000000001114c7 : mov rbp, qword ptr [rbx + 0x50] ; call 0x11d6e6
0x0000000000036bbb : mov rbp, r9 ; jmp rdx
0x000000000010aca3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000a84e0 : mov rbx, r15 ; setne dl ; jmp 0xa84fc
0x00000000001217ea : mov rbx, rax ; jne 0x12178a ; xor eax, eax ; pop rbx ; ret
0x00000000000f0e8e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007b579 : mov rbx, rdi ; je 0x7b591 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e7a5 : mov rbx, rdi ; test rax, rax ; je 0x2e7b7 ; call rax
0x000000000002d500 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2d514 ; call rcx
0x00000000001283a5 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000011ed86 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000007c690 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000009cf70 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000124104 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123f0d : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000120b1d : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000003dc1a : mov rcx, r10 ; jmp 0x3db4d
0x000000000011e164 : mov rcx, r13 ; call rbx
0x00000000000a45b1 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a3e5a : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x000000000003d7a3 : mov rcx, rax ; jmp 0x3d68d
0x0000000000096ce5 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000096cd3 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000f54af : mov rdi, qword ptr [r12] ; call rbx
0x00000000000a3b75 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a3e5d : mov rdi, qword ptr [r13] ; call r12
0x00000000000f50b9 : mov rdi, qword ptr [r13] ; call rbx
0x00000000000f5026 : mov rdi, qword ptr [r14] ; call rbx
0x00000000000f5067 : mov rdi, qword ptr [r15] ; call rbx
0x000000000002339e : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000075477 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x75445
0x00000000000f5462 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000c3dce : mov rdi, qword ptr [rbp - 0x430] ; call r15
0x00000000000bda04 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000cab84 : mov rdi, qword ptr [rbp - 0x70] ; movsx esi, byte ptr [rax] ; call 0x86e59
0x00000000000cc74e : mov rdi, qword ptr [rbp - 0xa8] ; call rbx
0x00000000000f6b98 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000f51ee : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000236e9 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f6ba7 : mov rdi, qword ptr [rbx] ; call r12
0x0000000000047259 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006e528 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006e4fc : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000001064c3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002bf6c : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000025a61 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028498 : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027791 : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278bc : mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a3 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000ebf7d : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0x1081d9
0x000000000013315d : mov rdi, r12 ; call 0x1f405
0x00000000001331d9 : mov rdi, r12 ; call 0x1f475
0x000000000001ff61 : mov rdi, r12 ; call qword ptr [r14]
0x00000000000834a9 : mov rdi, r12 ; call rax
0x00000000000f5d24 : mov rdi, r12 ; call rbx
0x00000000001213e8 : mov rdi, r12 ; call rdx
0x000000000012006a : mov rdi, r13 ; call qword ptr [rax]
0x00000000000f6cb0 : mov rdi, r13 ; call r14
0x00000000000f67f8 : mov rdi, r13 ; call rbx
0x000000000008619a : mov rdi, r13 ; call rdx
0x00000000001114c4 : mov rdi, r13 ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11d6e9
0x0000000000022e84 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000070fc3 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000105a31 : mov rdi, r14 ; call 0x101d25
0x0000000000105b0a : mov rdi, r14 ; call 0x101dd5
0x00000000000e283f : mov rdi, r14 ; call 0xdeae5
0x000000000008091d : mov rdi, r14 ; call qword ptr [rax]
0x00000000001208b7 : mov rdi, r14 ; call rax
0x00000000000f5d6d : mov rdi, r14 ; call rbx
0x0000000000023f6d : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000105b68 : mov rdi, r14 ; xor eax, eax ; call 0x101dd7
0x00000000000e8b51 : mov rdi, r15 ; call 0x1f479
0x0000000000074d75 : mov rdi, r15 ; call 0x70ff5
0x000000000011fe62 : mov rdi, r15 ; call qword ptr [rax]
0x00000000000bd5d5 : mov rdi, r15 ; call r14
0x0000000000085625 : mov rdi, r15 ; call rax
0x00000000000f5d8d : mov rdi, r15 ; call rbx
0x00000000000860c2 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086925 : mov rdi, r9 ; call rcx
0x0000000000129716 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ccf67 : mov rdi, rax ; call rbx
0x000000000011ed83 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000120173 : mov rdi, rbp ; call qword ptr [rax]
0x0000000000121889 : mov rdi, rbp ; call qword ptr [rbx]
0x000000000011f61c : mov rdi, rbp ; call r14
0x000000000011f819 : mov rdi, rbp ; call rax
0x00000000000a42ac : mov rdi, rbp ; call rbx
0x000000000012e580 : mov rdi, rbp ; call rcx
0x00000000001268a9 : mov rdi, rbp ; call rdx
0x0000000000124101 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123f0a : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011e161 : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000120cfd : mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x00000000001331a9 : mov rdi, rbx ; call 0x1f415
0x000000000010bc82 : mov rdi, rbx ; call 0x77f85
0x0000000000121c97 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002c096 : mov rdi, rbx ; call r12
0x00000000000238ec : mov rdi, rbx ; call r15
0x000000000006d82f : mov rdi, rbx ; call r8
0x0000000000050b24 : mov rdi, rbx ; call rax
0x000000000011dc40 : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011dd51 : mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000135c12 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000120b1a : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000858c5 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x0000000000074917 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007471c : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001353f9 : mov rdi, rbx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012cfef : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000080a68 : mov rdi, rcx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000108247 : mov rdi, rdx ; jmp rax
0x000000000011ee85 : mov rdi, rsp ; call rax
0x000000000012d060 : mov rdi, rsp ; call rdx
0x0000000000108439 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0x108439 ; leave ; ret
0x0000000000073024 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c113c : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1154 ; call rdx
0x0000000000021ebb : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007e66f : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x7e681 ; call rdx
0x0000000000165148 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165161 ; call rdx
0x000000000016503f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165053 ; call rdx
0x0000000000144650 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009cf60 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000bdd00 : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000136659 : mov rdx, r12 ; add r9, r11 ; call rax
0x0000000000106fb8 : mov rdx, r12 ; call rax
0x0000000000085622 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000107343 : mov rdx, r13 ; call rax
0x00000000000a42a9 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012a70b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002079a : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x207b1
0x000000000010773b : mov rdx, r14 ; call rax
0x0000000000076651 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000122920 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000858c8 : mov rdx, r15 ; call rax
0x0000000000110f89 : mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000049589 : mov rdx, r8 ; jmp 0x495a3
0x00000000000ebf81 : mov rdx, rax ; call 0x1081d5
0x0000000000127586 : mov rdx, rax ; jmp 0x12754c
0x000000000004c6a8 : mov rdx, rax ; jmp 0x4c6e0
0x000000000004c80c : mov rdx, rax ; jmp 0x4c82e
0x00000000000c42f0 : mov rdx, rax ; jmp 0xc4310
0x00000000000c4881 : mov rdx, rax ; jmp 0xc4822
0x00000000000f262b : mov rdx, rax ; jmp 0xf25c1
0x00000000000f3a3c : mov rdx, rax ; jmp 0xf3a12
0x00000000000f7d9a : mov rdx, rax ; jmp 0xf7dc6
0x00000000000f7e6b : mov rdx, rax ; jmp 0xf7e98
0x0000000000023510 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000012281d : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bcfbb : mov rdx, rbp ; xor ecx, ecx ; jmp 0xbcf8b
0x00000000001073c3 : mov rdx, rbx ; call rax
0x00000000000860c5 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086281 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bda00 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022e87 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000065b6a : mov rsi, qword ptr [rip + 0x3583ef] ; call rax
0x0000000000064272 : mov rsi, qword ptr [rip + 0x359ce7] ; call rax
0x000000000005edf6 : mov rsi, qword ptr [rip + 0x35f163] ; call rax
0x000000000005608c : mov rsi, qword ptr [rip + 0x367ecd] ; call rax
0x000000000004f082 : mov rsi, qword ptr [rip + 0x36eed7] ; call rax
0x0000000000049f3e : mov rsi, qword ptr [rip + 0x37401b] ; call rax
0x0000000000047599 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000011f617 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023513 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008287a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000834a4 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027ea6 : mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000010215b : mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000082eca : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000012a70e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011e15e : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000085412 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000860c8 : mov rsi, r13 ; call rax
0x00000000000a3cbe : mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086284 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000851a4 : mov rsi, r14 ; call rax
0x00000000000e283c : mov rsi, r15 ; mov rdi, r14 ; call 0xdeae8
0x000000000003a2f2 : mov rsi, rbp ; call r12
0x000000000010bc7f : mov rsi, rbp ; mov rdi, rbx ; call 0x77f88
0x000000000008643c : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001353fd : mov rsi, rbp ; pop rbp ; jmp rax
0x000000000013315a : mov rsi, rbx ; mov rdi, r12 ; call 0x1f408
0x0000000000133159 : mov rsi, rbx ; mov rdi, r12 ; call 0x1f409
0x00000000000f6cad : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000086197 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000012b48c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012e57d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000124759 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001064c7 : mov rsi, rdx ; call rax
0x0000000000121bb4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012dcbc : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000121c94 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000036bb8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000017844c : mov spl, 0xf0 ; call rdi
0x000000000018774c : mov spl, dil ; call rax
0x000000000002b359 : mov ss, word ptr [rax + 0x29480000] ; ret 0x8b49
0x00000000000f0b13 : mov word ptr [r8 + 0x21], si ; ret
0x00000000001a7edc : mov word ptr [rax + 0x2b700001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000000d6c52 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000008c6a1 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000d3c3b : mov word ptr [rax - 0x7b], cs ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x840f
0x000000000009d760 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000018a104 : mov word ptr [rax], dr1 ; add dword ptr [rax], eax ; shr bh, 1 ; call rsp
0x00000000000fcbaf : mov word ptr [rax], dx ; ret
0x00000000001899c4 : mov word ptr [rax], ss ; add dword ptr [rax], eax ; pop rcx ; add ch, bh ; call rsp
0x000000000018dadc : mov word ptr [rbp + 0x214b0002], dr0 ; cli ; call rsp
0x00000000001a53dc : mov word ptr [rbp + 1], gs ; add byte ptr [rax], dh ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018cefc : mov word ptr [rbp + 2], ds ; add byte ptr [rdx], ah ; jge 0x18cf02 ; call rsp
0x0000000000188c44 : mov word ptr [rbp - 0x18820000], gs ; jmp 0x188c52
0x000000000018d20c : mov word ptr [rbx + 2], dr0 ; add ah, bl ; clc ; call rsp
0x000000000018ca44 : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; push rcx ; and edi, eax ; call rsp
0x000000000001b168 : mov word ptr [rcx + 0x18], fs ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000188a44 : mov word ptr [rcx + 0x4c630000], fs ; jmp 0x188a52
0x000000000015a912 : mov word ptr [rcx + 4], dx ; ret
0x000000000015a953 : mov word ptr [rcx + 8], dx ; ret
0x000000000010c938 : mov word ptr [rcx - 0x77], es ; xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x000000000015a8e0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015a8d0 : mov word ptr [rcx], dx ; ret
0x000000000009e67c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f4cc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009d00c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0f3c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009e784 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f5d4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009d0f4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a1044 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000014d4c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003d45f : mov word ptr [rdi + 2], dx ; ret
0x0000000000096a82 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009f378 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000969e2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009cf48 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a0de8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009f3da : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009e59a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009cf8a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a0e4a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000001a6ddc : mov word ptr [rdi - 0x226fffff], es ; hlt ; jmp qword ptr [rcx]
0x0000000000144bec : mov word ptr [rdi - 2], cx ; ret
0x0000000000144a04 : mov word ptr [rdi - 2], dx ; ret
0x0000000000144be8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009cf13 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009dbe6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014d4cb : mov word ptr [rdi], cx ; ret
0x000000000009e503 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f323 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009cf03 : mov word ptr [rdi], dx ; ret
0x00000000000a0d93 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000018a004 : mov word ptr [rdi], gs ; add dword ptr [rax], eax ; mov ecx, esp ; out dx, eax ; call rsp
0x0000000000096a40 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000969a0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000e4620 : mov word ptr [rdi], si ; xor al, al ; ret
0x000000000015cc88 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000099cbd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000099d41 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000015cc33 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000099c58 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000189d04 : mov word ptr [rdx], ds ; add dword ptr [rax], eax ; cmovnp ebp, edi ; call rsp
0x000000000019d6a2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000efe05 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000018adcc : mov word ptr [rsi + 0x75580001], ss ; call rsp
0x000000000003d3cf : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d416 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000e4603 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000036a74 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000022e83 : movabs al, byte ptr [0x201a748b48ef894c] ; call rax
0x000000000001b180 : movabs al, byte ptr [0x2800000000001861] ; ret
0x000000000004242e : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x000000000001b1b0 : movabs al, byte ptr [0x3800000000001863] ; ret
0x00000000000b181f : movabs al, byte ptr [0x8948c28948000cc9] ; ret
0x00000000000e1d6c : movabs al, byte ptr [0x8948f6854dfff3d6] ; ret
0x000000000003fcaf : movabs al, byte ptr [0x8948fe8944000000] ; ret 0x8948
0x00000000000401fe : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000075473 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x00000000001acc86 : movabs byte ptr [0xf571140d1cfff571], al ; jmp qword ptr [rdx]
0x00000000000d1ec3 : movabs dword ptr [0x5bffffff67820fca], eax ; ret
0x00000000000e34ee : movabs dword ptr [0x83305e8b49000003], eax ; ret
0x000000000007a301 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x0000000000020fcb : movabs dword ptr [0x8348c6ff411572c1], eax ; ret
0x0000000000080db9 : movabs dword ptr [0x950fd339480033d9], eax ; ret 0x8348
0x0000000000190436 : movabs dword ptr [0xea19090d1cffea2f], eax ; jmp qword ptr [rdx]
0x000000000019440e : movabs dword ptr [0xec7d180d1cffec7d], eax ; jmp qword ptr [rdx]
0x0000000000198f96 : movabs dword ptr [0xedbb6a0d1cffedbb], eax ; jmp qword ptr [rdx]
0x000000000019b96e : movabs dword ptr [0xee4d0b0d1cffee58], eax ; jmp qword ptr [rdx]
0x00000000001a13c6 : movabs dword ptr [0xf17e3c0d1cfff17f], eax ; jmp qword ptr [rdx]
0x00000000001a912e : movabs dword ptr [0xf4df700d1cfff4e1], eax ; jmp qword ptr [rdx]
0x00000000001ab556 : movabs dword ptr [0xf559500d1cfff559], eax ; jmp qword ptr [rdx]
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x0000000000192226 : movabs eax, dword ptr [0xea964d0d1cffea97] ; jmp qword ptr [rdx]
0x0000000000199096 : movabs eax, dword ptr [0xedbb4e0d1cffedbb] ; jmp qword ptr [rdx]
0x00000000001a1e5e : movabs eax, dword ptr [0xf190ac0d1cfff191] ; jmp qword ptr [rdx]
0x0000000000108614 : movabs eax, dword ptr [0xf30474c08548002b] ; ret
0x00000000001b0016 : movabs eax, dword ptr [0xf620be0d1cfff622] ; jmp qword ptr [rdx]
0x00000000000f61a3 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000036256 : movapd xmm0, xmm1 ; ret
0x00000000000363d4 : movaps xmm0, xmm1 ; jne 0x363e9 ; add rsp, 8 ; ret
0x00000000000366af : movaps xmm0, xmm1 ; jne 0x366c9 ; add rsp, 8 ; ret
0x0000000000036257 : movaps xmm0, xmm1 ; ret
0x0000000000143172 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000014316e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000014321c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000036366 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000036176 : movd mm0, eax ; ret
0x0000000000036365 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036175 : movd mm0, rax ; ret
0x0000000000036592 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000361df : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036526 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000036253 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x00000000000361de : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036252 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000036680 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000364fc : movd xmm0, eax ; ret
0x0000000000036591 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000036525 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000009cfe0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009e83d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f68d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009dea0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009d1ad : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f8f3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009e0e3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000014d19f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d12f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d0bf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d04f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e7dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f62d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009d14d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000014cfdf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e7fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f64d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009d16d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000014cf6f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e81d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f66d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009d18d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000014d58f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d51f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d4af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d43f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d3cf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d35f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d2ef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d27f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d20f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008c606 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000014c6fb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000014c76b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009dfa0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009f494 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e654 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009dcc7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cff4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009d037 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009d027 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d0a8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d068 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009d088 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d008 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d1a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d149 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d169 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d189 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009cfe4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a0f04 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014cf74 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000099da2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000099dc2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099de2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000099c2c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099bd6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000099da3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000099dc3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099de3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000099c2d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099bd7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009cfe1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009e83e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009f68e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009dea1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009d1ae : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a10fe : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f8f4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009e0e4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a1174 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000014d1a0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d130 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d0c0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d050 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e7de : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f62e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009d14e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a109e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000014cfe0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e7fe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f64e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009d16e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a10be : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000014cf70 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e81e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f66e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009d18e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a10de : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000014d590 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d520 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d4b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d440 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d3d0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d360 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d2f0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d280 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014d210 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008c5f3 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8c608 ; ret
0x000000000008c5f2 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8c609 ; ret
0x000000000008c608 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000014c6fc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000014c76c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014cea7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ce27 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cd97 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cd17 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cc97 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cc17 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cb97 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014cb17 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ca97 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014ca17 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c997 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c917 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c887 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c7f7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014c767 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009dfa1 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009f495 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009e655 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009dcc8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cff5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009d048 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009dd1b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009d038 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009d028 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d0a9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d069 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009d089 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d009 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d1aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d14a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d16a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d18a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009cfe5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a0f05 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014cf75 : movq qword ptr [rdi], mm1 ; ret
0x0000000000036364 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036174 : movq xmm0, rax ; ret
0x00000000000361dd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036251 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000001935f4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; fsub dword ptr [rdx - 0x15] ; jmp qword ptr [rbx]
0x00000000000d0de2 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd0d75
0x0000000000189be4 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rsp + rdi - 0x11], al ; call rsp
0x0000000000187e51 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rax
0x0000000000187dd1 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rsp
0x000000000017a339 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x000000000018c9bc : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rdx], al ; add byte ptr [rsi + rbx], al ; clc ; jmp rsp
0x0000000000188b24 : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add al, 0x54 ; jmp 0x188b32
0x00000000001a7ef4 : movsb byte ptr [rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; mov byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000179244 : movsb byte ptr [rdi], byte ptr [rsi] ; fdiv st(3) ; call qword ptr [rdx]
0x000000000019c3f4 : movsb byte ptr [rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add al, bh ; js 0x19c3f0 ; jmp qword ptr [rcx]
0x0000000000174ea2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001a53f4 : movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; hlt ; jmp qword ptr [rcx]
0x0000000000188348 : movsb byte ptr [rdi], byte ptr [rsi] ; jle 0x188338 ; call rsp
0x00000000001760fd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x176156 ; jmp 0x176097
0x00000000000488d8 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ah, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000018e028 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, 0xfa ; call rsp
0x00000000001a1c24 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000018a728 : movsb byte ptr [rdi], byte ptr [rsi] ; mov dl, 0xf1 ; call rsp
0x000000000018db34 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x29640002 ; cli ; call rsp
0x000000000018aa50 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, esi ; jmp rsp
0x000000000019a2f4 : movsb byte ptr [rdi], byte ptr [rsi] ; mov esp, 0x17780000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a76f4 : movsb byte ptr [rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x0000000000189400 : movsb byte ptr [rdi], byte ptr [rsi] ; nop ; out dx, al ; jmp rsp
0x000000000019d4f4 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; call 0x1119cec1
0x000000000011ab7d : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000058ab0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000000001ab7f4 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ab9f4 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x0000000000186975 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001868b5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x00000000001974e4 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000018883c : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; add byte ptr [rax], al ; je 0x18885a ; jmp 0x18884a
0x0000000000187dd0 : movsb byte ptr [rdi], byte ptr fs:[rsi] ; cld ; jmp rsp
0x000000000018d83d : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; push rsp ; ret
0x0000000000188aed : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; jmp 0x188af9
0x00000000001335d7 : movsd dword ptr [rdi], dword ptr [rsi] ; call 0xffffffffc29d35da
0x0000000000187e49 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x0000000000187dc9 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rsp
0x000000000017a579 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call qword ptr [rbx]
0x000000000017a335 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x000000000017a49d : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rdi]
0x0000000000025493 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp dword ptr [rax], eax ; call 0x248a9
0x00000000001966c9 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x0000000000176735 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001a312d : movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rdx]
0x0000000000175ff1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000c10a7 : movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x0000000000038b72 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000018697d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rax
0x00000000001868b9 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rcx]
0x0000000000186899 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x0000000000083bd3 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x83be8 ; ret
0x000000000018d83c : movsd dword ptr [rdi], dword ptr fs:[rsi] ; add al, byte ptr [rax] ; push rsp ; ret
0x0000000000187dc8 : movsd dword ptr [rdi], dword ptr fs:[rsi] ; cld ; jmp rsp
0x00000000000361e2 : movsd qword ptr [rdi], xmm1 ; ret
0x00000000000361ab : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b0898 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000039ef3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000036529 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000036510 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000039ead : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000101f91 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096b0c : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x96b09 ; ret
0x0000000000096b94 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x96b99 ; ret
0x0000000000096ac0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x96ac1 ; ret
0x00000000000887ca : movsx edx, dh ; mov eax, edx ; ret
0x00000000000887c9 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000cab88 : movsx esi, byte ptr [rax] ; call 0x86e55
0x00000000000c7849 : movsxd r10, r10d ; sub r10, rdi ; sub r10, rax ; jmp 0xc7874
0x000000000002e29c : movsxd r14, dword ptr [r10 + r14*4] ; add r14, r10 ; jmp r14
0x0000000000091e6e : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002ddec : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000087131 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014ab7b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000142c4b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000096970 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000968a8 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x00000000000839af : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000006c81a : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000004de53 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000005f120 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x0000000000034e69 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000054b15 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000b8393 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000127214 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000030720 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000022aec : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c8da : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000a1b77 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003cb86 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000013cff7 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013ceb7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000013cf7e : movsxd rax, ecx ; ret
0x0000000000188fe1 : movsxd rbp, ebp ; call rsp
0x0000000000199d24 : movsxd rbp, edx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e2cb6 : movsxd rbx, dword ptr [r10 + rbx*4] ; add rbx, r10 ; jmp rbx
0x000000000009d61a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000016007d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009cda9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d450e : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000091bfd : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000128086 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000dedf2 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d243 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000013cea9 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000013cf08 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000013d101 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x00000000001867e9 : movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000f2722 : movsxd rdi, ecx ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000030065 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fef5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000187105 : movsxd rdi, esp ; call qword ptr [rdx]
0x0000000000187049 : movsxd rdi, esp ; call rax
0x0000000000187045 : movsxd rdi, esp ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000187085 : movsxd rdi, esp ; jmp qword ptr [rsi]
0x0000000000187245 : movsxd rdi, esp ; jmp rax
0x0000000000142d1f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e73d9 : movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x00000000000648bf : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x0000000000054c44 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000083665 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000b5418 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c29bb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006d353 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b4d7b : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000034c00 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000118042 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000117f29 : movsxd rdx, edx ; mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000c784a : movsxd rdx, edx ; sub r10, rdi ; sub r10, rax ; jmp 0xc7873
0x0000000000127826 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000a1c4f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a1c0f : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000ef56a : movsxd rsi, ebx ; mov edx, 8 ; call 0x3b829
0x0000000000178561 : movsxd rsi, ecx ; inc dword ptr [rax] ; int1 ; call qword ptr [rax]
0x00000000001b37a1 : movsxd rsi, edi ; jmp qword ptr [rbx]
0x00000000001639ec : movsxd rsi, esi ; ret 0x7520
0x00000000001a5039 : movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a6a1d : movsxd rsi, esp ; jmp qword ptr [rdx]
0x00000000000f072a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003d0d9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000b0899 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000039eae : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000039ef4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000361e3 : movups xmmword ptr [rdi], xmm1 ; ret
0x00000000000361ac : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000036511 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000121ba7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012decb : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012175c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0170 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c27de : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000036afc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000101f60 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dc3c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000022c28 : movzx eax, al ; neg eax ; ret
0x0000000000126153 : movzx eax, al ; pop r12 ; ret
0x00000000001229fd : movzx eax, al ; pop rbp ; ret
0x0000000000048b02 : movzx eax, al ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f4cfc : movzx eax, al ; pop rbx ; ret
0x0000000000037669 : movzx eax, al ; ret
0x000000000002fcc5 : movzx eax, ax ; ret
0x0000000000070c1d : movzx eax, bh ; ret
0x000000000007a824 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125eee : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bea6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a6c5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d8 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000073742 : movzx eax, byte ptr [rax] ; ret
0x00000000000884c8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000160090 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008c070 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000884e3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a6d0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c4b28 : movzx eax, byte ptr [rdx] ; jmp 0xc42cb
0x000000000007a825 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1b97 : movzx eax, cl ; pop rbx ; ret
0x0000000000070c1c : movzx eax, dil ; ret
0x00000000000a1bbf : movzx eax, dl ; pop rbx ; ret
0x000000000002fe7e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e4600 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a131a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1319 ; ret
0x00000000000a13ca : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa13c9 ; ret
0x0000000000160f34 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000884e0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160093 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000fbcb2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003543f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x35427 ; ret
0x0000000000097ed1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000135ac9 : movzx edx, byte ptr [rsi + rcx] ; mov byte ptr [rax + rcx], dl ; ret
0x000000000013766f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000097d63 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000163a14 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000163a74 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000163a64 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000163a54 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000163a44 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000163a34 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000163a24 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014cec0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000160ce7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001639fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000014d5a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008c073 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008c099 : movzx edx, dl ; sub eax, edx ; ret
0x000000000014ce40 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000014d530 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000565ce : movzx esi, byte ptr [rax] ; add r12, 1 ; jmp 0x565a1
0x000000000010c6b3 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x00000000000565cd : movzx r14d, byte ptr [rax] ; add r12, 1 ; jmp 0x565a2
0x00000000000ecf44 : movzx rax, al ; ret
0x000000000008a8e7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001ac3d4 : mul dword ptr [rdi - 0xb] ; jmp qword ptr [rdx]
0x000000000006aec0 : mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x000000000003e37d : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000004121c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37c : mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000f227e : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129756 : neg eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000129d35 : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000cb50b : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000036fc7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036cf1 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa7e9 : neg eax ; mov dword ptr fs:[rsi], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007a52a : neg eax ; pop r13 ; ret
0x00000000000a4f13 : neg eax ; pop r15 ; ret
0x0000000000048b06 : neg eax ; pop rbp ; ret
0x0000000000101f63 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dc3f : neg eax ; pop rbx ; ret
0x0000000000022c2b : neg eax ; ret
0x0000000000085cb1 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000001088cc : neg ecx ; cmp edx, 0xea ; cmovne eax, ecx ; ret
0x000000000007dfd1 : neg edi ; call qword ptr [rax]
0x00000000000ebd36 : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xebd04
0x00000000000ebc26 : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x00000000000f0b20 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000a4f12 : neg rax ; pop r15 ; ret
0x000000000007dfd0 : neg rdi ; call qword ptr [rax]
0x00000000000450e8 : nop ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000014c5f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000002c1ec : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a76c0 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000004574e : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016039c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000188725 : nop ; add byte ptr [rax], al ; imul edx ; jmp rsp
0x00000000000f1d1d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b25d2 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b729d : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a76c5 : nop ; add dword ptr [rax], eax ; js 0x1a76db ; cmc ; jmp qword ptr [rcx]
0x00000000001a770d : nop ; add dword ptr [rax], eax ; ror byte ptr [rbx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7665 : nop ; add dword ptr [rax], eax ; sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a76f5 : nop ; add dword ptr [rax], eax ; test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001a767d : nop ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b1319 : nop ; add dword ptr [rbx], eax ; ret
0x000000000004de56 : nop ; add rax, r12 ; jmp rax
0x000000000005f123 : nop ; add rax, r13 ; jmp rax
0x00000000000b541b : nop ; add rax, rdx ; jmp rax
0x00000000000aeeef : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000c2d5f : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002373f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007356f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008becf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009706f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000971ff : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000018af31 : nop ; call rsp
0x000000000003611c : nop ; cld ; adc al, 0 ; orpd xmm0, xmm1 ; ret
0x0000000000187ed5 : nop ; cld ; call qword ptr [rax + 0x10fffc91]
0x0000000000187f15 : nop ; cld ; call qword ptr [rax]
0x00000000001a7260 : nop ; cld ; hlt ; jmp rax
0x00000000001786a5 : nop ; cld ; jmp qword ptr [rax]
0x0000000000192f40 : nop ; cmp bh, dl ; jmp qword ptr [rcx]
0x0000000000178678 : nop ; cmp esp, 0xff ; mov al, 0x84 ; cld ; call rax
0x0000000000178a68 : nop ; imul esi, edx, 0xf269b0ff ; call rax
0x00000000001a1e1d : nop ; int1 ; jmp qword ptr [rdx]
0x0000000000177584 : nop ; jb 0x177578 ; call rax
0x0000000000186804 : nop ; jb 0x186805 ; jmp rax
0x0000000000187788 : nop ; jg 0x18778a ; call qword ptr [rax]
0x0000000000187798 : nop ; jge 0x18779a ; call qword ptr [rax]
0x0000000000187790 : nop ; jle 0x187792 ; call qword ptr [rax]
0x00000000001932d4 : nop ; jmp 0x1932da
0x0000000000127544 : nop ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000127583 : nop ; lock dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000187a60 : nop ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187ec0 : nop ; mov ah, bh ; call qword ptr [rax]
0x0000000000187c38 : nop ; mov al, 0xfc ; jmp qword ptr [rax]
0x0000000000187f04 : nop ; mov bh, ah ; call qword ptr [rax]
0x0000000000186840 : nop ; mov bl, bh ; call qword ptr [rax]
0x000000000014481f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000186850 : nop ; mov dr1, ebx ; call qword ptr [rax]
0x0000000000187ed0 : nop ; mov dr1, esp ; call qword ptr [rax]
0x0000000000120eef : nop ; mov dword ptr [rsi], 0xb ; ret
0x00000000001449ff : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000c25ff : nop ; mov eax, 0xfffa ; ret
0x00000000000747ef : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b60f : nop ; mov eax, 0xffffffff ; ret
0x00000000000a3d4f : nop ; mov eax, 1 ; ret
0x00000000001079eb : nop ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a2c7f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa2ce9 ; ret
0x00000000000a2ccf : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa2ce9 ; ret
0x00000000000bd42f : nop ; mov eax, dword ptr [rdi] ; ret
0x00000000000736df : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000037c4f : nop ; mov eax, dword ptr [rip + 0x38644a] ; ret
0x000000000010c63f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000186848 : nop ; mov edi, ebx ; call qword ptr [rax]
0x0000000000187ec8 : nop ; mov edi, esp ; call qword ptr [rax]
0x0000000000144dbf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009e51f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000187740 : nop ; mov esp, edi ; jmp qword ptr [rax]
0x00000000000787ef : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007c8ef : nop ; mov rax, -1 ; ret
0x000000000007308f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072f7f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012d16f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012d25f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000003c97f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000004978f : nop ; mov rax, rsi ; pop rbx ; ret
0x000000000007c68f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000010773a : nop ; mov rdx, r14 ; call rax
0x00000000000e461f : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009cfdf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000cab87 : nop ; movsx esi, byte ptr [rax] ; call 0x86e56
0x00000000000e45ff : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000187f14 : nop ; nop ; cld ; call qword ptr [rax]
0x0000000000186b48 : nop ; out 0xfb, al ; call qword ptr [rax + 0x20fffbe8]
0x0000000000189401 : nop ; out dx, al ; jmp rsp
0x00000000000366ff : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000010359f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016592f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb85f : nop ; pop rbx ; pop rbp ; ret
0x000000000008670f : nop ; pop rbx ; ret
0x000000000019c96c : nop ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000021870 : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000010ac9f : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000001b2c0 : nop ; ret
0x000000000001afc0 : nop ; ret 0x3b
0x0000000000002f66 : nop ; ret 0x5bdb
0x0000000000177064 : nop ; ret 0xffff
0x0000000000004900 : nop ; ret 3
0x00000000001aa920 : nop ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a0f00 : nop ; sal cl, 1 ; call rsi
0x0000000000186c30 : nop ; sar bl, 0xff ; rol ah, 1 ; sti ; jmp qword ptr [rax]
0x000000000019bab0 : nop ; sbb dh, ch ; call qword ptr [rbx]
0x0000000000186855 : nop ; sti ; call qword ptr [rax + 0x10fffb91]
0x0000000000186e44 : nop ; sti ; jmp rax
0x000000000011c61c : nop ; stosb byte ptr [rdi], al ; idiv bh ; xor eax, eax ; ret
0x00000000001869a4 : nop ; stosd dword ptr [rdi], eax ; std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x0000000000086810 : nop ; str word ptr [rax - 0x77] ; ret 0xff31
0x00000000001a7fd0 : nop ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x000000000007c6cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000187ef4 : nop ; test bh, ah ; call qword ptr [rax]
0x0000000000186838 : nop ; test edi, ebx ; call qword ptr [rax]
0x0000000000187eb8 : nop ; test edi, esp ; call qword ptr [rax]
0x0000000000187568 : nop ; test edi, esp ; jmp qword ptr [rax]
0x0000000000088c7f : nop ; test rsi, rsi ; jne 0x88c92 ; xor rax, rax ; ret
0x0000000000187f1c : nop ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x0000000000187ed8 : nop ; xchg eax, ecx ; cld ; call qword ptr [rax]
0x0000000000186858 : nop ; xchg eax, ecx ; sti ; call qword ptr [rax]
0x0000000000187ee8 : nop ; xchg eax, edi ; cld ; call qword ptr [rax]
0x0000000000187f24 : nop ; xchg eax, esi ; cld ; call qword ptr [rax]
0x0000000000187ee0 : nop ; xchg eax, esp ; cld ; call qword ptr [rax]
0x0000000000186860 : nop ; xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000017859c : nop ; xchg ecx, esi ; jmp rax
0x0000000000187efc : nop ; xchg esp, edi ; call qword ptr [rax]
0x0000000000186f68 : nop ; xor eax, 0x3790fffc ; cld ; jmp qword ptr [rax]
0x0000000000070c4f : nop ; xor eax, eax ; ret
0x00000000001905a0 : nop ; xor ebp, edx ; call qword ptr [rdx]
0x000000000008bf4f : nop ; xor rax, rax ; ret
0x000000000003698b : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000011a283 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000754bb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000007092b : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x000000000010402b : nop dword ptr [rax + rax] ; mov eax, edi ; sub eax, esi ; ret
0x000000000009cf1b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000bd32b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000470d3 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000035713 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x0000000000091723 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000007a71b : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x7a6f0
0x00000000000d278b : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000470cb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000012eb0b : nop dword ptr [rax + rax] ; push rbx ; call 0x12adb8
0x000000000002ef53 : nop dword ptr [rax + rax] ; ret
0x00000000000488eb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000385d3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a2ceb : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000005dd75 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000a2fbc : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000165665 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000736cd : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000166059 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a389d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a388d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a3895 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001088d5 : nop dword ptr [rax] ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000c270d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000c25f5 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000070c45 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000104035 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012c0fd : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000002fecd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006df8c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009dbed : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000091d24 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000000a39f5 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003571c : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x0000000000108f1c : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000007b2d5 : nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000003c915 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f301d : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000034a2c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002dce1 : nop dword ptr [rax] ; ret
0x00000000000a318c : nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000006e5a5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009dba7 : nop dword ptr cs:[rax + rax] ; ret
0x000000000003698a : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x00000000000754ba : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000007092a : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a4b12 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009e18a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000470ca : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000002ef52 : nop word ptr [rax + rax] ; ret
0x00000000000d1e92 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003c172 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a2cea : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000b4465 : not eax ; add eax, 0x16e ; ret
0x000000000012ea31 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000360a0 : not eax ; and eax, ecx ; ret
0x000000000003674f : not eax ; and eax, edx ; ret
0x00000000000376a3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000d1d9e : not eax ; pop rbx ; and eax, 2 ; pop rbp ; ret
0x00000000000376a2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000001aaa58 : or ah, al ; clc ; jmp qword ptr [rsi]
0x0000000000186cdd : or ah, bh ; call rax
0x00000000001385e7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c1f9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138615 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f124a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f83f2 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000081272 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081432 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000063e6 : or al, 0 ; call qword ptr [rcx]
0x00000000000b5416 : or al, 0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000048fe : or al, 0 ; nop ; ret 3
0x00000000000041f6 : or al, 0 ; push rax ; ret
0x000000000000a1de : or al, 0 ; ret
0x000000000004bebd : or al, 0x13 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x00000000000616d5 : or al, 0x13 ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000092ce2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x92cd9 ; ret
0x00000000000884c6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000019035c : or al, 0x1d ; add byte ptr [rax], al ; push rax ; sbb ebp, edx ; call qword ptr [rax]
0x000000000011dc45 : or al, 0x24 ; call r12
0x00000000000fa5fa : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x000000000019b6a4 : or al, 0x3c ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a245c : or al, 0x3e ; add dword ptr [rax], eax ; add ah, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000108348 : or al, 0x41 ; pop rsp ; ret
0x000000000003cb8a : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c0ca7 : or al, 0x48 ; add esp, 0x28 ; ret
0x0000000000136319 : or al, 0x48 ; add esp, 0x48 ; ret
0x00000000000366b3 : or al, 0x48 ; add esp, 8 ; ret
0x0000000000117867 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000006e4fb : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001331d8 : or al, 0x4c ; mov edi, esp ; call 0x1f476
0x00000000000b05da : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a495c : or al, 0x63 ; add dword ptr [rax], eax ; mov al, 0xfc ; call qword ptr [rsi]
0x000000000008bac8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000001a605c : or al, 0x7a ; add dword ptr [rax], eax ; mov al, 0xb2 ; hlt ; call qword ptr [rsi]
0x000000000006cb4a : or al, 0x7e ; ret
0x00000000001ac47c : or al, 0x80 ; add dword ptr [rax], eax ; add dh, dh ; cmc ; call qword ptr [rcx]
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000196ce4 : or al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000009d61c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a19a5 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000050321 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000096972 : or al, 0x88 ; add rax, r9 ; jmp rax
0x0000000000091bff : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000005ff30 : or al, 0x89 ; ret 0xeac0
0x00000000000dedf4 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000087133 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008efd4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ab7d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000142c4d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001a725c : or al, 0x8c ; add dword ptr [rax], eax ; nop ; cld ; hlt ; jmp rax
0x000000000006d245 : or al, 0x8e ; add rsi, rcx ; jmp rsi
0x000000000016007f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009cdab : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001a865c : or al, 0xa0 ; add dword ptr [rax], eax ; adc byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000d4510 : or al, 0xa8 ; add rax, rcx ; jmp rax
0x0000000000002baa : or al, 0xaf ; xbegin 0xfffffffff8c6efae ; ret
0x0000000000142c51 : or al, 0xb ; jmp r9
0x000000000009cdaf : or al, 0xb ; jmp rcx
0x0000000000128088 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000012f0b7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000fdee6 : or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012809e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001aab5c : or al, 0xc5 ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x000000000019019d : or al, 0xea ; jmp qword ptr [rdx]
0x0000000000192b19 : or al, 0xeb ; jmp rax
0x00000000000a2bd5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d8a3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000014d0c3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006ce46 : or al, 0xf6 ; ret 0x7404
0x000000000006d583 : or al, 0xf6 ; ret 0xf04
0x000000000002d502 : or al, 0xf8 ; test rcx, rcx ; je 0x2d512 ; call rcx
0x0000000000186cc5 : or al, 0xfc ; jmp rax
0x00000000000e4e82 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000e4f72 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000018c345 : or al, 2 ; add byte ptr [rbp - 9], ah ; call rsp
0x000000000009dae0 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000194ac1 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000096b0e : or al, 7 ; test cl, cl ; jne 0x96b07 ; ret
0x00000000001377bd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a3d1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001377e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000b442 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000129e96 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120f02 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f5cfa : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000000ce9b6 : or al, byte ptr [rax] ; jmp 0xce8d1
0x0000000000034636 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000a3662 : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000dcb24 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000dce3c : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000c70a9 : or al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rcx]
0x00000000000c8978 : or al, byte ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000013f7a7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fbd7f : or al, ch ; jmp 0xfbd49
0x000000000008b96b : or al, ch ; lahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000e427f : or al, ch ; mov ebx, 0x39fffde9 ; ret
0x000000000006e447 : or al, ch ; ret
0x00000000000cecf8 : or al, ch ; ret 0xf6e7
0x00000000001abc78 : or bh, ah ; cmc ; call qword ptr [rax]
0x0000000000186cc1 : or bh, ah ; jmp rax
0x000000000012e244 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000733cd : or bh, byte ptr [rax - 1] ; ret
0x0000000000194544 : or bh, byte ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x00000000000d1d9d : or bh, dh ; rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xd1dae ; pop rbp ; ret
0x00000000000f3dcf : or bh, dh ; ret 0xfc07
0x00000000000a389b : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001180c2 : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000118293 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001ac818 : or bl, bh ; cmc ; call qword ptr [rax]
0x00000000000d21df : or bl, byte ptr [rbp + 0x75] ; mov ch, 0x83 ; ret 0x8901
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b5e ; ret
0x00000000000bc8b5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b57d : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005dda2 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000011c97c : or bl, ch ; ret 0x4890
0x000000000004e805 : or bl, ch ; ret 0x8348
0x000000000014d283 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002f8ff : or bl, dh ; ret
0x00000000001aa998 : or bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000d0c98 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000d489b : or byte ptr [r10], r12b ; jmp 0xd452f
0x00000000000d0c11 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c637b : or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000356b8 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000d4911 : or byte ptr [r11], r12b ; jmp 0xd452f
0x0000000000083ee4 : or byte ptr [r13 - 0x77], r9b ; ret
0x0000000000099d3f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d0c07 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d0cce : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x000000000013146c : or byte ptr [r15], 0x94 ; ret 0xea83
0x00000000000b0bcd : or byte ptr [r8 + 0x29], cl ; ret
0x00000000000d0ce1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012e18a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x0000000000099d1e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000001588d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000121c92 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000012b48a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000012dcba : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000000cbf85 : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000003c1a2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000817af : or byte ptr [r8 - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000013f982 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d4881 : or byte ptr [r8], r12b ; jmp 0xd452f
0x0000000000020842 : or byte ptr [r9 - 0x73], 0x5d ; add eax, ebp ; ret
0x00000000000e35b1 : or byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000099d7e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000001308c3 : or byte ptr [r9], dil ; ret 0x850f
0x00000000000d0c71 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d48f7 : or byte ptr [r9], r12b ; jmp 0xd452f
0x00000000000d0c31 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000011f563 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000007dfcc : or byte ptr [rax + 0x21], cl ; xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000b0bce : or byte ptr [rax + 0x29], cl ; ret
0x000000000007ccd7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000008af79 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008323b : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000da2c3 : or byte ptr [rax + 0x63], cl ; ret 0xc148
0x0000000000035c20 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000360fb : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x0000000000101d3c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000123ca6 : or byte ptr [rax + 1], bh ; ret
0x00000000000328c3 : or byte ptr [rax + 1], cl ; ret
0x00000000000f8505 : or byte ptr [rax + 3], bh ; pop rbx ; pop rbp ; ret
0x0000000000026530 : or byte ptr [rax + 7], bh ; jmp 0x26501
0x000000000010614b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000d0ce2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b042d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000c6478 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000008bf79 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x0000000000091750 : or byte ptr [rax - 0x73], cl ; add eax, 0x6878 ; ret
0x00000000000a38dd : or byte ptr [rax - 0x73], cl ; add eax, 0xbddbb ; ret
0x00000000000a38c9 : or byte ptr [rax - 0x73], cl ; add eax, 0xc84f ; ret
0x000000000008bf8d : or byte ptr [rax - 0x73], cl ; add eax, 0xd40cb ; ret
0x00000000000a2d19 : or byte ptr [rax - 0x73], cl ; add eax, 0xd48f ; ret
0x00000000000c6378 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000039021 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000fd581 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fd5e2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f5588 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000f5461 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000027ea5 : or byte ptr [rax - 0x75], cl ; je 0x27ed4 ; push rax ; call rax
0x000000000012e18b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006e559 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000120f1d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000128032 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000099d1f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012e900 : or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x00000000001073c2 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000099c30 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010abd8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x000000000003400d : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012b48b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000001353f8 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012cfee : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000d209b : or byte ptr [rax - 0x77], cl ; jo 0xd20c7 ; xor eax, eax ; ret
0x00000000001588d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012dcbb : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x0000000000121c93 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003a2f1 : or byte ptr [rax - 0x77], cl ; out dx, al ; call r12
0x000000000007e1ed : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000003c788 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000cbf86 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003c1a3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d7f0c : or byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000d209a : or byte ptr [rax - 0x77], r9b ; jo 0xd20c8 ; xor eax, eax ; ret
0x000000000002aba3 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rbx - 0x18] ; ret 0x10b4
0x0000000000086c07 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000086c79 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x000000000008149b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002f6be : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1734 : or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000091db6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091e3e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000032632 : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000eec1e : or byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000053803 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x00000000000538d2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000817b0 : or byte ptr [rax - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x0000000000021829 : or byte ptr [rax - 0x7f], cl ; ret
0x00000000001a0398 : or byte ptr [rax - 0xf], al ; jmp qword ptr [rcx]
0x0000000000076d33 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000137a1c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000136159 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000d4882 : or byte ptr [rax], ah ; jmp 0xd452e
0x0000000000063911 : or byte ptr [rax], al ; add al, ch ; xlatb ; ret 0xfffc
0x0000000000021872 : or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007d4cf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000137a1d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a571 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137a41 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000b159a : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bccc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000184c0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000018d00 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001ab18 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17c9
0x000000000000b8e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x00000000000ef56d : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x3b826
0x0000000000129dc2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a1c83 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000120f32 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000113d40 : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f803d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000498f0 : or byte ptr [rax], al ; ret
0x00000000000a0e4d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e8b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0e2b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005d52b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013df7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c773f : or byte ptr [rbp + 0x31], al ; in al, -0x15 ; ret
0x0000000000117f5d : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000012d5fd : or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x00000000000b01a6 : or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000a37a9 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000028977 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000083ee5 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000108539 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x0000000000107a6c : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000120cfb : or byte ptr [rbx + 0x48], bl ; mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000003c87 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x0000000000121d9b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000074582 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007a525 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000003cf94 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000073947 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023743 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000035c1d : or byte ptr [rbx + 0xf480857], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000001229fb : or byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x0000000000190893 : or byte ptr [rbx + rcx + 0x52], al ; ret
0x0000000000194ac3 : or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000356b9 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000cbc1f : or byte ptr [rbx - 0x76b3fe20], al ; out 0x89, al ; ret 0xca83
0x00000000000d4912 : or byte ptr [rbx], ah ; jmp 0xd452e
0x000000000013146a : or byte ptr [rbx], bh ; or byte ptr [r15], 0x94 ; ret 0xea83
0x0000000000131469 : or byte ptr [rbx], dil ; or byte ptr [r15], 0x94 ; ret 0xea83
0x0000000000039d1b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000005371a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000001f663 : or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000011d115 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e2cb5 : or byte ptr [rcx + 0x63], cl ; sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x000000000003858b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000391d0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000001313e3 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000038592 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000020843 : or byte ptr [rcx - 0x73], 0x5d ; add eax, ebp ; ret
0x00000000000e35b2 : or byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000099d7f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d26c7 : or byte ptr [rcx - 0x76b7ffa3], cl ; ret
0x0000000000121407 : or byte ptr [rcx - 0x77], al ; call 0x4cd49d61
0x000000000004e801 : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004ce66 : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000034b17 : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000050dec : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x38e8
0x00000000000f14ef : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000d48f8 : or byte ptr [rcx], ah ; jmp 0xd452e
0x000000000013615a : or byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e4e92 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003724f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e4f84 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000817b5 : or byte ptr [rcx], al ; jmp 0x8177f
0x00000000000d0cb7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d0c32 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000b01a3 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000e1101 : or byte ptr [rcx], bh ; ret 0x1472
0x00000000001308c4 : or byte ptr [rcx], bh ; ret 0x850f
0x00000000000d0c72 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x000000000010ad10 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000246cc : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e33c0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000048fb2 : or byte ptr [rcx], dh ; ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000001769be : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000de938 : or byte ptr [rdi + rax + 0x44], dh ; mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xde90d
0x000000000005a02e : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000055eb7 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000055236 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055af7 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000178cc0 : or byte ptr [rdi - 0x70e7000e], cl ; call rdi
0x000000000010bd12 : or byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000029654 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000013146d : or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000000fa25a : or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x0000000000186dac : or byte ptr [rdi], 0xfc ; call qword ptr [rax]
0x000000000002fcc4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b42f : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000073741 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c3c7c : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000022c27 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000048b01 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; pop rbp ; ret
0x0000000000046668 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000014321b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000008b24c : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000021eff : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc031
0x00000000001af293 : or byte ptr [rdx + 0xe], al ; adc byte ptr [rbx + 0xa550202], al ; ret
0x00000000001acd54 : or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rdx]
0x00000000000d489c : or byte ptr [rdx], ah ; jmp 0xd452e
0x000000000010c3fb : or byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d0c12 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d0c99 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f0712 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000f0711 : or byte ptr [rip + 0x100f], r12b ; ret
0x000000000002a216 : or byte ptr [rip + 0x29480000], al ; ret 0x8b49
0x0000000000186da8 : or byte ptr [rip + 0xf80fffc], 0xfc ; call qword ptr [rax]
0x00000000000f0a08 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x00000000000d0d05 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009c931 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000011fe5c : or byte ptr [rsi + 1], bh ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000099d40 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d0ccf : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000d0c08 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000063910 : or byte ptr es:[rax], al ; add al, ch ; xlatb ; ret 0xfffc
0x0000000000003c86 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d4b7a : or byte ptr gs:[rax - 0x77], cl ; ret
0x0000000000093e51 : or ch, bl ; ret 0x1f0f
0x00000000001ac304 : or ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001a98dc : or ch, cl ; hlt ; jmp qword ptr [rdx]
0x000000000019af0d : or ch, dh ; jmp qword ptr [rdx]
0x00000000000368fb : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000b026e : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000075dc8 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000e3c36 : or cl, byte ptr [rax - 0x77] ; ret 0x11e8
0x0000000000041cec : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000012a17a : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000b30ca : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c42f9 : or cl, byte ptr [rax - 0x7d] ; ret 0x8001
0x000000000005e664 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000074547 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000010c6d5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x0000000000136658 : or cl, byte ptr [rcx + rcx*4 - 0x1e] ; add r9, r11 ; call rax
0x000000000010c655 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000194ac0 : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000366d7 : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x000000000015a806 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000130691 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000057e86 : or cl, ch ; and ebp, 0x8348ffff ; ret 0xeb08
0x000000000004ce6a : or cl, ch ; jmp rcx
0x0000000000067753 : or cl, ch ; ret 0xfff0
0x00000000000cd414 : or cl, ch ; ret 0xfff8
0x000000000003abf0 : or cl, ch ; ret 0xfffa
0x0000000000002bc7 : or cl, cl ; clc ; ret
0x000000000008ab75 : or cl, cl ; cmove rax, rdx ; ret
0x000000000019fd21 : or cl, dh ; jmp rcx
0x00000000000e0e04 : or dh, ah ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000109232 : or dh, ah ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000498ed : or dh, al ; or byte ptr [rax], al ; ret
0x00000000001b2071 : or dh, bh ; call qword ptr [rsi]
0x000000000014d1a3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fdeea : or dh, bl ; ret
0x000000000007127c : or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071376 : or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072141 : or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x00000000000705d1 : or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001098a0 : or dh, byte ptr [rbp + 0x69] ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000005dda6 : or dh, byte ptr [rbp + 2] ; ret
0x00000000000a1e96 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000093044 : or dh, byte ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x0000000000136275 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000000d1d4a : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a75d9 : or dh, ch ; call rsp
0x000000000019fe21 : or dh, cl ; call qword ptr [rcx]
0x000000000019fda1 : or dh, cl ; jmp qword ptr [rcx]
0x000000000007fffb : or dh, dh ; ret 0x7404
0x00000000000813a9 : or dh, dh ; ret 0x7502
0x0000000000104a27 : or dh, dh ; ret 0x7508
0x0000000000081b3a : or dh, dh ; ret 0xf01
0x0000000000080017 : or dh, dh ; ret 0xf04
0x000000000003105f : or dh, dh ; ret 0xfdf
0x0000000000186c84 : or dl, 0xfb ; call rax
0x0000000000190155 : or dl, ch ; jmp qword ptr [rdx]
0x0000000000034e6c : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000000fd524 : or dword ptr [rax + rax], ebp ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000111944 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2b15d4 ; call rax
0x0000000000123c03 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000103534 : or dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000005d70a : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000011c5f0 : or dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011f12f : or dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000c7ad0 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000086e0e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000021c00 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000449f4 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000013794d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013de2f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001378a7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000071502 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000022c38 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000001297ec : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000e43cf : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088f23 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000194e55 : or dword ptr [rax], eax ; add byte ptr [rax], bh ; mov ebp, ebp ; call qword ptr [rax]
0x00000000000805da : or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000009be85 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000e3900 : or dword ptr [rax], eax ; mov edx, 0x1d6 ; call 0x2fbf9
0x00000000000e393e : or dword ptr [rax], eax ; mov edx, 0x213 ; call 0x2fbf9
0x00000000000e391f : or dword ptr [rax], eax ; mov edx, 0x215 ; call 0x2fbf9
0x00000000000dfd10 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e73d7 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x00000000000dca17 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000117503 : or dword ptr [rbp - 0x76b7ffd6], eax ; ret 0x8948
0x00000000001614b6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000101426 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001216e6 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x00000000000817b2 : or dword ptr [rbx + rbp + 8], 1 ; jmp 0x81782
0x00000000000848c6 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000006e536 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078e20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d178 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000084134 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d41b8 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000083f4e : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000d2030 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000037683 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000f07c7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000037846 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000015a7e6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000f9f42 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f99aa : or dword ptr [rdi], ecx ; xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000acf00 : or dword ptr [rdi], ecx ; xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003611b : or eax, 0x14fc90 ; orpd xmm0, xmm1 ; ret
0x00000000001796c1 : or eax, 0x1648fff4 ; hlt ; jmp qword ptr [rdx]
0x000000000012035a : or eax, 0x18c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009e7e1 : or eax, 0x1c478d48 ; ret
0x000000000009f631 : or eax, 0x1d478d48 ; ret
0x000000000015a868 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007a720 : or eax, 0x20 ; jmp 0x7a6eb
0x0000000000165ff7 : or eax, 0x25ab24 ; jne 0x166024 ; ret
0x00000000000f0c91 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000acbf7 : or eax, 0x358d4800 ; ret
0x00000000000a5745 : or eax, 0x3d8d4800 ; ret 0xdb5
0x00000000000b2cd3 : or eax, 0x440f4800 ; ret 0x8d48
0x00000000000f3a1f : or eax, 0x48002cdc ; add esp, 8 ; ret
0x0000000000093b02 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b4b1a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000005d612 : or eax, 0x5bd88948 ; ret
0x000000000009d8c5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000001384f7 : or eax, 0x83480000 ; ret 0x4910
0x000000000013a091 : or eax, 0x83480000 ; ret 0xe910
0x0000000000138525 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000165dcd : or eax, 0x83489066 ; ret 0x4810
0x000000000009ef79 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000067914 : or eax, 0x89000003 ; ret 0x348
0x000000000010ec3c : or eax, 0x8948002b ; ret 0x8948
0x0000000000041cc6 : or eax, 0x894c0000 ; ret
0x000000000007813f : or eax, 0x89ffffc4 ; ret 0xbceb
0x000000000008abf2 : or eax, 0x8c48348 ; ret
0x0000000000082399 : or eax, 0xbf35b10f ; ret
0x0000000000175ff3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000186dc9 : or eax, 0xf40fffc ; cld ; call rax
0x000000000014d053 : or eax, 0xf7f0ff3 ; ret
0x00000000000d4915 : or eax, 0xf7fffffc ; ret 0
0x0000000000186da9 : or eax, 0xf80fffc ; cld ; call qword ptr [rax]
0x0000000000189965 : or eax, 0xfc940001 ; out dx, al ; jmp rsp
0x0000000000193ee5 : or eax, 0xffec7620 ; sbb al, 0xd ; ret
0x0000000000194f05 : or eax, 0xffed6f8a ; sbb al, 0xd ; ret
0x00000000001a1cad : or eax, 0xfff18989 ; sbb al, 0xd ; ret
0x00000000000f1712 : or eax, 0xffffffff ; jmp 0xf16de
0x00000000000f1972 : or eax, 0xffffffff ; jmp 0xf193e
0x0000000000036cf7 : or eax, 0xffffffff ; ret
0x00000000001376ed : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a231 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137711 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120ef2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c65a1 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c2d11 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000088646 : or eax, dword ptr [rax] ; ret
0x0000000000194ac5 : or eax, dword ptr [rdx] ; ret
0x0000000000037c23 : or eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036362 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000fa5e6 : or eax, edi ; ret
0x0000000000091da7 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000003658f : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000fa622 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003c97c : or eax, edx ; ret
0x0000000000036459 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000010c6a2 : or eax, esi ; bswap eax ; ret
0x00000000000f075e : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000fa625 : or eax, esi ; or rax, rdi ; ret
0x0000000000046de3 : or eax, esi ; ret
0x000000000007c6c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000760a8 : or ebp, eax ; ret 0xfa93
0x00000000001b6a5b : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000194b86 : or ebx, dword ptr [rbp + rbp*8 - 1] ; sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jrcxz 0x194b84 ; jmp qword ptr [rdx]
0x0000000000074f04 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000dbc42 : or ebx, edi ; call rcx
0x000000000014d213 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000714ee : or ebx, esi ; ret
0x0000000000083682 : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000007901f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000003d230 : or ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x000000000002a76e : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x0000000000077f33 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f3a17 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000103efd : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x0000000000021876 : or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000007d179 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000019b974 : or ecx, dword ptr [rbp - 0x12] ; jmp qword ptr [rdx]
0x00000000000a2c74 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a2cc4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000025728 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x0000000000020799 : or ecx, dword ptr [rcx + rcx*4 - 0x16] ; sub rdx, rbx ; inc rdx ; jmp 0x207b2
0x000000000007dcbf : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000009d883 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a1c1e : or ecx, dword ptr [rdx + 0xd1cfff1] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, dh ; jmp qword ptr [rdx]
0x00000000000368e4 : or ecx, eax ; je 0x3688c ; ret
0x00000000001935c4 : or edi, dword ptr [rax + 0xa] ; ret
0x00000000001269b4 : or edi, dword ptr [rax + 1] ; ret
0x0000000000121344 : or edi, dword ptr [rax + 2] ; ret
0x00000000001064a4 : or edi, dword ptr [rax + 7] ; ret
0x000000000019445c : or edi, dword ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x000000000016557f : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1217 : or edi, edi ; loope 0xa128a ; nop dword ptr [rax + rax] ; ret
0x000000000011efd4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000829c0 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000006e636 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a7669 : or esi, ebp ; jmp qword ptr [rcx]
0x000000000014d133 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fa7b4 : or esi, ebx ; ret
0x00000000001020a3 : or esi, esi ; jno 0x1020b1 ; cmovne eax, edx ; ret
0x000000000006e537 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078e21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f5f : or esp, dword ptr [rdx] ; js 0x2f19 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000efe04 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000186cbd : or esp, edi ; jmp rax
0x0000000000109385 : or esp, esi ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000000817b1 : or qword ptr [rbx + rbp + 8], 1 ; jmp 0x81783
0x00000000000d202f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000037682 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000037845 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015a7e5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000014d282 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d212 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014d1a2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000104a26 : or r14b, r14b ; ret 0x7508
0x000000000014d132 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001935c3 : or r15d, dword ptr [rax + 0xa] ; ret
0x0000000000194ac4 : or r8d, dword ptr [rdx] ; ret
0x00000000000cd413 : or r9b, r13b ; ret 0xfff8
0x00000000000368e3 : or r9d, r8d ; je 0x3688d ; ret
0x000000000015a867 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000f1711 : or rax, 0xffffffffffffffff ; jmp 0xf16df
0x00000000000f1971 : or rax, 0xffffffffffffffff ; jmp 0xf193f
0x0000000000036cf6 : or rax, 0xffffffffffffffff ; ret
0x000000000013f682 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000088645 : or rax, qword ptr [rax] ; ret
0x0000000000037c22 : or rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000091da6 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000fa627 : or rax, rdi ; ret
0x000000000003c97b : or rax, rdx ; ret
0x00000000000fa624 : or rax, rsi ; or rax, rdi ; ret
0x0000000000036120 : orpd xmm0, xmm1 ; ret
0x0000000000036121 : orps xmm0, xmm1 ; ret
0x00000000000364be : orps xmm0, xmm3 ; ret
0x000000000019a9fc : out -0x10, eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000188c49 : out -0x15, eax ; call rsp
0x0000000000102e77 : out -0x18, eax ; ret
0x000000000004bdf8 : out -0x18, eax ; ret 0x407
0x000000000012e9e8 : out -0x18, eax ; ret 0xf3fe
0x00000000000252a8 : out -0x18, eax ; ret 0xffa1
0x000000000013315f : out -0x18, eax ; wait ; ret 0xffee
0x00000000001af42c : out -0x21, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000174ea0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000e3125 : out -0x42, eax ; loopne 0xe3131 ; add byte ptr [rax], al ; call 0x1f408
0x0000000000189380 : out -0x77, eax ; out dx, al ; jmp rsp
0x000000000003b9d1 : out -0x77, eax ; ret
0x00000000000e6c38 : out -0x77, eax ; ret 0x8b49
0x00000000001ade94 : out -0x79, eax ; cmc ; jmp qword ptr [rdx]
0x000000000002fee3 : out -0x80, eax ; sete al ; ret
0x00000000001abc79 : out -0xb, eax ; call qword ptr [rax]
0x0000000000176bc8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000001a94ed : out -0xc, eax ; jmp qword ptr [rdx]
0x000000000014ca9a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000061968 : out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x0000000000177d11 : out -1, eax ; inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x0000000000177d15 : out -1, eax ; jmp qword ptr [rcx]
0x000000000019ccfd : out 0, al ; add al, dh ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x000000000019ce15 : out 0, eax ; add al, bl ; mov dh, 0xee ; call qword ptr [rax]
0x00000000001893e5 : out 0, eax ; add byte ptr [rsi + rcx*4], dl ; out dx, al ; jmp rsp
0x000000000005e72a : out 0x11, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b26e7 : out 0x30, eax ; add byte ptr [rcx], ch ; ret 0x428d
0x00000000001b04d6 : out 0x32, al ; idiv bh ; sbb al, 0xd ; sub r14, r14 ; jmp qword ptr [rdx]
0x00000000000800d5 : out 0x33, al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000001ff63 : out 0x41, eax ; call qword ptr [rsi]
0x000000000010c524 : out 0x44, al ; mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a32b9 : out 0x48, al ; mov eax, ebx ; pop rbx ; ret
0x000000000012dcbe : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000012a710 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000011e160 : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000121c96 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000085414 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000011dd50 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000a2d60 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038628 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000019c8dc : out 0x5b, al ; out dx, al ; jmp qword ptr [rdx]
0x000000000007bec3 : out 0x5b, al ; ret
0x000000000012b9e8 : out 0x5b, eax ; ret
0x0000000000037ca5 : out 0x63, eax ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000001943cc : out 0x7c, eax ; in al, dx ; jmp qword ptr [rdx]
0x00000000000cbc25 : out 0x89, al ; ret 0xca83
0x000000000019bf33 : out 0xa, al ; ret
0x0000000000002462 : out 0xa9, al ; ret 0xbd07
0x0000000000123426 : out 0xbf, al ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000005c39d : out 0xe8, al ; fst qword ptr [rbx + 3] ; add byte ptr [rcx - 0x77], cl ; ret 0x92e9
0x00000000001a96ec : out 0xe8, al ; hlt ; jmp qword ptr [rdx]
0x00000000000eaa59 : out 0xe8, al ; int1 ; ret
0x0000000000072573 : out 0xe8, al ; ja 0x725f6 ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000ba727 : out 0xe8, al ; ret
0x000000000019e509 : out 0xef, al ; jmp qword ptr [rbx]
0x00000000000e0e05 : out 0xf3, al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000014ca1a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000092ce9 : out 0xf3, al ; ret
0x00000000001a94a5 : out 0xf4, al ; jmp qword ptr [rdx]
0x00000000001aba79 : out 0xf5, al ; call qword ptr [rax]
0x0000000000186b49 : out 0xfb, al ; call qword ptr [rax + 0x20fffbe8]
0x0000000000186c2d : out 0xfb, al ; call qword ptr [rax - 0x2f000440]
0x0000000000186b09 : out 0xfb, al ; call rax
0x000000000004518c : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000082fc6 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000067b1f : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000177d09 : out 0xff, al ; jmp qword ptr [rsi]
0x000000000012d5fa : out 0xff, al ; push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x00000000000c7780 : out 1, al ; add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc7756
0x0000000000071384 : out 1, al ; mov eax, esi ; ret
0x00000000000d28a3 : out 4, al ; jne 0xd2855 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011828d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000113209 : out 4, eax ; call 0x1f414
0x0000000000115ab5 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000091c19 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000071381 : out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x000000000019d4f5 : out dx, al ; add byte ptr [rax], al ; call 0x1119cec0
0x000000000019d465 : out dx, al ; add byte ptr [rax], al ; sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x0000000000125461 : out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x000000000007e56e : out dx, al ; add dword ptr [rax + rax], esi ; ret
0x0000000000117daf : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x117dbc ; ret
0x00000000001ad8f5 : out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x000000000009748b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000117dac : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x117dbf ; ret
0x000000000011f54e : out dx, al ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000177582 : out dx, al ; call qword ptr [rax - 0x2f00118e]
0x000000000017759a : out dx, al ; call qword ptr [rax]
0x000000000019bab2 : out dx, al ; call qword ptr [rbx]
0x000000000019a32a : out dx, al ; call qword ptr [rcx]
0x000000000019a2fa : out dx, al ; call qword ptr [rdi]
0x000000000019a90a : out dx, al ; call qword ptr [rdx]
0x000000000019a892 : out dx, al ; call qword ptr [rsi]
0x000000000003a2f4 : out dx, al ; call r12
0x00000000000860ca : out dx, al ; call rax
0x00000000001890ea : out dx, al ; call rsp
0x0000000000189102 : out dx, al ; dec dword ptr [rax + rdx*8 + 0x62a00000] ; out dx, al ; call rsp
0x0000000000189302 : out dx, al ; dec dword ptr [rax - 0x7c640000] ; out dx, al ; call rsp
0x00000000001890e2 : out dx, al ; dec dword ptr [rdi + rcx*8 + 0x60b00000] ; out dx, al ; call rsp
0x0000000000189962 : out dx, al ; dec esp ; or eax, 0xfc940001 ; out dx, al ; jmp rsp
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000175ff7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000018987a : out dx, al ; inc dword ptr [rdi + rax - 0x131bffff] ; out dx, al ; call rsp
0x000000000019a7aa : out dx, al ; jmp qword ptr [rax]
0x000000000019a142 : out dx, al ; jmp qword ptr [rcx]
0x000000000019af0e : out dx, al ; jmp qword ptr [rdx]
0x000000000019c072 : out dx, al ; jmp qword ptr [rsi]
0x000000000019bc12 : out dx, al ; jmp rcx
0x000000000019d07a : out dx, al ; jmp rdx
0x00000000001890b2 : out dx, al ; jmp rsp
0x000000000000374d : out dx, al ; jne 0x372d ; ret 0x975
0x000000000017758e : out dx, al ; lcall ptr [rax + 0x71] ; out dx, al ; call rax
0x00000000001890aa : out dx, al ; lcall ptr [rbp + rcx*8 + 0x5c6f0000] ; out dx, al ; jmp rsp
0x0000000000189532 : out dx, al ; lcall ptr [rcx + rsi*8 - 0x5eac0000] ; out dx, al ; jmp rsp
0x00000000000a3cc0 : out dx, al ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000018935a : out dx, al ; ljmp ptr [rsp - 0x77230000] ; out dx, al ; call rsp
0x00000000000848de : out dx, al ; loop 0x848e6 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000000314b : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000014486a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a3b74 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000086286 : out dx, al ; mov rdi, r12 ; call rax
0x000000000010bc81 : out dx, al ; mov rdi, rbx ; call 0x77f86
0x000000000008643e : out dx, al ; mov rdi, rbx ; call rax
0x000000000014ce2a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013dcde : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001353ff : out dx, al ; pop rbp ; jmp rax
0x000000000017758a : out dx, al ; push qword ptr [rax + 0x58ffee72] ; jno 0x17758a ; call rax
0x00000000001893fa : out dx, al ; push qword ptr [rax + rbp*8 - 0x6f5c0000] ; out dx, al ; jmp rsp
0x00000000001775b2 : out dx, al ; push qword ptr [rax] ; jb 0x1775aa ; call rax
0x000000000018937a : out dx, al ; push qword ptr [rbp] ; add bh, ah ; mov esi, ebp ; jmp rsp
0x0000000000189772 : out dx, al ; push qword ptr [rdi + rdi*8 - 0x3c9c0000] ; out dx, al ; jmp rsp
0x00000000001893e2 : out dx, al ; push qword ptr [rdi] ; add byte ptr [rsi + rcx*4], dl ; out dx, al ; jmp rsp
0x0000000000189512 : out dx, al ; push rsp ; lock add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rsp
0x0000000000002592 : out dx, al ; ret 0x88ad
0x00000000000a3749 : out dx, al ; xor eax, eax ; ret
0x0000000000128d74 : out dx, ax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a200d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000092095 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000019d615 : out dx, eax ; add byte ptr [rax], al ; cwde ; sbb ch, bh ; call qword ptr [rax]
0x000000000019d5b5 : out dx, eax ; add byte ptr [rax], al ; fcomp st(0) ; stc ; call qword ptr [rax]
0x0000000000049717 : out dx, eax ; add ecx, ebp ; ret
0x000000000008c44e : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001655b0 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039238 : out dx, eax ; call 0x384b8
0x000000000006fc58 : out dx, eax ; call 0xebf5c
0x00000000000efd99 : out dx, eax ; call 0xec139
0x000000000012006c : out dx, eax ; call qword ptr [rax]
0x000000000012188b : out dx, eax ; call qword ptr [rbx]
0x000000000019e312 : out dx, eax ; call qword ptr [rdi]
0x00000000000f6cb2 : out dx, eax ; call r14
0x000000000011f81b : out dx, eax ; call rax
0x00000000000f67fa : out dx, eax ; call rbx
0x000000000012e582 : out dx, eax ; call rcx
0x000000000008619c : out dx, eax ; call rdx
0x00000000001899aa : out dx, eax ; call rsp
0x00000000001af9b5 : out dx, eax ; cmc ; jmp qword ptr [rdx]
0x000000000018a102 : out dx, eax ; dec dword ptr [rax + rdi - 0x2fc9ffff] ; out dx, eax ; call rsp
0x00000000001899c2 : out dx, eax ; dec dword ptr [rax + rdx + 0x2590001] ; out dx, eax ; call rsp
0x00000000001289e5 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000123428 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000011f452 : out dx, eax ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; ret 0x2a42
0x000000000018a002 : out dx, eax ; dec dword ptr [rdi + rbp - 0x3374ffff] ; out dx, eax ; call rsp
0x0000000000189d02 : out dx, eax ; dec dword ptr [rdx + rbx + 0x4b0f0001] ; out dx, eax ; call rsp
0x0000000000082d8d : out dx, eax ; in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000012242c : out dx, eax ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000178336 : out dx, eax ; inc eax ; push rdx ; out dx, eax ; call rax
0x0000000000189c8a : out dx, eax ; inc esp ; add dword ptr es:[rax], eax ; test byte ptr [rax - 0x11], cl ; jmp rsp
0x0000000000178012 : out dx, eax ; jmp qword ptr [rax]
0x000000000019e50a : out dx, eax ; jmp qword ptr [rbx]
0x000000000019df12 : out dx, eax ; jmp qword ptr [rdx]
0x000000000011fbc8 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x000000000019d6ea : out dx, eax ; jmp qword ptr [rsi]
0x000000000019e232 : out dx, eax ; jmp rdi
0x0000000000189c92 : out dx, eax ; jmp rsp
0x0000000000178016 : out dx, eax ; lcall ptr [rax + rcx*2 - 0x11] ; call qword ptr [rax]
0x000000000017800e : out dx, eax ; lcall ptr [rax + rcx*2 - 0x11] ; jmp qword ptr [rax]
0x000000000017800a : out dx, eax ; lcall ptr [rax + rcx*2 - 0x11] ; lcall ptr [rax + rcx*2 - 0x11] ; jmp qword ptr [rax]
0x000000000018a012 : out dx, eax ; lcall ptr [rax + rsi] ; add dword ptr [rax], eax ; ret
0x0000000000189f92 : out dx, eax ; lcall ptr [rbx + rbp - 0x3507ffff] ; out dx, eax ; jmp rsp
0x0000000000189eca : out dx, eax ; lcall ptr [rcx + rax*2 - 0x569bffff] ; out dx, eax ; jmp rsp
0x00000000001782aa : out dx, eax ; lcall ptr [rcx + rdx*2] ; out dx, eax ; jmp qword ptr [rax]
0x0000000000189d92 : out dx, eax ; lcall ptr [rdi + rbx + 0x4d190001] ; out dx, eax ; jmp rsp
0x000000000018a092 : out dx, eax ; lcall ptr [rsp + rsi - 0x315affff] ; out dx, eax ; jmp rsp
0x0000000000108440 : out dx, eax ; leave ; ret
0x000000000012db33 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012db7d : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000014469a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144796 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001446e2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f83c8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000038d10 : out dx, eax ; mov rax, rdx ; ret
0x00000000001114c6 : out dx, eax ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11d6e7
0x00000000001283a4 : out dx, eax ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000124103 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000123f0c : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011e163 : out dx, eax ; mov rcx, r13 ; call rbx
0x0000000000022e86 : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000014ceaa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013dddd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000075151 : out dx, eax ; pop rbx ; ret
0x000000000018a1aa : out dx, eax ; push qword ptr [rdx + rcx*2 - 0x1edbffff] ; out dx, eax ; jmp rsp
0x0000000000178362 : out dx, eax ; push rax ; push rdx ; out dx, eax ; call rax
0x0000000000160103 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000160118 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016012d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000036547 : out dx, eax ; ret
0x0000000000028feb : out dx, eax ; ret 0
0x00000000000a1463 : out dx, eax ; ret 0xf66
0x000000000016161c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161605 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001615ee : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001600aa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186dfd : out dx, eax ; sti ; call rax
0x00000000001323ae : out dx, eax ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000010385d : out dx, eax ; xor eax, 0x8548fff8 ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000120cff : out dx, eax ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000038280 : out dx, eax ; xor eax, eax ; ret
0x0000000000070fc5 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000013999e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b4468 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001625be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001a5535 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; jae 0x1a5535 ; jmp qword ptr [rcx]
0x00000000001a551d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x1a559b ; hlt ; jmp qword ptr [rcx]
0x000000000018a81d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ah, 0xcc ; int1 ; call rsp
0x0000000000131bc8 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000018b3e1 : outsb dx, byte ptr [rsi] ; cmc ; inc esp ; ret
0x0000000000036593 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x00000000001a6a64 : outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rdx]
0x0000000000194f0d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001767a3 : outsb dx, byte ptr [rsi] ; ja 0x17672c ; ret 0x48f
0x0000000000071ba1 : outsb dx, byte ptr [rsi] ; mov eax, edx ; pop rbx ; ret
0x000000000002540e : outsb dx, byte ptr [rsi] ; ret
0x00000000001744e4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000d4ee2 : outsb dx, byte ptr [rsi] ; sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000008caba : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000000c9e6a : outsb dx, byte ptr [rsi] ; xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x000000000018b3e0 : outsb dx, byte ptr fs:[rsi] ; cmc ; inc esp ; ret
0x00000000001b561d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000000ff9e5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1e22 : outsd dx, dword ptr [rsi] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000118a77 : outsd dx, dword ptr [rsi] ; add rsp, 8 ; ret
0x00000000000d182c : outsd dx, dword ptr [rsi] ; call 0x1cf9b7e
0x000000000010872e : outsd dx, dword ptr [rsi] ; call 0x66d2887c
0x000000000006aebb : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000087288 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d18e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000019509d : outsd dx, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a40d9 : outsd dx, dword ptr [rsi] ; jmp rax
0x000000000006aebf : outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x00000000001ab91c : outsd dx, dword ptr [rsi] ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001890b0 : outsd dx, dword ptr [rsi] ; pop rsp ; out dx, al ; jmp rsp
0x000000000016141d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001614bd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008a8ea : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a8ef : outsd dx, dword ptr [rsi] ; ret
0x0000000000174ea6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000144fd7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000001614c2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000008a93a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000006aff4 : outsd dx, dword ptr [rsi] ; shl byte ptr [rsi + 0xf], cl ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000174ea5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000186dad : paddb mm7, mm7 ; adc byte ptr [rdx], al ; cld ; call rax
0x0000000000186d8d : paddb mm7, mm7 ; push rax ; add bh, ah ; call qword ptr [rax]
0x00000000001375e2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000a2fb4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000a2f9f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000001375e1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001762a5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000001762a6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000000969e1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x0000000000096fb5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000036431 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000036701 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000096fc3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097065 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x970e9 ; xor eax, eax ; ret
0x0000000000036430 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000036700 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000088af6 : pmovmskb edx, mm4 ; test edx, edx ; je 0x88b0a ; bsf eax, edx ; ret
0x00000000001886ed : pop qword ptr [rax] ; add byte ptr [rsp + rsi*8 - 0x16], dl ; jmp rsp
0x00000000001a75d5 : pop qword ptr [rcx] ; add byte ptr [rax + 0xa], bh ; cmc ; call rsp
0x0000000000196c36 : pop qword ptr [rdx + 0xd1cffed] ; cmp al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b019c : pop qword ptr [rdx] ; add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000001aa5e8 : pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x0000000000108144 : pop r10 ; ret
0x000000000017672f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000070342 : pop r12 ; jmp rax
0x000000000005392b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x00000000000aee46 : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000724f6 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306e0 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a528 : pop r12 ; neg eax ; pop r13 ; ret
0x000000000010c528 : pop r12 ; pop r13 ; jmp rax
0x0000000000094268 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd408 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008522d : pop r12 ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x00000000000831a1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f79f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b13 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff74 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024800 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d0ac : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fef5 : pop r12 ; pop r13 ; ret
0x00000000000aee00 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad1d7 : pop r12 ; pop r14 ; ret
0x000000000003b982 : pop r12 ; pop rbp ; ret
0x000000000001f668 : pop r12 ; ret
0x0000000000122704 : pop r12 ; sete al ; movzx eax, al ; ret
0x000000000011d69f : pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000007b8fa : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000010c52a : pop r13 ; jmp rax
0x000000000011796d : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000005385d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000009426a : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd40a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008522f : pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000100ac2 : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4f0e : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc2 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000831a3 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b15 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff76 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024802 : pop r13 ; pop r14 ; ret
0x0000000000075aa6 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5002 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006d0ae : pop r13 ; pop rbp ; ret
0x000000000001fef7 : pop r13 ; ret
0x0000000000074d1b : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000aee02 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003884a : pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000075f73 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000004121a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37a : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000100ac4 : pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4f10 : pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc4 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000831a5 : pop r14 ; pop r15 ; jmp rax
0x000000000001f7a3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b17 : pop r14 ; pop r15 ; ret
0x000000000001ff78 : pop r14 ; pop rbp ; ret
0x0000000000024804 : pop r14 ; ret
0x0000000000075aa8 : pop r14 ; sar rax, 2 ; ret
0x00000000000d5004 : pop r14 ; xor eax, eax ; pop r15 ; ret
0x0000000000043bc6 : pop r15 ; fmulp st(1) ; ret
0x00000000000831a7 : pop r15 ; jmp rax
0x000000000001f7a5 : pop r15 ; pop rbp ; ret
0x0000000000022b19 : pop r15 ; ret
0x0000000000127906 : pop r8 ; mov eax, 1 ; ret
0x00000000001865df : pop r9 ; clc ; ret 0x6e1f
0x00000000001ab5e4 : pop r9 ; cmc ; jmp qword ptr [rdx]
0x000000000012804e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001a25c8 : pop rax ; add dh, dl ; call rdi
0x00000000001a3efd : pop rax ; add dword ptr [rax], eax ; add byte ptr [rsi - 0xd], cl ; jmp qword ptr [rbx]
0x00000000000e48f7 : pop rax ; add eax, ebp ; ret 0xfa41
0x000000000018ff68 : pop rax ; add edx, ebp ; call qword ptr [rcx]
0x00000000001221ab : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000128214 : pop rax ; call rax
0x0000000000187315 : pop rax ; cld ; call qword ptr [rdx + 0x12fffc57]
0x0000000000187311 : pop rax ; cld ; call qword ptr [rdx]
0x0000000000187491 : pop rax ; cld ; call rax
0x0000000000187451 : pop rax ; cld ; jmp rax
0x00000000001ab2a5 : pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000000d1fb7 : pop rax ; cmp al, 0x11 ; je 0xd1fc7 ; xor eax, eax ; ret
0x000000000018e738 : pop rax ; cmp cl, ch ; call qword ptr [rsi]
0x00000000001a86a8 : pop rax ; cmp ebp, esi ; jmp rbx
0x00000000001ab168 : pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a2078 : pop rax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000000c282a : pop rax ; je 0xc2858 ; mov eax, 1 ; ret
0x00000000000c2829 : pop rax ; je 0xc2859 ; mov eax, 1 ; ret
0x0000000000128056 : pop rax ; jmp rcx
0x000000000018add0 : pop rax ; jne 0x18adc9 ; call rsp
0x0000000000177590 : pop rax ; jno 0x177584 ; call rax
0x000000000019568c : pop rax ; jno 0x19567f ; jmp qword ptr [rdx]
0x000000000019f9ec : pop rax ; mov dh, 0xf0 ; jmp qword ptr [rdx]
0x0000000000027795 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000127907 : pop rax ; mov eax, 1 ; ret
0x000000000002fea4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fe32 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000121cee : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000286c3 : pop rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001a5038 : pop rax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x000000000003abef : pop rax ; or cl, ch ; ret 0xfffa
0x000000000009be84 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000120080 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f576 : pop rax ; pop rbx ; pop rbp ; ret
0x00000000000fa479 : pop rax ; pop rdi ; call rax
0x000000000001b218 : pop rax ; ret
0x000000000001af18 : pop rax ; ret 0x3b
0x000000000018f6b9 : pop rax ; std ; jmp qword ptr [rdi]
0x00000000001a7ec8 : pop rax ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a2c08 : pop rax ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a8288 : pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001200c1 : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d897f : pop rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000018cefd : pop rbp ; add al, byte ptr [rax] ; and bh, byte ptr [rbp - 8] ; call rsp
0x00000000001b4395 : pop rbp ; add al, byte ptr [rax] ; clc ; mov bh, dh ; call qword ptr [rdx]
0x00000000000d26c9 : pop rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005e6f7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000032cdb : pop rbp ; add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x0000000000020846 : pop rbp ; add eax, ebp ; ret
0x0000000000121d9d : pop rbp ; add eax, edx ; ret
0x0000000000108345 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000001b02d4 : pop rbp ; and esi, esi ; jmp qword ptr [rdx]
0x0000000000188f79 : pop rbp ; in eax, dx ; call rsp
0x0000000000178555 : pop rbp ; int1 ; call rax
0x00000000001aa00c : pop rbp ; int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000074584 : pop rbp ; jmp rax
0x000000000011f555 : pop rbp ; jmp rcx
0x0000000000120d02 : pop rbp ; jmp rdx
0x0000000000187f90 : pop rbp ; js 0x187f7f ; jmp rsp
0x00000000000a18dc : pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x0000000000073ad6 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000011796e : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x0000000000073abf : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x000000000005385e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000e536c : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a1889 : pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e07f : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000009426b : pop rbp ; mov eax, edx ; pop r14 ; ret
0x00000000001098a4 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000aedc3 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000aecf1 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000f08e0 : pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006ce0e : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000bd40b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000085230 : pop rbp ; mov rax, rcx ; pop r14 ; ret
0x0000000000070436 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126152 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000082dc3 : pop rbp ; pop r12 ; jmp rax
0x00000000000724f5 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306df : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a527 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000094267 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000831a0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000022b12 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247ff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aedff : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad1d6 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f667 : pop rbp ; pop r12 ; ret
0x0000000000122703 : pop rbp ; pop r12 ; sete al ; movzx eax, al ; ret
0x0000000000041219 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e379 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000100ac3 : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a4f0f : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc3 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000831a4 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b16 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001ff77 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000024803 : pop rbp ; pop r14 ; ret
0x0000000000075aa7 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5003 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006d0af : pop rbp ; pop rbp ; ret
0x0000000000038598 : pop rbp ; pop rbx ; ret
0x000000000019c9b4 : pop rbp ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x000000000001f513 : pop rbp ; ret
0x00000000000fc4ce : pop rbp ; sub eax, 0x89480008 ; ret 0xff31
0x0000000000070fd8 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074d1c : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000001111bf : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007a451 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000aee03 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000001064d1 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001b41bd : pop rbx ; add al, byte ptr [rax] ; push rax ; jg 0x1b41c0 ; call qword ptr [rdx]
0x000000000018cec5 : pop rbx ; add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x0000000000173a78 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a1bef : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000a1c2f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000d1da0 : pop rbx ; and eax, 2 ; pop rbp ; ret
0x00000000001872fd : pop rbx ; cld ; call qword ptr [rdx + 0x12fffc5a]
0x00000000001872f9 : pop rbx ; cld ; call qword ptr [rdx]
0x0000000000187479 : pop rbx ; cld ; call rax
0x0000000000187439 : pop rbx ; cld ; jmp rax
0x0000000000187435 : pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x00000000001ab88d : pop rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000173a76 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006ee43 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007396e : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000178551 : pop rbx ; int1 ; inc eax ; pop rbp ; int1 ; call rax
0x00000000001a145c : pop rbx ; jle 0x1a1453 ; jmp qword ptr [rdx]
0x000000000007007a : pop rbx ; jmp rax
0x0000000000076a2c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000d0c62 : pop rbx ; mov eax, 1 ; ret
0x0000000000048855 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a1c99 : pop rbx ; mov eax, eax ; ret
0x00000000000c0df3 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dae5 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f202 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000007491a : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007471f : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006f6d7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f561 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000120cfc : pop rbx ; mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x00000000001353fc : pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x00000000001229fc : pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000048b05 : pop rbx ; neg eax ; pop rbp ; ret
0x000000000019c895 : pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x000000000001ff73 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d0ab : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003b981 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000121d9c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000108344 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000074583 : pop rbx ; pop rbp ; jmp rax
0x0000000000073ad5 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x0000000000073abe : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000e536b : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a1888 : pop rbx ; pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e07e : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000001098a3 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000aedc2 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000f08df : pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006ce0d : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000070435 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126151 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000082dc2 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000724f4 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306de : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007a526 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000000247fe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ad1d5 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001f666 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f512 : pop rbx ; pop rbp ; ret
0x00000000001111be : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007a450 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000221a8 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x0000000000176d60 : pop rbx ; ret 0x6f9
0x00000000000a4138 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000001a169c : pop rbx ; xchg cl, dh ; jmp qword ptr [rdx]
0x00000000001ae83c : pop rbx ; xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000001899c8 : pop rcx ; add ch, bh ; call rsp
0x00000000001a94e6 : pop rcx ; call 0xd3794e9
0x0000000000185dd0 : pop rcx ; clc ; ret 0x6e1f
0x000000000018730d : pop rcx ; cld ; call qword ptr [rdx + 0x12fffc58]
0x0000000000187309 : pop rcx ; cld ; call qword ptr [rdx]
0x0000000000187489 : pop rcx ; cld ; call rax
0x0000000000187449 : pop rcx ; cld ; jmp rax
0x00000000001ab3bd : pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001ad494 : pop rcx ; jl 0x1ad48f ; jmp qword ptr [rdx]
0x00000000000e2cb4 : pop rcx ; or byte ptr [rcx + 0x63], cl ; sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x000000000019c805 : pop rcx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000112ecf : pop rcx ; ret
0x0000000000162013 : pop rcx ; ret 0x25
0x00000000000d1c7b : pop rcx ; ret 0x2e
0x00000000000f9c32 : pop rcx ; ret 0xc383
0x0000000000143218 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000eb59a : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000004e27e : pop rdi ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000013e46d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fa47a : pop rdi ; call rax
0x00000000001870ed : pop rdi ; cld ; call rdx
0x0000000000187129 : pop rdi ; cld ; jmp qword ptr [rdx]
0x000000000018706d : pop rdi ; cld ; jmp rsi
0x00000000001870e9 : pop rdi ; cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x0000000000021a9d : pop rdi ; cmp dword ptr [rax], eax ; pop r12 ; ret
0x0000000000043bc7 : pop rdi ; fmulp st(1) ; ret
0x0000000000144c39 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144a49 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000017601e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000178559 : pop rdi ; int1 ; jmp rax
0x0000000000035ad8 : pop rdi ; je 0x35aef ; jmp 0x35aa3
0x00000000000831a8 : pop rdi ; jmp rax
0x0000000000174fe1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000144869 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144699 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144795 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001446e1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f7a6 : pop rdi ; pop rbp ; ret
0x0000000000022b1a : pop rdi ; ret
0x00000000001331ad : pop rdi ; ret 0xffee
0x000000000018ef99 : pop rdi ; std ; jmp qword ptr [rdx]
0x00000000001a40d5 : pop rdx ; add dword ptr [rax], eax ; fsubr dword ptr [rdi - 0xd] ; jmp rax
0x0000000000138d66 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000795e7 : pop rdx ; cdqe ; ret
0x0000000000187305 : pop rdx ; cld ; call qword ptr [rdx + 0x12fffc59]
0x0000000000187301 : pop rdx ; cld ; call qword ptr [rdx]
0x0000000000187481 : pop rdx ; cld ; call rax
0x0000000000187441 : pop rdx ; cld ; jmp rax
0x0000000000199dfc : pop rdx ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000003a4a : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x0000000000175c01 : pop rdx ; je 0x175bcb ; ret 0xacfc
0x000000000000314d : pop rdx ; jmp 0xffffffffc25d05fb
0x0000000000176bc7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x000000000019c84d : pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000108143 : pop rdx ; pop r10 ; ret
0x000000000008287f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000001ab514 : pop rdx ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x0000000000108169 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x0000000000176730 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000a35c5 : pop rdx ; test al, 0xf0 ; jne 0xa35f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000013e36e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c6b26 : pop rsi ; add al, 0xe8 ; ret
0x000000000004cdfa : pop rsi ; call qword ptr [rdx]
0x000000000018cd59 : pop rsi ; clc ; jmp rsp
0x0000000000187231 : pop rsi ; cld ; call qword ptr [rax]
0x00000000001870f1 : pop rsi ; cld ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x000000000018722d : pop rsi ; cld ; jmp qword ptr [rax + 0x10fffc5e]
0x00000000000eda7a : pop rsi ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003884b : pop rsi ; idiv r9 ; pop r15 ; ret
0x0000000000075f74 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000c3dcd : pop rsi ; mov rdi, qword ptr [rbp - 0x430] ; call r15
0x000000000004121b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37b : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000100ac5 : pop rsi ; neg eax ; pop r15 ; ret
0x00000000000a4f11 : pop rsi ; neg rax ; pop r15 ; ret
0x0000000000091db5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000043bc5 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x00000000000831a6 : pop rsi ; pop r15 ; jmp rax
0x000000000001f7a4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022b18 : pop rsi ; pop r15 ; ret
0x000000000001ff79 : pop rsi ; pop rbp ; ret
0x0000000000024805 : pop rsi ; ret
0x0000000000105b6e : pop rsi ; ret 0xffff
0x0000000000075aa9 : pop rsi ; sar rax, 2 ; ret
0x00000000000eda94 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d5005 : pop rsi ; xor eax, eax ; pop r15 ; ret
0x0000000000139bb0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000139064 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a8b0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000080953 : pop rsp ; and al, 0x28 ; call rax
0x00000000000b0895 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000187275 : pop rsp ; cld ; call rax
0x00000000001872f5 : pop rsp ; cld ; jmp qword ptr [rdx + 0x12fffc5b]
0x00000000001a7eac : pop rsp ; cwde ; add dword ptr [rax], eax ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000188f51 : pop rsp ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x0000000000188f41 : pop rsp ; in eax, dx ; push rsp ; ret 0
0x0000000000070343 : pop rsp ; jmp rax
0x0000000000189044 : pop rsp ; leave ; add byte ptr [rax], al ; ret
0x000000000018aec0 : pop rsp ; mov dh, bl ; jmp rsp
0x000000000005392c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x00000000000539f7 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000000aee47 : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000724f7 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x000000000013cf40 : pop rsp ; mov ebp, 0x63480003 ; ret 0xf66
0x000000000018d514 : pop rsp ; mov es, word ptr [rdx] ; add byte ptr [rsi - 7], al ; jmp rsp
0x00000000000306e1 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000007a529 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000137a40 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000194abf : pop rsp ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000019c925 : pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x00000000001890b1 : pop rsp ; out dx, al ; jmp rsp
0x0000000000178018 : pop rsp ; out dx, eax ; call qword ptr [rax]
0x0000000000178010 : pop rsp ; out dx, eax ; jmp qword ptr [rax]
0x000000000017800c : pop rsp ; out dx, eax ; lcall ptr [rax + rcx*2 - 0x11] ; jmp qword ptr [rax]
0x000000000010c529 : pop rsp ; pop r13 ; jmp rax
0x0000000000094269 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bd409 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000008522e : pop rsp ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000100ac1 : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x0000000000043bc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000831a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b14 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff75 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024801 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075aa5 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5001 : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006d0ad : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fef6 : pop rsp ; pop r13 ; ret
0x00000000000aee01 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000ad1d8 : pop rsp ; pop r14 ; ret
0x000000000003b983 : pop rsp ; pop rbp ; ret
0x000000000018cec4 : pop rsp ; pop rbx ; add al, byte ptr [rax] ; test byte ptr [rbp - 8], dh ; jmp rsp
0x00000000000037ec : pop rsp ; ret
0x0000000000003151 : pop rsp ; ret 0x52c0
0x00000000000efcf0 : pop rsp ; ret 0xffff
0x0000000000122705 : pop rsp ; sete al ; movzx eax, al ; ret
0x000000000011d6a0 : pop rsp ; sub eax, 1 ; pop r13 ; ret
0x000000000007b8fb : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000001ae8cc : pop rsp ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000001a83a5 : popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x000000000010ae77 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001786c9 : popfq ; cld ; call qword ptr [rax]
0x00000000001949b4 : popfq ; fsubr st(4) ; jmp qword ptr [rdx]
0x00000000001056e5 : popfq ; int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000019436c : popfq ; jl 0x19435e ; jmp qword ptr [rdx]
0x00000000000f34a7 : popfq ; loopne 0xf34df ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000974cd : popfq ; mov rax, rdi ; ret
0x000000000019022c : popfq ; or al, 0xea ; jmp qword ptr [rdx]
0x000000000005002b : popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000a1b49 : popfq ; ret 0xea81
0x000000000013b290 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d701 : popfq ; stc ; call rsp
0x000000000014cf72 : psllq mm1, qword ptr [r15] ; jg 0x14cf8d ; ret
0x000000000014fa42 : psllq mm1, qword ptr [r15] ; jg 0x14fa5d ; ret
0x0000000000152562 : psllq mm1, qword ptr [r15] ; jg 0x15257d ; ret
0x000000000014cf73 : psllq mm1, qword ptr [rdi] ; jg 0x14cf8c ; ret
0x000000000014fa43 : psllq mm1, qword ptr [rdi] ; jg 0x14fa5c ; ret
0x0000000000152563 : psllq mm1, qword ptr [rdi] ; jg 0x15257c ; ret
0x000000000009d026 : psllq mm1, qword ptr [rdi] ; jg 0x9d03a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d025 : psllq mm1, qword ptr [rdi] ; jg 0x9d03b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d087 : psllq mm1, qword ptr [rdi] ; jg 0x9d09c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009dcf6 : psllq mm1, qword ptr [rdi] ; jg 0x9dd0a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dcf5 : psllq mm1, qword ptr [rdi] ; jg 0x9dd0b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dd57 : psllq mm1, qword ptr [rdi] ; jg 0x9dd6c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0106 : psllq mm1, qword ptr [rdi] ; jg 0xa011a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0105 : psllq mm1, qword ptr [rdi] ; jg 0xa011b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0167 : psllq mm1, qword ptr [rdi] ; jg 0xa017c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0bd6 : psllq mm1, qword ptr [rdi] ; jg 0xa0bea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0bd5 : psllq mm1, qword ptr [rdi] ; jg 0xa0beb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0c37 : psllq mm1, qword ptr [rdi] ; jg 0xa0c4c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000179dbc : psrad mm6, mm4 ; dec dword ptr [rdi] ; loop 0x179dbe ; jmp rsp
0x0000000000179dc0 : psrad mm6, mm4 ; jmp rsp
0x00000000001a92dc : psraw mm6, mm4 ; jmp qword ptr [rdx]
0x00000000000b3f9f : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000000d8ef3 : push -0x3c76b690 ; mov edx, r8d ; jmp 0xd8f0b
0x0000000000021ac4 : push -0x40fff800 ; ret 0
0x0000000000002bdd : push -0x7329150 ; ret
0x0000000000178428 : push -0x7f000f4d ; mov bl, 0xf0 ; jmp rax
0x00000000001625a4 : push -0x9ffffff ; ret 0x7501
0x0000000000021bff : push -0xcfffff7 ; ret
0x00000000000a35b7 : push -0xfb872b8 ; ret
0x00000000000e2e64 : push 0x2484b60f ; ret
0x0000000000178569 : push 0x49b0fff1 ; int1 ; jmp qword ptr [rax]
0x000000000011f84d : push 0x5c415d5b ; pop r13 ; ret
0x00000000001a4f2d : push 0x61600001 ; hlt ; jmp qword ptr [rax]
0x0000000000178a31 : push 0x68b0fff2 ; jmp rax
0x0000000000178a41 : push 0x68d0fff2 ; jmp rax
0x0000000000178a35 : push 0x68e0fff2 ; call qword ptr [rax]
0x0000000000178a49 : push 0x68f0fff2 ; call qword ptr [rax]
0x0000000000178a4d : push 0x6910fff2 ; jmp qword ptr [rax]
0x00000000001767a2 : push 0x6e ; ja 0x17672d ; ret 0x48f
0x00000000001ae884 : push 0x96 ; cmc ; jmp qword ptr [rdx]
0x0000000000198f9c : push 0xbb ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000179198 : push 0xbc ; ljmp ptr [rbp - 0x72000c37] ; ret
0x00000000001ac347 : push 0xd1cfff5 ; add byte ptr [rax - 0xb], ch ; jmp qword ptr [rdx]
0x00000000001ac527 : push 0xd1cfff5 ; and al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000001ac2b7 : push 0xd1cfff5 ; cli ; cmc ; jmp qword ptr [rdx]
0x00000000001ac237 : push 0xd1cfff5 ; cmc ; jmp qword ptr [rdx]
0x00000000001ac45f : push 0xd1cfff5 ; in eax, dx ; cmc ; jmp qword ptr [rdx]
0x00000000001ac3cf : push 0xd1cfff5 ; mul dword ptr [rdi - 0xb] ; jmp qword ptr [rdx]
0x00000000001ac2ff : push 0xd1cfff5 ; or ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001ac1a7 : push 0xd1cfff5 ; retf ; cmc ; jmp qword ptr [rdx]
0x00000000001ac0d7 : push 0xd1cfff5 ; test al, 0x67 ; cmc ; jmp qword ptr [rdx]
0x000000000019c191 : push 0xee ; call qword ptr [rdi]
0x00000000001289e4 : push 0xef ; dec dword ptr [rax - 0x77] ; ret
0x0000000000178a8d : push 0xf2 ; inc eax ; push 0xf2 ; jmp rax
0x0000000000178a91 : push 0xf2 ; jmp rax
0x00000000001a5349 : push 0xf4 ; jmp qword ptr [rcx]
0x000000000018682d : push 0xfb ; call qword ptr [rax + 0x10fffb82]
0x00000000001a50fd : push 1 ; add al, ah ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a5115 : push 1 ; add al, bh ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a5145 : push 1 ; add byte ptr [rax + 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x000000000012779e : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000000e568 : push 3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009da82 : push 5 ; add byte ptr [rax], al ; ret
0x000000000018671b : push qword ptr [rax + 0x18] ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x0000000000186fd3 : push qword ptr [rax + 0x1f] ; cld ; inc eax ; and ah, bh ; call qword ptr [rax]
0x000000000018746b : push qword ptr [rax + 0x40fffc54] ; push rsp ; cld ; jmp rax
0x0000000000187043 : push qword ptr [rax + 0x40fffc63] ; movsxd rdi, esp ; call rax
0x0000000000187747 : push qword ptr [rax + 0x40fffc88] ; mov ah, bh ; call rax
0x0000000000187a67 : push qword ptr [rax + 0x40fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rsi
0x0000000000187c3f : push qword ptr [rax + 0x40fffcaf] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000022020 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x000000000017758b : push qword ptr [rax + 0x58ffee72] ; jno 0x177589 ; call rax
0x0000000000187437 : push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x0000000000178a03 : push qword ptr [rax + 0x66] ; jmp qword ptr [rax - 0x2f000d9a]
0x0000000000178573 : push qword ptr [rax + 0x70] ; int1 ; inc eax ; jb 0x178574 ; call qword ptr [rax]
0x000000000017757f : push qword ptr [rax + 0x72] ; out dx, al ; call qword ptr [rax - 0x2f00118e]
0x000000000016679f : push qword ptr [rax + 0x77] ; in al, dx ; inc dword ptr [rax + 0x77] ; in al, dx ; call qword ptr [rax]
0x00000000001879ab : push qword ptr [rax + 0x7a] ; cld ; call qword ptr [rax]
0x000000000018681b : push qword ptr [rax + 0x7a] ; sti ; inc eax ; jnp 0x186826 ; call qword ptr [rax]
0x00000000001877a7 : push qword ptr [rax + 0x7b] ; cld ; jmp rax
0x00000000001893fb : push qword ptr [rax + rbp*8 - 0x6f5c0000] ; out dx, al ; jmp rsp
0x00000000000fa71d : push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x000000000018e593 : push qword ptr [rax + rdi*8 - 0x28bbffff] ; std ; jmp rsp
0x00000000000bd47e : push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x0000000000188c9b : push qword ptr [rax + rsi*4 - 0xe2c0000] ; jmp 0x188cab
0x0000000000178847 : push qword ptr [rax - 0x1f000dae] ; push rdx ; call qword ptr [rax]
0x0000000000186c13 : push qword ptr [rax - 0x25] ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x0000000000186c8f : push qword ptr [rax - 0x32] ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000178aff : push qword ptr [rax - 0x3f000d94] ; insb byte ptr [rdi], dx ; call rax
0x0000000000178877 : push qword ptr [rax - 0x3f000dad] ; push rbx ; call rax
0x0000000000178767 : push qword ptr [rax - 0x3f000db9] ; call rax
0x000000000017854f : push qword ptr [rax - 0x3f000ea5] ; pop rbp ; int1 ; call rax
0x0000000000186aaf : push qword ptr [rax - 0x46] ; std ; call qword ptr [rcx]
0x000000000018696f : push qword ptr [rax - 0x53] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001786b3 : push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x000000000018772f : push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x0000000000186e07 : push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186e5b : push qword ptr [rax - 6] ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000018670b : push qword ptr [rax] ; adc eax, 0x1600fffb ; sti ; call rax
0x0000000000186d0f : push qword ptr [rax] ; add edi, esp ; push rax ; add al, 0xfc ; call rax
0x0000000000187977 : push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x00000000001775b3 : push qword ptr [rax] ; jb 0x1775a9 ; call rax
0x000000000018795f : push qword ptr [rax] ; jl 0x187967 ; jmp qword ptr [rax + 0x10fffc7b]
0x000000000016678b : push qword ptr [rax] ; js 0x166783 ; inc dword ptr [rax] ; js 0x166787 ; call rax
0x000000000009c88f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001869a7 : push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000001867bf : push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x00000000001872a3 : push qword ptr [rax] ; push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x00000000001786c3 : push qword ptr [rax] ; pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x0000000000163f28 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000076abb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000fcdf8 : push qword ptr [rbp + rax - 0x7d] ; ret 0x8901
0x00000000001876e3 : push qword ptr [rbp + rax*4 - 0x7abb0004] ; cld ; call rsp
0x0000000000133100 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000038d0e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000111852 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000011c2fb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016544c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000038626 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bec1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000018937b : push qword ptr [rbp] ; add bh, ah ; mov esi, ebp ; jmp rsp
0x00000000000c0ec5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000cb6a8 : push qword ptr [rbx + 0x34] ; ret
0x0000000000036fbc : push qword ptr [rbx + 1] ; ret
0x00000000000eb0e9 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x00000000000471c6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000007514c : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000188f73 : push qword ptr [rbx + rax*8] ; add ah, dl ; pop rbp ; in eax, dx ; call rsp
0x00000000000760a6 : push qword ptr [rbx + rcx - 0x18] ; ret 0xfa93
0x00000000000fa7b2 : push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000018db53 : push qword ptr [rbx + rdi*4 + 0x2e040002] ; cli ; jmp rsp
0x000000000017a333 : push qword ptr [rbx] ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x000000000018e143 : push qword ptr [rcx + 2] ; add ah, dl ; ret 0xfffa
0x00000000000cda6a : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000001869ff : push qword ptr [rcx] ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000186a1f : push qword ptr [rcx] ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000076f24 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000578b3 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005c95d : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000071a26 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000cdf83 : push qword ptr [rcx] ; shr cl, cl ; ret 0xfff9
0x00000000000eb1aa : push qword ptr [rdi + 0x17] ; ret
0x00000000000eb1f9 : push qword ptr [rdi + 0x18] ; ret
0x0000000000036cce : push qword ptr [rdi + 0x19] ; ret
0x00000000000eb35f : push qword ptr [rdi + 0x1a] ; ret
0x00000000000eb306 : push qword ptr [rdi + 0x1b] ; ret
0x00000000000eb2a2 : push qword ptr [rdi + 0x1f] ; ret
0x00000000000f30c8 : push qword ptr [rdi + 0x21] ; ret
0x00000000000eb70e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ed19e : push qword ptr [rdi + 0x66] ; add rsp, 0x38 ; ret
0x00000000000f1e20 : push qword ptr [rdi + 0x6f] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000ebbee : push qword ptr [rdi + 0x71] ; ret
0x000000000003702b : push qword ptr [rdi + 1] ; ret
0x0000000000036f95 : push qword ptr [rdi + 2] ; ret
0x00000000000ed052 : push qword ptr [rdi + 3] ; cdqe ; ret
0x00000000000fa3f2 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x00000000000754b5 : push qword ptr [rdi + 8] ; ret
0x000000000002f7d3 : push qword ptr [rdi + rax - 0x77] ; fucompi st(0) ; ret
0x0000000000189773 : push qword ptr [rdi + rdi*8 - 0x3c9c0000] ; out dx, al ; jmp rsp
0x0000000000187db7 : push qword ptr [rdi - 4] ; jmp rsp
0x00000000001893e3 : push qword ptr [rdi] ; add byte ptr [rsi + rcx*4], dl ; out dx, al ; jmp rsp
0x0000000000179157 : push qword ptr [rdi] ; ret 0xfff3
0x000000000018761b : push qword ptr [rdx + 0x42fffc86] ; xchg ah, bh ; call rdx
0x0000000000187b13 : push qword ptr [rdx + 0x42fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rdx
0x0000000000187327 : push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x000000000002aba6 : push qword ptr [rdx + rbx - 0x18] ; ret 0x10b4
0x000000000006ec93 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000018a1ab : push qword ptr [rdx + rcx*2 - 0x1edbffff] ; out dx, eax ; jmp rsp
0x000000000018905b : push qword ptr [rdx + rcx*8] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018c903 : push qword ptr [rdx + rsi + 0x12540002] ; clc ; call rsp
0x0000000000114973 : push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x00000000001877f7 : push qword ptr [rdx - 0x7f] ; cld ; jmp rdx
0x000000000018689b : push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x0000000000186897 : push qword ptr [rdx] ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x000000000017a9b7 : push qword ptr [rdx] ; sal dh, cl ; jmp rax
0x000000000017a9b3 : push qword ptr [rdx] ; sal dh, cl ; push qword ptr [rdx] ; sal dh, cl ; jmp rax
0x0000000000187577 : push qword ptr [rsi + 0x46fffc8a] ; mov bh, ah ; call rsi
0x00000000000fcba9 : push qword ptr [rsi + rax - 0x7d] ; ret 0x6601
0x00000000001873df : push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x0000000000074f6d : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x00000000001871b7 : push qword ptr [rsp + 0x6444fffc] ; cld ; call rsp
0x0000000000187bdb : push qword ptr [rsp + rbp*4 - 0x53bb0004] ; cld ; call rsp
0x000000000018d353 : push qword ptr [rsp + rdi*2 + 0x12440002] ; stc ; jmp rsp
0x0000000000127836 : push r12 ; mov eax, 1 ; ret
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000080363 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001281bd : push rax ; adc byte ptr [rax + 1], bh ; ret
0x00000000000741ca : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c6d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000011fd9d : push rax ; adc dh, dh ; ret 0x7401
0x0000000000186d13 : push rax ; add al, 0xfc ; call rax
0x0000000000186d90 : push rax ; add bh, ah ; call qword ptr [rax]
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007373c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000000e0a0 : push rax ; add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000186dd8 : push rax ; add eax, 0x730fffc ; cld ; jmp qword ptr [rax]
0x00000000000b23d0 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000000f7a8a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000186cf0 : push rax ; add edi, esp ; call qword ptr [rax]
0x000000000018fef0 : push rax ; add edx, ebp ; call qword ptr [rbx]
0x000000000018ff50 : push rax ; add edx, ebp ; call qword ptr [rcx]
0x000000000012e246 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000133c5f : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000011f632 : push rax ; and byte ptr [rdi + 1], bh ; call 0x12b8d9
0x0000000000186743 : push rax ; and ebx, edi ; jmp rax
0x00000000001114ca : push rax ; call 0x11d6e3
0x00000000001787f3 : push rax ; call qword ptr [rax]
0x00000000001789db : push rax ; call qword ptr fs:[rax]
0x0000000000027eaa : push rax ; call rax
0x00000000000e3a6c : push rax ; cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0c3c6
0x00000000001aaf1d : push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000186f0c : push rax ; cmp ah, bh ; jmp rax
0x000000000006ee6b : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000f0b11 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000018e780 : push rax ; cmp cl, ch ; call qword ptr [rax]
0x00000000000fa7af : push rax ; cmp edx, 0xff ; je 0xfa7c7 ; ret
0x0000000000187ef0 : push rax ; cmp esp, 0xff ; nop ; test bh, ah ; call qword ptr [rax]
0x0000000000187e40 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call rax
0x0000000000186984 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call rax
0x00000000001abee0 : push rax ; in eax, dx ; cmc ; call qword ptr [rax]
0x000000000017352c : push rax ; in eax, dx ; jmp qword ptr [rax]
0x0000000000178777 : push rax ; inc dword ptr [rax] ; call qword ptr [rax]
0x00000000001b41c0 : push rax ; jg 0x1b41bd ; call qword ptr [rdx]
0x0000000000178663 : push rax ; jge 0x178667 ; call qword ptr [rax]
0x00000000001ad44c : push rax ; jl 0x1ad447 ; jmp qword ptr [rdx]
0x0000000000178a23 : push rax ; jmp qword ptr [eax]
0x00000000001b1440 : push rax ; jrcxz 0x1b143c ; call qword ptr [rdi]
0x00000000001785f7 : push rax ; loop 0x1785f4 ; inc dword ptr [rax] ; jrcxz 0x1785f8 ; call qword ptr [rax]
0x00000000001ab690 : push rax ; loope 0x1ab68b ; call qword ptr [rcx]
0x0000000000186afb : push rax ; loopne 0x186afe ; call rax
0x00000000001a2f00 : push rax ; mov dh, dl ; call qword ptr [rdx]
0x000000000002572b : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000028b21 : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029537 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000128036 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002a4df : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001064c6 : push rax ; mov rsi, rdx ; call rax
0x0000000000187e50 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rax
0x0000000000187e48 : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x00000000001867e7 : push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x0000000000187244 : push rax ; movsxd rdi, esp ; jmp rax
0x000000000017855f : push rax ; movsxd rsi, ecx ; inc dword ptr [rax] ; int1 ; call qword ptr [rax]
0x0000000000186cdb : push rax ; or ah, bh ; call rax
0x000000000012809d : push rax ; or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000123ca5 : push rax ; or byte ptr [rax + 1], bh ; ret
0x0000000000021871 : push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 1] ; ret 0x9539
0x000000000012d5fc : push rax ; or byte ptr [rbp - 0x14438a40], al ; ret 0x1f0f
0x000000000004e800 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8348
0x000000000004ce65 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; jmp rcx
0x000000000007fffa : push rax ; or dh, dh ; ret 0x7404
0x0000000000080016 : push rax ; or dh, dh ; ret 0xf04
0x000000000013794c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001865de : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000187490 : push rax ; pop rax ; cld ; call rax
0x0000000000187433 : push rax ; pop rbx ; cld ; push qword ptr [rax + 0x5b] ; cld ; jmp rax
0x0000000000187488 : push rax ; pop rcx ; cld ; call rax
0x00000000001ab55c : push rax ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x000000000018706c : push rax ; pop rdi ; cld ; jmp rsi
0x0000000000187480 : push rax ; pop rdx ; cld ; call rax
0x0000000000187274 : push rax ; pop rsp ; cld ; call rax
0x0000000000178a4b : push rax ; push 0x6910fff2 ; jmp qword ptr [rax]
0x000000000018682b : push rax ; push 0xfb ; call qword ptr [rax + 0x10fffb82]
0x0000000000178813 : push rax ; push rax ; call qword ptr [rax]
0x0000000000178811 : push rax ; push rax ; push rax ; call qword ptr [rax]
0x00000000001788db : push rax ; push rbp ; call qword ptr [rax]
0x00000000001788fb : push rax ; push rbp ; inc dword ptr [rax] ; push rsi ; call qword ptr [rax]
0x0000000000178887 : push rax ; push rbx ; inc dword ptr [rax] ; push rsp ; call qword ptr [rax]
0x00000000001782b4 : push rax ; push rbx ; out dx, eax ; call qword ptr [rax]
0x0000000000178308 : push rax ; push rbx ; out dx, eax ; call rax
0x0000000000178334 : push rax ; push rbx ; out dx, eax ; inc eax ; push rdx ; out dx, eax ; call rax
0x00000000001782bc : push rax ; push rbx ; out dx, eax ; jmp qword ptr [rax]
0x0000000000178360 : push rax ; push rbx ; out dx, eax ; push rax ; push rdx ; out dx, eax ; call rax
0x0000000000178833 : push rax ; push rcx ; call qword ptr [rax]
0x0000000000187498 : push rax ; push rdi ; cld ; call rax
0x0000000000193200 : push rax ; push rdi ; jmp 0x193206
0x0000000000178363 : push rax ; push rdx ; out dx, eax ; call rax
0x00000000001788bb : push rax ; push rsp ; call qword ptr [rax]
0x00000000001867c7 : push rax ; push rsp ; sti ; call rax
0x00000000000041f8 : push rax ; ret
0x000000000001af00 : push rax ; ret 0x3b
0x00000000001b0340 : push rax ; ret 0xfff6
0x00000000000b5231 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000001aa9e0 : push rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000007c6c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000007506a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001026a1 : push rax ; sbb dh, dh ; ret 0x7504
0x0000000000190360 : push rax ; sbb ebp, edx ; call qword ptr [rax]
0x0000000000187a50 : push rax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x0000000000107ac5 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001867bc : push rax ; sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x0000000000187c68 : push rax ; stosd dword ptr [rdi], eax ; cld ; jmp rax
0x00000000000fc907 : push rax ; sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000186e74 : push rax ; sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x000000000018698c : push rax ; test al, 0xfd ; call rax
0x0000000000178683 : push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000187558 : push rax ; xchg esp, edi ; jmp rax
0x000000000000c280 : push rax ; xlatb ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007bebd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000186f88 : push rax ; xor eax, 0x3750fffc ; cld ; jmp rax
0x00000000000e35b5 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000012c5ad : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c705 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000001645f6 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000e42c3 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d7ad1 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001239cd : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000028df8 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000001788dd : push rbp ; call qword ptr [rax]
0x00000000001788d5 : push rbp ; call rax
0x00000000001872a9 : push rbp ; cld ; call qword ptr [rax]
0x0000000000187329 : push rbp ; cld ; jmp rdx
0x000000000018dd29 : push rbp ; cli ; call rsp
0x00000000001a8dac : push rbp ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001788fd : push rbp ; inc dword ptr [rax] ; push rsi ; call qword ptr [rax]
0x0000000000194d64 : push rbp ; insb byte ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000001cb1 : push rbp ; je 0x1cdf ; ret
0x00000000001ad3a4 : push rbp ; jl 0x1ad39f ; jmp qword ptr [rdx]
0x0000000000193364 : push rbp ; jmp 0x19336a
0x00000000001788f5 : push rbp ; jmp rax
0x00000000000675c9 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000067542 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x00000000000679f1 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x000000000006763b : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000067910 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x0000000000107739 : push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000013c3d8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001073c1 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000813a8 : push rbp ; or dh, dh ; ret 0x7502
0x00000000001788d9 : push rbp ; push rax ; push rbp ; call qword ptr [rax]
0x000000000012eb49 : push rbp ; push rbx ; xor ebx, ebx ; call 0x12ade6
0x0000000000104a22 : push rbp ; sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000001077ba : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x0000000000104ca5 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001a1654 : push rbp ; xchg cl, dh ; jmp qword ptr [rdx]
0x000000000010aca0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000f3d57 : push rbp ; xor edi, ecx ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000008beca : push rbp ; xor rax, rax ; ret
0x00000000000d4c18 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000041f1 : push rbx ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x00000000000f7ff1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000033a83 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001035bc : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000012eb10 : push rbx ; call 0x12adb3
0x000000000017887d : push rbx ; call rax
0x0000000000179499 : push rbx ; call rcx
0x0000000000002043 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000ea054 : push rbx ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000188ef9 : push rbx ; in eax, dx ; jmp rsp
0x0000000000178889 : push rbx ; inc dword ptr [rax] ; push rsp ; call qword ptr [rax]
0x0000000000178879 : push rbx ; inc eax ; push rbx ; call rax
0x0000000000074f32 : push rbx ; je 0x74f96 ; pop rbp ; pop r12 ; ret
0x00000000000c27fd : push rbx ; je 0xc27d0 ; mov eax, 1 ; ret
0x00000000000c27fc : push rbx ; je 0xc27d1 ; mov eax, 1 ; ret
0x000000000019475c : push rbx ; jge 0x19474e ; jmp qword ptr [rdx]
0x0000000000178881 : push rbx ; jmp rax
0x00000000000a359c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009e0e2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006ce45 : push rbx ; or al, 0xf6 ; ret 0x7404
0x000000000006d582 : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000000f5552 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000007b42e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003c84 : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001782b5 : push rbx ; out dx, eax ; call qword ptr [rax]
0x0000000000178309 : push rbx ; out dx, eax ; call rax
0x0000000000178335 : push rbx ; out dx, eax ; inc eax ; push rdx ; out dx, eax ; call rax
0x00000000001782bd : push rbx ; out dx, eax ; jmp qword ptr [rax]
0x00000000001782a9 : push rbx ; out dx, eax ; lcall ptr [rcx + rdx*2] ; out dx, eax ; jmp qword ptr [rax]
0x0000000000178361 : push rbx ; out dx, eax ; push rax ; push rdx ; out dx, eax ; call rax
0x00000000001ac346 : push rbx ; push 0xd1cfff5 ; add byte ptr [rax - 0xb], ch ; jmp qword ptr [rdx]
0x0000000000037c9c : push rbx ; ret
0x000000000019accc : push rbx ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001867c5 : push rbx ; sti ; push rax ; push rsp ; sti ; call rax
0x0000000000078ccf : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000175bfc : push rbx ; xchg eax, edx ; jae 0x175bdb ; push rsi ; pop rdx ; je 0x175bd0 ; ret 0xacfc
0x00000000000d77da : push rbx ; xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000012eb4a : push rbx ; xor ebx, ebx ; call 0x12ade5
0x0000000000123c8d : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000018cd55 : push rcx ; add al, byte ptr [rax] ; and al, 0x5e ; clc ; jmp rsp
0x000000000008b77d : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096da2 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000018ca48 : push rcx ; and edi, eax ; call rsp
0x0000000000178835 : push rcx ; call qword ptr [rax]
0x0000000000174e85 : push rcx ; call qword ptr [rsi]
0x000000000017882d : push rcx ; call rax
0x0000000000001b28 : push rcx ; jns 0x1b35 ; ret
0x00000000001868b4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp qword ptr [rcx]
0x00000000001a9534 : push rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000019b77c : push rcx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001782ad : push rcx ; out dx, eax ; jmp qword ptr [rax]
0x00000000000e3a6b : push rcx ; push rax ; cli ; dec dword ptr [rax - 0x77] ; jmp 0x4cd0c3c7
0x0000000000178831 : push rcx ; push rax ; push rcx ; call qword ptr [rax]
0x000000000019c576 : push rcx ; ret
0x00000000001867c1 : push rcx ; sti ; call qword ptr [rax]
0x00000000001b05f1 : push rcx ; sti ; call rsi
0x00000000001868e0 : push rcx ; stosd dword ptr [rdi], eax ; std ; jmp rcx
0x00000000000a0fa2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f532 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000c4ac8 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a1100 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a3776 : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a0dd8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0dea : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000096a84 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009f37a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000014d0d9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000969f4 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000969e4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002f8fc : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00000000000a0daa : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009e5fc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009f43c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a0e08 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001b6951 : push rdi ; call qword ptr [rcx]
0x0000000000144528 : push rdi ; clc ; ret
0x000000000000389b : push rdi ; clc ; salc ; jb 0x3921 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000187319 : push rdi ; cld ; call qword ptr [rdx]
0x0000000000187499 : push rdi ; cld ; call rax
0x0000000000187459 : push rdi ; cld ; jmp rax
0x00000000001446a0 : push rdi ; cld ; ret
0x00000000001451c7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014c9b9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001280b5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000ad6c8 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x00000000000366d9 : push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000085e7a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000014c939 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014c78a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001a0ac4 : push rdi ; je 0x1a0abb ; jmp qword ptr [rdx]
0x000000000019469c : push rdi ; jge 0x19468e ; jmp qword ptr [rdx]
0x0000000000193201 : push rdi ; jmp 0x193205
0x0000000000193271 : push rdi ; jmp 0x193275
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014c81a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000117866 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000004e804 : push rdi ; or bl, ch ; ret 0x8348
0x0000000000035c1f : push rdi ; or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000a0e4c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e8a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0e2a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b01a5 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x0000000000039d1a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000003858a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001313e2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000038591 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000005a02d : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000055eb6 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000055235 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055af6 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000073740 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000019af0c : push rdi ; or ch, dh ; jmp qword ptr [rdx]
0x000000000004ce69 : push rdi ; or cl, ch ; jmp rcx
0x000000000009e7e0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000009f630 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000019b9bc : push rdi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab404 : push rdi ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000000715c5 : push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7158d
0x00000000000c4c57 : push rdi ; ret
0x00000000000d486e : push rdi ; ret 0
0x00000000001614be : push rdi ; ret 0xff3
0x000000000003d7aa : push rdi ; ret 0xffef
0x0000000000058afd : push rdi ; ret 0xffff
0x000000000012e425 : push rdi ; sbb bl, dh ; ret
0x000000000012e450 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001028a9 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f56b2 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000000356bc : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001453c7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018f841 : push rdi ; std ; jmp qword ptr [rax]
0x0000000000144bea : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000144fc7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001280fd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000d0036 : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000f6ecc : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a10e0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008a8eb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000005d5d5 : push rdi ; xor esi, dword ptr [rsi] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e35d3 : push rdx ; adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x000000000018cda5 : push rdx ; add al, byte ptr [rax] ; mov ah, 0x61 ; clc ; jmp rsp
0x0000000000117fce : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000017884d : push rdx ; call qword ptr [rax]
0x00000000001aadd4 : push rdx ; cmc ; jmp qword ptr [rdx]
0x00000000001877f3 : push rdx ; cmp esp, 0xfc8172ff ; jmp rdx
0x00000000000b3862 : push rdx ; idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x00000000001a125c : push rdx ; jle 0x1a1253 ; jmp qword ptr [rdx]
0x0000000000188af1 : push rdx ; jmp 0x188af5
0x0000000000178849 : push rdx ; jmp rax
0x0000000000195704 : push rdx ; jno 0x1956f7 ; jmp qword ptr [rdx]
0x0000000000187afc : push rdx ; mov al, 0xfc ; jmp rdx
0x00000000001655f6 : push rdx ; mov eax, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000187604 : push rdx ; mov esp, edi ; jmp rdx
0x0000000000086c06 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000178339 : push rdx ; out dx, eax ; call rax
0x000000000017833d : push rdx ; out dx, eax ; jmp qword ptr [rax]
0x0000000000190896 : push rdx ; ret
0x0000000000037e1e : push rdx ; ret 0x38
0x0000000000129cf2 : push rdx ; ret 5
0x000000000018e3e9 : push rdx ; sti ; call rsp
0x000000000010d71e : push rdx ; sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x0000000000001b0d : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x0000000000160104 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000746ad : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014d371 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000014d3e1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009cfb5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000014d301 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009cf53 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000160119 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000178901 : push rsi ; call qword ptr [rax]
0x0000000000144652 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000187461 : push rsi ; cld ; call rax
0x00000000001872a5 : push rsi ; cld ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000187074 : push rsi ; cld ; jmp rsi
0x00000000001873e1 : push rsi ; cld ; jmp rsp
0x0000000000144dc1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001449f5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144bd5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144db5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000144815 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000187325 : push rsi ; cld ; push qword ptr [rdx + 0x55] ; cld ; jmp rdx
0x00000000001873dd : push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x00000000001767a0 : push rsi ; cli ; push 0x6e ; ja 0x17672f ; ret 0x48f
0x0000000000163a66 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000019496c : push rsi ; fsubr st(4) ; jmp qword ptr [rdx]
0x0000000000163a56 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000163a26 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000001064a2 : push rsi ; je 0x1064b8 ; mov eax, 7 ; ret
0x00000000001931b9 : push rsi ; jmp 0x1931bd
0x0000000000178905 : push rsi ; jmp qword ptr [rax]
0x00000000000e45eb : push rsi ; js 0xe463f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e4f48 : push rsi ; js 0xe4f9c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000187a98 : push rsi ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsi
0x0000000000050320 : push rsi ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000091e3d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000b01a2 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x0000000000175c00 : push rsi ; pop rdx ; je 0x175bcc ; ret 0xacfc
0x00000000000364bf : push rsi ; ret
0x00000000000ddea6 : push rsi ; ret 0x7408
0x00000000000ddeb5 : push rsi ; ret 0x7420
0x000000000009817a : push rsi ; ret 0x7518
0x0000000000074d96 : push rsi ; ret 0xffff
0x000000000012083f : push rsi ; ret 5
0x000000000012f96a : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000163a36 : push rsi ; sub eax, edx ; ret
0x00000000001875a0 : push rsi ; xchg ah, bh ; jmp rsi
0x00000000000efe07 : push rsi ; xor ax, ax ; ret
0x000000000016012e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c908 : push rsp ; adc bh, al ; call rsp
0x00000000001af7a4 : push rsp ; adc dword ptr [rdx], eax ; add al, bh ; test dh, dh ; jmp rdx
0x00000000000063e0 : push rsp ; add byte ptr [rax], r8b ; adc al, byte ptr [rax] ; or al, 0 ; call qword ptr [rcx]
0x00000000000504f2 : push rsp ; add cl, byte ptr es:[rax + 1] ; ret 0x8348
0x00000000001a3a6d : push rsp ; add dword ptr [rax], eax ; loopne 0x1a3aa3 ; jmp rdx
0x00000000001a67a4 : push rsp ; add dword ptr [rcx], 0xf4ca3800 ; jmp qword ptr [rcx]
0x00000000000e7781 : push rsp ; add eax, 0xbe0f4101 ; ret 0xe883
0x000000000018981c : push rsp ; add eax, dword ptr [rcx] ; add byte ptr [rdi + rdx*8 - 0x12], dh ; call rsp
0x000000000018e633 : push rsp ; add qword ptr [r8], r8 ; xor al, 0xe1 ; std ; jmp rsp
0x000000000010733d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001073bd : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000102255 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x0000000000102158 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000bdd02 : push rsp ; and al, 0x28 ; call rax
0x000000000008094e : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000f2466 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000036980 : push rsp ; and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000039ef0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000039eaa : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e4435 : push rsp ; and al, 4 ; jmp 0xe4400
0x000000000017888d : push rsp ; call qword ptr [rax]
0x00000000001788b5 : push rsp ; call rax
0x000000000018cd19 : push rsp ; clc ; call rsp
0x000000000018746d : push rsp ; cld ; inc dword ptr [rax + 0x54] ; cld ; jmp rax
0x00000000001872f1 : push rsp ; cld ; jmp qword ptr [rdx]
0x0000000000187471 : push rsp ; cld ; jmp rax
0x000000000018dc90 : push rsp ; cli ; inc esp ; ret 2
0x00000000001a1fa4 : push rsp ; cmp dword ptr [rcx], eax ; add byte ptr [rax - 0x16], bl ; int1 ; jmp qword ptr [rcx]
0x0000000000187db3 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdi - 4] ; jmp rsp
0x000000000018a180 : push rsp ; fsub st(7), st(0) ; jmp rsp
0x0000000000194714 : push rsp ; jge 0x194706 ; jmp qword ptr [rdx]
0x00000000001ad3ec : push rsp ; jl 0x1ad3e7 ; jmp qword ptr [rdx]
0x0000000000188b29 : push rsp ; jmp 0x188b2d
0x0000000000178891 : push rsp ; jmp qword ptr [rax]
0x00000000000c25c6 : push rsp ; jne 0xc2553 ; mov eax, 0x7d00 ; ret
0x00000000001acc44 : push rsp ; jo 0x1acc3f ; jmp qword ptr [rdx]
0x00000000000970cb : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000189513 : push rsp ; lock add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rsp
0x00000000001876cc : push rsp ; mov ah, bh ; jmp rsp
0x0000000000127837 : push rsp ; mov eax, 1 ; ret
0x0000000000103e1b : push rsp ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000001ab8d4 : push rsp ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001a83a4 : push rsp ; popfq ; add dword ptr [rax], eax ; fdiv dword ptr [rdx] ; cmc ; jmp qword ptr [rcx]
0x00000000001788b9 : push rsp ; push rax ; push rsp ; call qword ptr [rax]
0x00000000001873db : push rsp ; push rsi ; cld ; push qword ptr [rsi + rdx*2 - 4] ; jmp rsp
0x00000000001982a4 : push rsp ; pushfq ; add byte ptr [rax], al ; cmp dl, dl ; in eax, dx ; call rcx
0x000000000002572e : push rsp ; ret
0x0000000000188f43 : push rsp ; ret 0
0x0000000000189760 : push rsp ; ret 0xffee
0x000000000018a7b8 : push rsp ; ret 0xfff1
0x00000000001aa8a4 : push rsp ; ret 1
0x000000000018dc74 : push rsp ; ret 2
0x0000000000129ce8 : push rsp ; ret 5
0x000000000019a7a4 : push rsp ; rol dword ptr [rax], 0 ; js 0x19a7d3 ; out dx, al ; jmp qword ptr [rax]
0x00000000001abca4 : push rsp ; salc ; add dword ptr [rax], eax ; clc ; out 0xf5, al ; call qword ptr [rax]
0x000000000018fea4 : push rsp ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; add edx, ebp ; call qword ptr [rdx]
0x0000000000187bc4 : push rsp ; scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x00000000001867c9 : push rsp ; sti ; call rax
0x00000000001a7ba4 : push rsp ; xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a7ca4 : push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x0000000000139870 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001982a5 : pushfq ; add byte ptr [rax], al ; cmp dl, dl ; in eax, dx ; call rcx
0x00000000000715c6 : pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7158c
0x00000000001a2bec : pushfq ; add dword ptr [r8], r8d ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a82b5 : pushfq ; add dword ptr [rax], eax ; mov byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8285 : pushfq ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a826d : pushfq ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a24ec : pushfq ; add dword ptr ds:[rax], eax ; xor ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000018cb94 : pushfq ; add r8b, byte ptr [rax] ; jnp 0x18cbdd ; clc ; jmp rsp
0x000000000004574c : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000001786c5 : pushfq ; cld ; jmp qword ptr [rax + 0x10fffc9d]
0x000000000018d894 : pushfq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; adc al, 0xcb ; stc ; call rsp
0x000000000018b4ac : pushfq ; enter 1, -0x4c ; ret 0xfff5
0x000000000019c1ec : pushfq ; fild dword ptr [rax] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001b51ec : pushfq ; imul eax, dword ptr [rdx], 0 ; jo 0x1b5200 ; sti ; jmp qword ptr [rdx]
0x00000000001b4fec : pushfq ; imul eax, dword ptr [rdx], 0xf79a5000 ; call qword ptr [rdx]
0x000000000018976c : pushfq ; inc dword ptr [rax] ; add ah, dl ; ret 0xffee
0x000000000018dd24 : pushfq ; mov dword ptr [rdx], 0xfa55f400 ; call rsp
0x00000000000788ac : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000013a570 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138524 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000019e311 : pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001870e8 : pushfq ; pop rdi ; cld ; ljmp ptr [rdi + rbx*2] ; cld ; call rdx
0x000000000019c84c : pushfq ; pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001964d7 : pushfq ; ret
0x00000000001aa8ec : pushfq ; ret 1
0x000000000018dc8c : pushfq ; ret 2
0x000000000018aebc : pushfq ; sahf ; add dword ptr [rax], eax ; pop rsp ; mov dh, bl ; jmp rsp
0x00000000000b729c : rcl byte ptr [rax + 0x29000001], cl ; ret
0x00000000000b25d1 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000033660 : rcl byte ptr [rax + rax], 0xe9 ; ret
0x0000000000178810 : rcl byte ptr [rax - 0xe], 1 ; push rax ; push rax ; call qword ptr [rax]
0x00000000001788f0 : rcl byte ptr [rbp - 0xe], 0xff ; rcl byte ptr [rbp - 0xe], 1 ; jmp rax
0x00000000001788f4 : rcl byte ptr [rbp - 0xe], 1 ; jmp rax
0x00000000001788d8 : rcl byte ptr [rbp - 0xe], 1 ; push rax ; push rbp ; call qword ptr [rax]
0x000000000017887c : rcl byte ptr [rbx - 0xe], 0xff ; rcl byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000178880 : rcl byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000000041f0 : rcl byte ptr [rbx], 1 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x0000000000178830 : rcl byte ptr [rcx - 0xe], 1 ; push rax ; push rcx ; call qword ptr [rax]
0x0000000000178338 : rcl byte ptr [rdx - 0x11], 0xff ; rcl byte ptr [rdx - 0x11], 1 ; jmp qword ptr [rax]
0x000000000017833c : rcl byte ptr [rdx - 0x11], 1 ; jmp qword ptr [rax]
0x00000000001aa950 : rcl dl, 0xf5 ; jmp qword ptr [rsi]
0x0000000000080cc3 : rcl dword ptr [rip + 0x33d4ff], -0x7d ; ret 0x8b01
0x0000000000175bff : rcl dword ptr [rsi + 0x5a], cl ; je 0x175bcd ; ret 0xacfc
0x0000000000175bfb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x175bd1 ; ret 0xacfc
0x00000000001a6d50 : rcr ah, 1 ; hlt ; jmp qword ptr [rcx]
0x0000000000036830 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000038597 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000178554 : rcr byte ptr [rbp - 0xf], 0xff ; rcr byte ptr [rdi - 0xf], 1 ; jmp rax
0x000000000001ff72 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010ad12 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000007396d : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000070d49 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000246ce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c4ae : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000005371c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000049400 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000005df1c : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000d1d9f : rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xd1dac ; pop rbp ; ret
0x0000000000048b04 : rcr byte ptr [rbx - 9], 0xd8 ; pop rbp ; ret
0x00000000001ab784 : rcr byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rdx]
0x000000000017601d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000178558 : rcr byte ptr [rdi - 0xf], 1 ; jmp rax
0x0000000000187068 : rcr byte ptr [rdi - 4], 0xff ; push rax ; pop rdi ; cld ; jmp rsi
0x00000000001870f0 : rcr byte ptr [rsi - 4], cl ; inc dword ptr [rdx + 0x65] ; cld ; call rdx
0x0000000000186fcc : rcr byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000001a6e10 : rcr ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a6e70 : rcr ch, 1 ; hlt ; call rbx
0x00000000000385c9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000117c56 : rcr dword ptr [rcx], -0x40 ; ret
0x0000000000179974 : rcr dword ptr [rdx - 0x6522000c], cl ; hlt ; jmp rdi
0x0000000000199a0c : rcr eax, -0x13 ; jmp qword ptr [rdx]
0x0000000000000289 : ret
0x000000000000ed60 : ret 0
0x0000000000009788 : ret 0x10
0x000000000002f03b : ret 0x100
0x000000000002e8e8 : ret 0x101
0x00000000000007bf : ret 0x102
0x000000000006d5df : ret 0x107
0x0000000000034b1a : ret 0x1074
0x0000000000041cf4 : ret 0x1075
0x000000000002abaa : ret 0x10b4
0x00000000000711ab : ret 0x10c8
0x000000000009d1fd : ret 0x11
0x00000000000802d2 : ret 0x110
0x000000000003856c : ret 0x114d
0x00000000000bd984 : ret 0x1174
0x00000000000e3c39 : ret 0x11e8
0x00000000000a5639 : ret 0x11e9
0x0000000000047312 : ret 0x12
0x00000000000579ea : ret 0x12e3
0x000000000005c725 : ret 0x12e9
0x00000000000409b1 : ret 0x13
0x0000000000049056 : ret 0x133c
0x000000000004b022 : ret 0x1360
0x00000000000dac68 : ret 0x1376
0x000000000004958b : ret 0x13eb
0x00000000000334d8 : ret 0x14
0x000000000004323a : ret 0x1433
0x00000000000887ad : ret 0x144
0x00000000000e1103 : ret 0x1472
0x00000000000d96ab : ret 0x1476
0x00000000000483f9 : ret 0x1477
0x0000000000097109 : ret 0x147c
0x000000000005499b : ret 0x148
0x00000000000e321f : ret 0x148d
0x000000000007bed2 : ret 0x149
0x00000000000ec508 : ret 0x14c
0x00000000000e00da : ret 0x15
0x00000000000277fb : ret 0x154f
0x00000000000364f0 : ret 0x1575
0x000000000007f98b : ret 0x1589
0x000000000000a310 : ret 0x16
0x000000000003d86f : ret 0x1676
0x000000000003c646 : ret 0x1677
0x00000000000e8634 : ret 0x16e9
0x000000000006014f : ret 0x17
0x000000000001ab20 : ret 0x17c9
0x00000000000ead03 : ret 0x17e8
0x00000000000afa93 : ret 0x17e9
0x000000000008bf35 : ret 0x1876
0x0000000000047317 : ret 0x18b9
0x00000000000c7851 : ret 0x18eb
0x000000000008bbd5 : ret 0x1974
0x00000000000c42f2 : ret 0x19eb
0x000000000000b8e8 : ret 0x1a
0x00000000000966e4 : ret 0x1a75
0x000000000017657a : ret 0x1ad4
0x0000000000056e4a : ret 0x1b
0x0000000000174d0d : ret 0x1b49
0x00000000000fbce2 : ret 0x1b72
0x00000000000eb2f2 : ret 0x1b75
0x0000000000050cd3 : ret 0x1b8
0x0000000000001bf1 : ret 0x1bb7
0x0000000000022034 : ret 0x1be
0x000000000004c80e : ret 0x1beb
0x0000000000003467 : ret 0x1bf9
0x0000000000170200 : ret 0x1d4
0x0000000000170998 : ret 0x1d5
0x000000000008bad6 : ret 0x1d74
0x00000000000021c9 : ret 0x1dd4
0x00000000000c511a : ret 0x1e73
0x0000000000095b19 : ret 0x1e75
0x00000000000cb6c9 : ret 0x1e8
0x000000000012125c : ret 0x1ee8
0x0000000000026fc8 : ret 0x1f0f
0x00000000000c5169 : ret 0x1f73
0x00000000000b7431 : ret 0x1fbf
0x000000000002f04a : ret 0x200
0x00000000000dfce1 : ret 0x2041
0x0000000000086d4d : ret 0x2074
0x0000000000007298 : ret 0x21
0x00000000000360be : ret 0x2148
0x00000000000f1da9 : ret 0x21e8
0x0000000000086cdb : ret 0x2275
0x0000000000086e08 : ret 0x2288
0x000000000000e870 : ret 0x23
0x0000000000161622 : ret 0x2373
0x0000000000096d7a : ret 0x2374
0x00000000000d8f2f : ret 0x237e
0x00000000000025c7 : ret 0x23cb
0x000000000016f208 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x00000000000a7739 : ret 0x24eb
0x000000000012ff4a : ret 0x25
0x00000000001654c9 : ret 0x25b4
0x00000000000f7d9c : ret 0x25eb
0x00000000000d95e1 : ret 0x267e
0x00000000000f7e6d : ret 0x26eb
0x0000000000088dc6 : ret 0x2774
0x000000000000054f : ret 0x2800
0x0000000000098965 : ret 0x280f
0x000000000008bf25 : ret 0x2876
0x00000000000b523a : ret 0x28f5
0x00000000000604c9 : ret 0x29
0x00000000000ae058 : ret 0x2941
0x00000000000a72a2 : ret 0x2944
0x00000000000d7d0f : ret 0x2945
0x000000000003e830 : ret 0x2948
0x000000000004444f : ret 0x2949
0x0000000000092f85 : ret 0x294c
0x0000000000079126 : ret 0x294d
0x0000000000038cf4 : ret 0x2973
0x000000000005e052 : ret 0x2975
0x0000000000111ba2 : ret 0x2a
0x000000000011f45a : ret 0x2a42
0x0000000000001b15 : ret 0x2a63
0x0000000000107bf4 : ret 0x2b
0x000000000011018e : ret 0x2b2b
0x000000000010ff5a : ret 0x2b2d
0x00000000000b1b5e : ret 0x2b3c
0x000000000010ec7a : ret 0x2b3e
0x0000000000024e56 : ret 0x2b49
0x00000000001274b2 : ret 0x2b74
0x00000000000a1b52 : ret 0x2b77
0x000000000010c3ad : ret 0x2b7c
0x00000000000f1ba4 : ret 0x2c
0x0000000000082ea1 : ret 0x2c75
0x00000000000f984a : ret 0x2c7f
0x00000000000efda2 : ret 0x2ce0
0x00000000000f333a : ret 0x2ce2
0x000000000003fac1 : ret 0x2ce9
0x00000000000c1012 : ret 0x2d0
0x00000000000eb0a2 : ret 0x2d2d
0x000000000005dee4 : ret 0x2d75
0x00000000000f1224 : ret 0x2d77
0x00000000000e85aa : ret 0x2dba
0x00000000000d1c7c : ret 0x2e
0x000000000007d3c5 : ret 0x2e66
0x00000000000d40ec : ret 0x2e9
0x00000000000d2f3a : ret 0x2eae
0x00000000000fa088 : ret 0x2eb
0x000000000012124c : ret 0x2ee8
0x0000000000005b58 : ret 0x2f
0x0000000000085e7e : ret 0x2f74
0x00000000000ccbb6 : ret 0x2f76
0x000000000007e318 : ret 0x2fe9
0x0000000000001b84 : ret 0x306a
0x000000000004a5b7 : ret 0x31
0x000000000011a7a7 : ret 0x3108
0x00000000000600ac : ret 0x3145
0x0000000000125ad7 : ret 0x3148
0x000000000012570d : ret 0x314c
0x00000000000e36b7 : ret 0x3173
0x00000000000faf99 : ret 0x31e8
0x00000000000e9699 : ret 0x31e9
0x000000000004c6aa : ret 0x31eb
0x00000000000708f3 : ret 0x3275
0x0000000000081ee6 : ret 0x33
0x000000000008cd46 : ret 0x336e
0x00000000000853fa : ret 0x33b7
0x00000000000805ca : ret 0x33db
0x000000000008292a : ret 0x33e1
0x000000000007e7a2 : ret 0x33f6
0x000000000007f3a6 : ret 0x3416
0x000000000007e26a : ret 0x3427
0x000000000007a5aa : ret 0x3452
0x00000000000970e9 : ret 0x347c
0x0000000000057e6a : ret 0x348
0x00000000000780ad : ret 0x34bf
0x0000000000071cb2 : ret 0x34db
0x0000000000066fa2 : ret 0x356e
0x0000000000085e88 : ret 0x3574
0x0000000000051ac4 : ret 0x36
0x000000000005b4a2 : ret 0x3629
0x000000000006e947 : ret 0x3675
0x0000000000051b3a : ret 0x36c2
0x00000000000c6cca : ret 0x371
0x00000000000eb893 : ret 0x37e8
0x0000000000033ae5 : ret 0x38
0x0000000000175e5a : ret 0x3827
0x00000000000f55fa : ret 0x3845
0x000000000003caad : ret 0x3875
0x000000000008bf15 : ret 0x3876
0x000000000010a2eb : ret 0x3877
0x00000000001744e6 : ret 0x38ae
0x000000000006ec5f : ret 0x38b
0x0000000000050df2 : ret 0x38e8
0x0000000000021d5c : ret 0x39
0x000000000004797b : ret 0x3901
0x0000000000113ce5 : ret 0x3904
0x0000000000117e47 : ret 0x3941
0x00000000000d89ad : ret 0x3944
0x0000000000060f17 : ret 0x3945
0x000000000003eabb : ret 0x3948
0x000000000002ecc2 : ret 0x3949
0x0000000000104590 : ret 0x394c
0x0000000000007238 : ret 0x3a
0x00000000000a1312 : ret 0x3a01
0x000000000016160b : ret 0x3a73
0x000000000001ae29 : ret 0x3b
0x000000000005a53a : ret 0x3b01
0x00000000000d8710 : ret 0x3b42
0x000000000002c67a : ret 0x3b48
0x0000000000127522 : ret 0x3b74
0x00000000000f20c3 : ret 0x3b8
0x0000000000103154 : ret 0x3bf
0x00000000000c46c6 : ret 0x3c01
0x0000000000086cc1 : ret 0x3c75
0x00000000000df972 : ret 0x3d
0x0000000000036160 : ret 0x3d75
0x00000000000244b2 : ret 0x3d83
0x0000000000046f57 : ret 0x3dbe
0x000000000004fc7d : ret 0x3de8
0x00000000000a560d : ret 0x3de9
0x00000000000ae8f6 : ret 0x3e89
0x00000000000e8331 : ret 0x3ee9
0x00000000000701bb : ret 0x3f7
0x00000000000243de : ret 0x3f74
0x00000000000b1437 : ret 0x400
0x00000000000d3dca : ret 0x4001
0x00000000000d4711 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x00000000000e7559 : ret 0x403c
0x000000000004bdfa : ret 0x407
0x000000000002291a : ret 0x4101
0x0000000000117fd2 : ret 0x4102
0x00000000000646b5 : ret 0x4104
0x000000000004a308 : ret 0x4108
0x00000000000207ab : ret 0x4110
0x00000000000cf508 : ret 0x4118
0x00000000000c5e76 : ret 0x4164
0x0000000000088b20 : ret 0x4166
0x00000000000257ee : ret 0x41c3
0x0000000000086a4a : ret 0x4201
0x00000000000b1603 : ret 0x4240
0x0000000000097f0a : ret 0x4266
0x00000000000d8ad9 : ret 0x428b
0x00000000000b2422 : ret 0x428d
0x00000000000de941 : ret 0x42c7
0x00000000000ed680 : ret 0x43f6
0x000000000005523d : ret 0x4401
0x00000000000c1c45 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000012def8 : ret 0x4489
0x00000000001239e2 : ret 0x448b
0x00000000000e7e0b : ret 0x44c6
0x0000000000029f15 : ret 0x44c7
0x0000000000024939 : ret 0x44f6
0x00000000000508f7 : ret 0x4501
0x00000000001301ac : ret 0x4502
0x0000000000064d17 : ret 0x4504
0x00000000000ad14e : ret 0x4505
0x00000000000d7d3d : ret 0x4510
0x00000000000ee030 : ret 0x4574
0x00000000000ea92d : ret 0x4576
0x00000000000c5af0 : ret 0x45e9
0x00000000000cb93f : ret 0x460f
0x00000000000a1fa7 : ret 0x4675
0x0000000000084824 : ret 0x46e8
0x00000000000ad176 : ret 0x4701
0x0000000000174fe4 : ret 0x474c
0x00000000000bc3eb : ret 0x4775
0x0000000000091715 : ret 0x4788
0x00000000000ebf83 : ret 0x47e8
0x00000000000279b0 : ret 0x4801
0x0000000000027c5e : ret 0x4802
0x0000000000050af2 : ret 0x4803
0x0000000000027a15 : ret 0x4804
0x0000000000091ccd : ret 0x4805
0x000000000002856a : ret 0x4806
0x00000000000fe3a2 : ret 0x4807
0x0000000000021828 : ret 0x4808
0x00000000000fe202 : ret 0x4809
0x00000000000fe4c2 : ret 0x480a
0x00000000000fe062 : ret 0x480b
0x00000000000b071e : ret 0x480e
0x0000000000039b76 : ret 0x4810
0x000000000002c0b0 : ret 0x4811
0x000000000012a1b3 : ret 0x4812
0x00000000000fc0fd : ret 0x4814
0x000000000008128e : ret 0x4817
0x00000000000ccc40 : ret 0x481e
0x00000000000b8af3 : ret 0x4830
0x0000000000096f3d : ret 0x4840
0x0000000000021f55 : ret 0x4847
0x00000000000c1080 : ret 0x4864
0x00000000000361a5 : ret 0x4866
0x00000000000a8afe : ret 0x4890
0x00000000000f0cd0 : ret 0x48b
0x0000000000126364 : ret 0x48bf
0x0000000000088aff : ret 0x48c3
0x000000000003ccd4 : ret 0x48d
0x0000000000023601 : ret 0x48e9
0x00000000001767a6 : ret 0x48f
0x000000000007da55 : ret 0x48f0
0x000000000002a964 : ret 0x4901
0x0000000000092131 : ret 0x4902
0x0000000000035c6d : ret 0x4903
0x0000000000025e65 : ret 0x4904
0x0000000000125245 : ret 0x4907
0x000000000004df95 : ret 0x4908
0x00000000000ab8f0 : ret 0x4909
0x00000000001376f2 : ret 0x4910
0x00000000000ae520 : ret 0x491e
0x0000000000085fc1 : ret 0x49e8
0x00000000000038a3 : ret 0x49ec
0x00000000000f4eaf : ret 0x4b01
0x000000000004a7b5 : ret 0x4b77
0x0000000000111731 : ret 0x4b78
0x000000000008690b : ret 0x4b80
0x0000000000029222 : ret 0x4c01
0x0000000000091e91 : ret 0x4c02
0x000000000006833a : ret 0x4c04
0x0000000000032635 : ret 0x4c08
0x0000000000049ade : ret 0x4c10
0x000000000005030f : ret 0x4c30
0x00000000000bcaec : ret 0x4c48
0x00000000000e6bf6 : ret 0x4c6
0x0000000000127d31 : ret 0x4c74
0x00000000001251e7 : ret 0x4c8b
0x00000000000258f4 : ret 0x4d02
0x000000000010c93e : ret 0x4d04
0x000000000007d58f : ret 0x4d07
0x000000000003fed6 : ret 0x4d09
0x000000000007dcc9 : ret 0x4d10
0x0000000000103a9b : ret 0x4d30
0x0000000000052e27 : ret 0x4d64
0x000000000004fddb : ret 0x4e0f
0x0000000000176207 : ret 0x4e27
0x00000000000207a2 : ret 0x4eb
0x00000000000aee2a : ret 0x4f8
0x00000000000fa7ad : ret 0x5077
0x0000000000010a78 : ret 0x51
0x00000000001615f4 : ret 0x5173
0x0000000000047084 : ret 0x5174
0x0000000000003152 : ret 0x52c0
0x00000000000e7048 : ret 0x52e9
0x000000000006d76a : ret 0x5389
0x00000000000d77e0 : ret 0x538b
0x00000000001117db : ret 0x53e9
0x000000000012235b : ret 0x53ff
0x00000000000ad121 : ret 0x5441
0x00000000000495d4 : ret 0x5474
0x00000000000970c9 : ret 0x547c
0x0000000000039ea8 : ret 0x5489
0x0000000000128d01 : ret 0x548d
0x000000000017446c : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000b0271 : ret 0x5589
0x0000000000047667 : ret 0x5641
0x0000000000086ca7 : ret 0x5675
0x000000000009385a : ret 0x56e9
0x00000000000d4c1c : ret 0x574
0x0000000000109ff2 : ret 0x577
0x0000000000176738 : ret 0x5803
0x0000000000073f8d : ret 0x5877
0x0000000000080924 : ret 0x58b
0x0000000000174140 : ret 0x591c
0x00000000001322c7 : ret 0x59e9
0x00000000000f86da : ret 0x5a4
0x0000000000003231 : ret 0x5a51
0x0000000000124959 : ret 0x5aa
0x0000000000174ea7 : ret 0x5ae4
0x00000000001218d3 : ret 0x5b1
0x00000000000e32ac : ret 0x5ba
0x0000000000002f67 : ret 0x5bdb
0x00000000000960eb : ret 0x5be9
0x0000000000104c9d : ret 0x5bf
0x00000000000b2f3b : ret 0x5c89
0x000000000000301d : ret 0x5cbe
0x000000000005aeef : ret 0x5ce9
0x00000000000f36a5 : ret 0x5e9
0x00000000000ae984 : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000076f94 : ret 0x60e9
0x0000000000002705 : ret 0x617e
0x0000000000176bd2 : ret 0x62c1
0x0000000000040233 : ret 0x6348
0x0000000000053814 : ret 0x6349
0x00000000000a1f8a : ret 0x6375
0x000000000008ac9f : ret 0x63be
0x0000000000116aba : ret 0x642
0x00000000000970b9 : ret 0x647c
0x00000000000b9113 : ret 0x64b8
0x0000000000033d08 : ret 0x65e9
0x00000000000e588a : ret 0x66
0x00000000000d1830 : ret 0x6601
0x000000000009716a : ret 0x6610
0x000000000008bea2 : ret 0x6620
0x000000000000280b : ret 0x6642
0x0000000000086fc3 : ret 0x66c3
0x00000000000c0a44 : ret 0x676
0x00000000000d82b6 : ret 0x677e
0x000000000017415f : ret 0x67b2
0x00000000000b23a1 : ret 0x67ba
0x00000000000b1600 : ret 0x6948
0x00000000000d4079 : ret 0x697e
0x00000000000738d9 : ret 0x6ae9
0x00000000000c1b9a : ret 0x6b74
0x00000000000c2fe9 : ret 0x6b8
0x0000000000003c8a : ret 0x6bba
0x0000000000102e82 : ret 0x6bf
0x0000000000185dd3 : ret 0x6e1f
0x0000000000176d61 : ret 0x6f9
0x00000000000a3a28 : ret 0x6fe9
0x0000000000082625 : ret 0x7075
0x00000000000345b4 : ret 0x70e9
0x00000000000fb459 : ret 0x71e8
0x000000000004f4c6 : ret 0x71eb
0x0000000000021740 : ret 0x7401
0x0000000000037723 : ret 0x7402
0x000000000006ce48 : ret 0x7404
0x00000000000754fe : ret 0x7408
0x000000000006e329 : ret 0x7420
0x000000000010b1af : ret 0x743
0x0000000000050327 : ret 0x7450
0x000000000010ada0 : ret 0x747
0x0000000000098457 : ret 0x7501
0x00000000000376e4 : ret 0x7502
0x000000000008c68d : ret 0x7504
0x0000000000072f98 : ret 0x7508
0x000000000016257b : ret 0x7510
0x000000000008c688 : ret 0x7518
0x0000000000162588 : ret 0x7520
0x00000000000d3ac9 : ret 0x7540
0x00000000000f0aa1 : ret 0x7577
0x00000000001335dc : ret 0x75e9
0x00000000001604e2 : ret 0x7677
0x00000000000b0611 : ret 0x76c
0x0000000000024e4a : ret 0x774
0x00000000000c548c : ret 0x775
0x000000000002c1b7 : ret 0x7773
0x000000000006d426 : ret 0x778d
0x0000000000107960 : ret 0x77a
0x00000000000b2476 : ret 0x77e
0x00000000000f1f53 : ret 0x77e8
0x00000000000827b5 : ret 0x7874
0x0000000000072e8a : ret 0x790
0x00000000000a64fa : ret 0x7901
0x0000000000002eb4 : ret 0x793b
0x000000000002ec01 : ret 0x79e8
0x00000000000e130b : ret 0x79e9
0x000000000006d4a9 : ret 0x7a8b
0x0000000000116ec7 : ret 0x7a8d
0x0000000000036635 : ret 0x7c7
0x00000000000eeb83 : ret 0x7c83
0x00000000000dbe16 : ret 0x7c8b
0x000000000012f550 : ret 0x7de9
0x000000000008be32 : ret 0x7e20
0x00000000000fb5c3 : ret 0x7e8
0x00000000000d8efa : ret 0x7eb
0x000000000008728c : ret 0x7f10
0x000000000014ac6e : ret 0x80
0x0000000000088469 : ret 0x8000
0x0000000000033eec : ret 0x8001
0x00000000000b4333 : ret 0x8010
0x0000000000034beb : ret 0x8040
0x000000000009d65d : ret 0x8072
0x0000000000115ab8 : ret 0x8080
0x0000000000003864 : ret 0x80fc
0x0000000000042db4 : ret 0x8136
0x000000000004579b : ret 0x8141
0x0000000000051fc3 : ret 0x8166
0x00000000000f0649 : ret 0x81e8
0x00000000000fb938 : ret 0x81e9
0x0000000000066146 : ret 0x820f
0x000000000011f1e3 : ret 0x828d
0x00000000000ca9a5 : ret 0x82e9
0x00000000000d0de9 : ret 0x82eb
0x000000000002d245 : ret 0x8301
0x0000000000113259 : ret 0x8303
0x000000000001fbee : ret 0x8304
0x0000000000096371 : ret 0x8305
0x00000000000562cf : ret 0x8308
0x000000000004769c : ret 0x830f
0x000000000002ea08 : ret 0x8310
0x00000000000526aa : ret 0x832d
0x000000000001f5bf : ret 0x8341
0x000000000008b9f6 : ret 0x8348
0x0000000000051595 : ret 0x8349
0x0000000000134ffc : ret 0x8366
0x0000000000133824 : ret 0x8380
0x00000000000d7ddc : ret 0x839
0x00000000000d804c : ret 0x83b
0x0000000000097b0b : ret 0x8401
0x0000000000053806 : ret 0x8404
0x0000000000021a12 : ret 0x840f
0x0000000000049ab1 : ret 0x841
0x000000000007d648 : ret 0x8441
0x0000000000078af5 : ret 0x8445
0x00000000000cbc63 : ret 0x84e9
0x000000000006cc7f : ret 0x8502
0x00000000000538d5 : ret 0x8504
0x000000000006d67e : ret 0x8508
0x000000000002e1c8 : ret 0x850f
0x00000000000b268e : ret 0x8545
0x0000000000055e61 : ret 0x8548
0x00000000000490df : ret 0x854d
0x00000000000cbc39 : ret 0x8589
0x0000000000050ba3 : ret 0x858b
0x00000000000f970d : ret 0x85a
0x00000000000f9507 : ret 0x85c
0x000000000004b9ee : ret 0x860f
0x0000000000036e52 : ret 0x870f
0x0000000000173a7e : ret 0x871e
0x000000000008bf45 : ret 0x876
0x000000000010938c : ret 0x87e
0x00000000000c0f43 : ret 0x87e8
0x00000000000227b5 : ret 0x8801
0x0000000000098192 : ret 0x8802
0x00000000000c7202 : ret 0x8804
0x00000000000c8cad : ret 0x880f
0x00000000000b0e9f : ret 0x8840
0x000000000011a505 : ret 0x8841
0x000000000012594e : ret 0x8844
0x00000000000ea659 : ret 0x8845
0x0000000000002594 : ret 0x88ad
0x000000000002db3d : ret 0x8901
0x000000000004bfe5 : ret 0x8908
0x000000000004c055 : ret 0x8910
0x00000000000ae947 : ret 0x8941
0x0000000000037456 : ret 0x8944
0x0000000000021328 : ret 0x8948
0x0000000000021770 : ret 0x8949
0x000000000001f80f : ret 0x894c
0x000000000007d593 : ret 0x894d
0x00000000000391cb : ret 0x894e
0x000000000003d44d : ret 0x8966
0x0000000000103cce : ret 0x89eb
0x000000000008baaa : ret 0x8a04
0x0000000000002537 : ret 0x8a4c
0x00000000000a3a10 : ret 0x8aeb
0x0000000000025c87 : ret 0x8b01
0x00000000001062cb : ret 0x8b02
0x00000000000a365f : ret 0x8b04
0x000000000002f8be : ret 0x8b05
0x00000000001028ce : ret 0x8b28
0x00000000001762ae : ret 0x8b36
0x000000000002e972 : ret 0x8b41
0x000000000004b7f1 : ret 0x8b44
0x0000000000094ce3 : ret 0x8b46
0x00000000000d2638 : ret 0x8b47
0x0000000000022a59 : ret 0x8b48
0x000000000002112c : ret 0x8b49
0x000000000003914e : ret 0x8b4a
0x0000000000031c55 : ret 0x8b4c
0x000000000006eb28 : ret 0x8b64
0x00000000000e346e : ret 0x8c0f
0x000000000000376e : ret 0x8cba
0x00000000000c7448 : ret 0x8d01
0x000000000005e667 : ret 0x8d04
0x0000000000050f8a : ret 0x8d0f
0x00000000000b9172 : ret 0x8d41
0x00000000000b8fd1 : ret 0x8d44
0x00000000000cf449 : ret 0x8d47
0x0000000000021e08 : ret 0x8d48
0x0000000000031c6e : ret 0x8d49
0x000000000005eb5f : ret 0x8d4a
0x00000000000ae401 : ret 0x8d4b
0x0000000000024c9b : ret 0x8d4c
0x0000000000051fb5 : ret 0x8d4d
0x000000000005f7e2 : ret 0x8d89
0x00000000000e8f2d : ret 0x8de9
0x0000000000027336 : ret 0x8e0f
0x0000000000061a5c : ret 0x8f0f
0x00000000000f262d : ret 0x8feb
0x00000000000450ed : ret 0x9066
0x000000000002f8ad : ret 0x90c3
0x00000000000dc0f9 : ret 0x91e8
0x000000000013284f : ret 0x9274
0x000000000005ba18 : ret 0x92e8
0x000000000005c3a5 : ret 0x92e9
0x00000000000e35d7 : ret 0x930f
0x00000000000b23d5 : ret 0x93ba
0x000000000008520e : ret 0x93be
0x00000000000b0f7f : ret 0x943a
0x00000000000e35e1 : ret 0x944
0x00000000000437b6 : ret 0x948
0x000000000008a988 : ret 0x94c
0x00000000000578bb : ret 0x9529
0x0000000000021879 : ret 0x9539
0x0000000000032376 : ret 0x953d
0x00000000001750d3 : ret 0x9576
0x00000000001127d2 : ret 0x9588
0x0000000000078793 : ret 0x95eb
0x000000000010c999 : ret 0x96eb
0x00000000000cb651 : ret 0x970f
0x0000000000003750 : ret 0x975
0x00000000000eb833 : ret 0x97e8
0x00000000000c4613 : ret 0x97e9
0x00000000000f9b6b : ret 0x9848
0x0000000000086cf5 : ret 0x9874
0x000000000005d876 : ret 0x98e9
0x00000000000c4883 : ret 0x9aeb
0x00000000000ebc3f : ret 0x9be
0x0000000000032d8d : ret 0x9be9
0x000000000009d640 : ret 0x9d72
0x00000000000565d6 : ret 0x9d8b
0x00000000000b0d42 : ret 0x9e0f
0x00000000000f0a0f : ret 0x9e75
0x000000000005d86e : ret 0xa0e9
0x00000000000cb729 : ret 0xa1e8
0x0000000000077552 : ret 0xa1eb
0x0000000000067c66 : ret 0xa4e8
0x0000000000174dc3 : ret 0xa514
0x0000000000070b5a : ret 0xa6
0x00000000000a55a7 : ret 0xa6eb
0x0000000000041cea : ret 0xa77
0x0000000000080cd3 : ret 0xa7e
0x000000000013451e : ret 0xa802
0x00000000000513f5 : ret 0xa9e9
0x0000000000031cd0 : ret 0xaae8
0x000000000003ddc4 : ret 0xaba
0x0000000000175247 : ret 0xac65
0x0000000000175c04 : ret 0xacfc
0x00000000000c23b4 : ret 0xb
0x00000000000fab19 : ret 0xb1e8
0x00000000001ab941 : ret 0xb3
0x00000000000801d4 : ret 0xb48b
0x00000000000782ee : ret 0xb4eb
0x0000000000071d1b : ret 0xb5eb
0x0000000000029657 : ret 0xb60f
0x00000000000f9378 : ret 0xb6e9
0x00000000000778b3 : ret 0xb6eb
0x0000000000029a05 : ret 0xb70f
0x0000000000037cfe : ret 0xb74
0x000000000007da71 : ret 0xb76
0x0000000000022202 : ret 0xb8
0x000000000012e41c : ret 0xb804
0x00000000000360c1 : ret 0xb848
0x0000000000047365 : ret 0xb87f
0x00000000000d437a : ret 0xb880
0x00000000000b3fc2 : ret 0xb8e9
0x0000000000070b5f : ret 0xb8eb
0x00000000000be2d3 : ret 0xb9
0x000000000004fdde : ret 0xb941
0x000000000017510e : ret 0xb9b9
0x00000000000ebd3f : ret 0xb9eb
0x0000000000075793 : ret 0xba74
0x00000000000bf681 : ret 0xbae9
0x000000000011d141 : ret 0xbb74
0x00000000000715ca : ret 0xbbeb
0x0000000000078144 : ret 0xbceb
0x0000000000002464 : ret 0xbd07
0x000000000005fc4c : ret 0xbd83
0x000000000005220a : ret 0xbe07
0x00000000000b8afd : ret 0xbe41
0x0000000000174e64 : ret 0xbe57
0x00000000000da38f : ret 0xbe8
0x0000000000071baf : ret 0xbfeb
0x000000000003e7ea : ret 0xc
0x000000000004ca83 : ret 0xc0
0x0000000000088329 : ret 0xc000
0x000000000011b4e1 : ret 0xc001
0x00000000000d65d8 : ret 0xc030
0x0000000000020341 : ret 0xc031
0x0000000000047822 : ret 0xc083
0x000000000004f539 : ret 0xc085
0x00000000000bdddb : ret 0xc0b
0x0000000000029187 : ret 0xc101
0x000000000002243d : ret 0xc141
0x00000000000361f7 : ret 0xc148
0x000000000011f107 : ret 0xc166
0x00000000000371c3 : ret 0xc189
0x000000000002cfe5 : ret 0xc1e9
0x00000000000db0a3 : ret 0xc209
0x000000000003ccda : ret 0xc229
0x000000000003ce88 : ret 0xc269
0x00000000000e42ab : ret 0xc283
0x00000000001614c4 : ret 0xc2b2
0x00000000000dc6e0 : ret 0xc339
0x000000000004882b : ret 0xc35b
0x00000000000f9c33 : ret 0xc383
0x0000000000133229 : ret 0xc389
0x00000000001020ab : ret 0xc3f3
0x0000000000172d02 : ret 0xc4c3
0x0000000000174a18 : ret 0xc4ff
0x00000000000227d5 : ret 0xc601
0x0000000000036c57 : ret 0xc748
0x0000000000130db4 : ret 0xc749
0x00000000000a1fe1 : ret 0xc75
0x0000000000080438 : ret 0xc789
0x00000000000d22f3 : ret 0xc7e8
0x00000000000af60d : ret 0xc7e9
0x0000000000042dbe : ret 0xc801
0x000000000008c4f9 : ret 0xc88
0x000000000007b520 : ret 0xc883
0x000000000002a771 : ret 0xc889
0x00000000000c87f1 : ret 0xc8d
0x00000000000e4b75 : ret 0xc8e9
0x00000000000d7884 : ret 0xc931
0x0000000000136851 : ret 0xc984
0x00000000001127cb : ret 0xc985
0x00000000000f7cc1 : ret 0xc9e8
0x00000000000a5584 : ret 0xc9eb
0x0000000000086d66 : ret 0xc9ff
0x000000000013cf0c : ret 0xca39
0x0000000000037459 : ret 0xca81
0x00000000000cbc27 : ret 0xca83
0x00000000000f9fe9 : ret 0xcad9
0x00000000000848e4 : ret 0xcb8
0x000000000001f6ac : ret 0xcbeb
0x00000000000f03a8 : ret 0xcc80
0x00000000001744aa : ret 0xcca7
0x000000000017658d : ret 0xcd11
0x000000000009d610 : ret 0xcd72
0x00000000000339c1 : ret 0xce80
0x000000000001f842 : ret 0xce89
0x00000000000a5d09 : ret 0xceb
0x000000000004f666 : ret 0xcee9
0x000000000012f4ea : ret 0xcf89
0x00000000000f3a3e : ret 0xcfeb
0x00000000000a6a9e : ret 0xd
0x00000000000c2492 : ret 0xd029
0x000000000007d3fd : ret 0xd075
0x0000000000036553 : ret 0xd089
0x00000000000cfb41 : ret 0xd101
0x00000000001126fc : ret 0xd120
0x00000000000b0cd5 : ret 0xd138
0x000000000005b994 : ret 0xd189
0x00000000000fbdf9 : ret 0xd1e8
0x00000000000356c0 : ret 0xd231
0x00000000000b7214 : ret 0xd269
0x0000000000032a2d : ret 0xd284
0x00000000000dbf8c : ret 0xd285
0x000000000003e480 : ret 0xd349
0x000000000000089a : ret 0xd5a4
0x00000000000cd59a : ret 0xd5e9
0x00000000000d7812 : ret 0xd675
0x000000000010b328 : ret 0xd72
0x00000000000f7fd6 : ret 0xd74
0x00000000000f1146 : ret 0xd77
0x00000000000fb1f3 : ret 0xd7e8
0x00000000000486a0 : ret 0xd7e9
0x00000000000fcf05 : ret 0xd889
0x0000000000176025 : ret 0xd8f
0x0000000000113c64 : ret 0xd975
0x00000000000d23f8 : ret 0xda29
0x0000000000108313 : ret 0xda75
0x00000000000d9607 : ret 0xda7f
0x000000000003677d : ret 0xdaf7
0x00000000000bc55b : ret 0xdb31
0x00000000000a574a : ret 0xdb5
0x00000000001243c2 : ret 0xdb78
0x00000000000cae25 : ret 0xdb84
0x00000000000af9c0 : ret 0xdc00
0x0000000000176106 : ret 0xdcd9
0x000000000005d92e : ret 0xdce8
0x00000000000d8f52 : ret 0xdd7f
0x0000000000175082 : ret 0xde5d
0x000000000004764d : ret 0xde8
0x0000000000173e11 : ret 0xde9e
0x000000000002c29a : ret 0xdf89
0x00000000000881e9 : ret 0xe000
0x0000000000162539 : ret 0xe074
0x000000000003e3c5 : ret 0xe083
0x00000000000ed79b : ret 0xe0e9
0x000000000012135a : ret 0xe0ff
0x0000000000055fb6 : ret 0xe181
0x000000000005ff39 : ret 0xe183
0x0000000000076a55 : ret 0xe274
0x0000000000028550 : ret 0xe281
0x00000000000289fe : ret 0xe283
0x00000000000e2ea5 : ret 0xe2c1
0x0000000000022af2 : ret 0xe2ff
0x0000000000058868 : ret 0xe3e9
0x00000000000bd895 : ret 0xe6e9
0x0000000000176226 : ret 0xe71f
0x00000000000222f1 : ret 0xe783
0x00000000000c0ee3 : ret 0xe7e8
0x000000000006f862 : ret 0xe8
0x00000000000ef9c1 : ret 0xe801
0x00000000000aea75 : ret 0xe877
0x00000000000e7787 : ret 0xe883
0x0000000000021b64 : ret 0xe8c1
0x000000000002292b : ret 0xe901
0x000000000006cd6c : ret 0xe902
0x000000000006775b : ret 0xe908
0x00000000001396d6 : ret 0xe910
0x0000000000174587 : ret 0xe970
0x00000000000a561c : ret 0xe974
0x000000000004abee : ret 0xe9c0
0x00000000000b0d45 : ret 0xe9c1
0x000000000003c65c : ret 0xea76
0x00000000000a1b4a : ret 0xea81
0x000000000012f47f : ret 0xea83
0x000000000005ff32 : ret 0xeac0
0x0000000000021a09 : ret 0xeac1
0x00000000000428e3 : ret 0xeae9
0x00000000000b73a0 : ret 0xeaf7
0x00000000000d75a4 : ret 0xeb01
0x000000000006cc20 : ret 0xeb02
0x000000000001fc23 : ret 0xeb04
0x0000000000057e8e : ret 0xeb08
0x0000000000137716 : ret 0xeb10
0x00000000000beca2 : ret 0xeb11
0x000000000003d8e2 : ret 0xeb75
0x0000000000176d38 : ret 0xec2
0x00000000000d96bf : ret 0xec77
0x00000000001301d9 : ret 0xec7c
0x00000000000d83b2 : ret 0xece9
0x00000000000ad358 : ret 0xed77
0x000000000006cb34 : ret 0xee83
0x000000000007fc0c : ret 0xee9
0x00000000000e4d25 : ret 0xeeeb
0x00000000001769da : ret 0xef32
0x000000000006c96e : ret 0xef83
0x00000000000222e5 : ret 0xefc1
0x0000000000189f88 : ret 0xefca
0x0000000000081952 : ret 0xf
0x00000000000880a9 : ret 0xf000
0x000000000003108f : ret 0xf01
0x000000000007c1d3 : ret 0xf02
0x000000000005baf0 : ret 0xf039
0x000000000006d585 : ret 0xf04
0x0000000000098173 : ret 0xf077
0x0000000000093049 : ret 0xf0e9
0x0000000000100691 : ret 0xf0eb
0x0000000000087242 : ret 0xf10
0x00000000001a08c6 : ret 0xf174
0x00000000001a113e : ret 0xf17d
0x00000000000971cc : ret 0xf188
0x00000000000770d0 : ret 0xf189
0x00000000000faed9 : ret 0xf1e8
0x0000000000097b25 : ret 0xf1eb
0x0000000000098474 : ret 0xf20
0x00000000000daf99 : ret 0xf2e9
0x000000000003a4b3 : ret 0xf301
0x00000000000376dc : ret 0xf304
0x0000000000102b5a : ret 0xf375
0x0000000000114978 : ret 0xf3c3
0x00000000000e1d9a : ret 0xf3d6
0x000000000004f737 : ret 0xf3f
0x000000000012e9ea : ret 0xf3fe
0x000000000006ee73 : ret 0xf40
0x000000000002c519 : ret 0xf41
0x000000000005a238 : ret 0xf44
0x00000000000263cf : ret 0xf48
0x00000000000509d1 : ret 0xf4a
0x00000000001a9d2e : ret 0xf4ec
0x00000000001ab29e : ret 0xf559
0x00000000001ab916 : ret 0xf55b
0x000000000017a5e0 : ret 0xf5a3
0x00000000000e528d : ret 0xf601
0x00000000001ad8f8 : ret 0xf619
0x00000000000bd48f : ret 0xf631
0x0000000000025112 : ret 0xf641
0x000000000003650b : ret 0xf66
0x00000000000a16f6 : ret 0xf685
0x00000000000cecfa : ret 0xf6e7
0x00000000000b23ec : ret 0xf741
0x000000000003db5f : ret 0xf748
0x00000000000b19bc : ret 0xf749
0x00000000000ec0d3 : ret 0xf7e8
0x00000000000d1b7c : ret 0xf7e9
0x0000000000087f69 : ret 0xf800
0x00000000000aec2a : ret 0xf80f
0x0000000000173cf0 : ret 0xf869
0x00000000000a4604 : ret 0xf883
0x0000000000032c41 : ret 0xf889
0x000000000009287a : ret 0xf8cb
0x000000000009173a : ret 0xf909
0x000000000010c2ea : ret 0xf97c
0x00000000000e240a : ret 0xf980
0x00000000000a620e : ret 0xf983
0x0000000000121b6b : ret 0xf9e9
0x00000000000e888a : ret 0xf9fd
0x00000000000e48fa : ret 0xfa41
0x000000000008870d : ret 0xfa80
0x0000000000042437 : ret 0xfa81
0x00000000000760aa : ret 0xfa93
0x000000000004f6d4 : ret 0xfac1
0x0000000000057451 : ret 0xfae9
0x0000000000087e29 : ret 0xfc00
0x00000000000f3dd1 : ret 0xfc07
0x0000000000088ba9 : ret 0xfc3
0x00000000000c3afa : ret 0xfc4f
0x0000000000187114 : ret 0xfc61
0x0000000000187600 : ret 0xfc89
0x0000000000187af0 : ret 0xfcaa
0x0000000000187af8 : ret 0xfcb0
0x00000000000503aa : ret 0xfcf0
0x00000000000d0d68 : ret 0xfd83
0x0000000000031061 : ret 0xfdf
0x0000000000087ce9 : ret 0xfe00
0x00000000000bbd0a : ret 0xfe60
0x00000000000a7e7b : ret 0xfe9
0x00000000000a84e5 : ret 0xfeb
0x0000000000036789 : ret 0xfeb8
0x00000000000c2ffa : ret 0xfef1
0x0000000000087ba9 : ret 0xff00
0x000000000014c7e1 : ret 0xff2
0x0000000000114c4a : ret 0xff2e
0x0000000000097e3a : ret 0xff3
0x0000000000048f89 : ret 0xff31
0x00000000000968ae : ret 0xff41
0x0000000000086ca4 : ret 0xff48
0x000000000001f935 : ret 0xff49
0x0000000000087a69 : ret 0xff80
0x000000000011a1f6 : ret 0xff81
0x00000000000cef73 : ret 0xff83
0x00000000000252aa : ret 0xffa1
0x00000000000c55ca : ret 0xffa9
0x000000000005a77c : ret 0xffb7
0x0000000000048821 : ret 0xffb8
0x0000000000043b48 : ret 0xffbf
0x0000000000087929 : ret 0xffc0
0x00000000000a6f0e : ret 0xffc1
0x00000000000230aa : ret 0xffc3
0x0000000000057492 : ret 0xffd8
0x00000000001294fa : ret 0xffd9
0x000000000008135a : ret 0xffdb
0x00000000000668aa : ret 0xffdc
0x00000000000877e9 : ret 0xffe0
0x0000000000045f5a : ret 0xffe1
0x00000000000e24e8 : ret 0xffe9
0x0000000000060b51 : ret 0xffec
0x0000000000197ec1 : ret 0xffed
0x0000000000133162 : ret 0xffee
0x000000000003d7ac : ret 0xffef
0x000000000003f902 : ret 0xfff0
0x000000000004464a : ret 0xfff1
0x0000000000051810 : ret 0xfff2
0x00000000000b7fb3 : ret 0xfff3
0x00000000000e3909 : ret 0xfff4
0x0000000000061975 : ret 0xfff5
0x0000000000105fd3 : ret 0xfff6
0x000000000004214a : ret 0xfff7
0x000000000005094d : ret 0xfff8
0x00000000000cdf87 : ret 0xfff9
0x0000000000030f2b : ret 0xfffa
0x000000000006317e : ret 0xfffb
0x000000000004db6a : ret 0xfffc
0x000000000008b3fa : ret 0xfffd
0x0000000000027f2e : ret 0xfffe
0x00000000000c259a : ret 0xffff
0x0000000000000e20 : ret 1
0x0000000000001010 : ret 2
0x0000000000004901 : ret 3
0x000000000008c009 : ret 4
0x0000000000032ee0 : ret 5
0x00000000000690cb : ret 6
0x00000000000018ec : ret 7
0x000000000008c025 : ret 8
0x00000000000dfbce : ret 9
0x000000000019373c : retf -0x1462 ; jmp qword ptr [rdx]
0x000000000001f6a7 : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f67f
0x000000000018772c : retf -0x37c ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x000000000008ff8f : retf -0x7af1 ; call qword ptr [rsi]
0x0000000000186c85 : retf -5 ; ror bl, 1 ; sti ; jmp qword ptr [rax]
0x00000000001ab085 : retf 1 ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x00000000001ab165 : retf ; add dword ptr [rax], eax ; pop rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001ac1ac : retf ; cmc ; jmp qword ptr [rdx]
0x0000000000179c61 : retf ; hlt ; inc dword ptr [rbx + rcx*8 - 0xc] ; jmp rsp
0x0000000000179c0d : retf ; hlt ; inc dword ptr [rsp + rcx*8 - 0xc] ; jmp rsp
0x0000000000179c65 : retf ; hlt ; jmp rsp
0x000000000018d899 : retf ; stc ; call rsp
0x0000000000186c89 : retf ; sti ; jmp qword ptr [rax]
0x0000000000186c34 : rol ah, 1 ; sti ; jmp qword ptr [rax]
0x00000000000a13d5 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000009706d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a3d4d : rol bl, 0x90 ; mov eax, 1 ; ret
0x000000000007531c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008c09d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000887ce : rol bl, 1 ; xor edx, edx ; mov eax, edx ; ret
0x00000000000487f7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000097e12 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000088dc2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000171bc0 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000c640c : rol byte ptr [rax - 0x6bf0a207], cl ; ret 0x8d48
0x00000000000a391d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000010bf66 : rol byte ptr [rax*4 + 0x753089f6], 0xea ; ret
0x000000000007878d : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x3e], al ; jmp 0x78731
0x00000000001603ed : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000188ef5 : rol byte ptr [rax], 0 ; mov ah, 0x53 ; in eax, dx ; jmp rsp
0x000000000005e25c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000120563 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000f7715 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1617 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036e60 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000ba1f4 : rol byte ptr [rbp + 0x31], cl ; fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000fa082 : rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xfa093
0x0000000000093a32 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000088de9 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000037a29 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x00000000000201c1 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x8341
0x00000000000f58b0 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000178680 : rol byte ptr [rbp - 0x790f0004], 1 ; cld ; call qword ptr [rax]
0x00000000000c7597 : rol byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8944
0x00000000000578b5 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005c95f : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000000cc82d : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x00000000000cd302 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000cd593 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000116b79 : rol byte ptr [rbx + rbx*2], 1 ; ret
0x0000000000070767 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000a4b46 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0xa4b49 ; ret
0x00000000000385cb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000010ac69 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00000000000fda24 : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000002fee1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000c6204 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000027eac : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000000345ab : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000000a3012 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000001141cd : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001211a5 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000f6512 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000b7a3b : rol byte ptr [rcx + 0x29], 1 ; ret
0x000000000004b96e : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000005e081 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000070341 : rol byte ptr [rcx + 0x5c], cl ; jmp rax
0x000000000009426d : rol byte ptr [rcx + 0x5e], 1 ; ret
0x00000000000a1b41 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000801b8 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000000201c3 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8341
0x00000000000d3c3e : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x840f
0x00000000000c759a : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8944
0x000000000008876d : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000b23e8 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x00000000000ae3c8 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret
0x0000000000095660 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000000d4075 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x697e
0x00000000000bb548 : rol byte ptr [rcx + rbp - 0x16], 0xf ; ret 0x144
0x00000000000ba4e3 : rol byte ptr [rcx + rbp - 0x1e], 0xf ; ret 0x144
0x0000000000103e8a : rol byte ptr [rcx + rbp - 0x38], 1 ; ret
0x000000000002bc59 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000dae4e : rol byte ptr [rcx - 0x77], 1 ; ret
0x000000000012293b : rol byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x000000000009636e : rol byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000b742a : rol byte ptr [rcx - 0x7d], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x00000000000a2ff2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e3879 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000047362 : rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000dc6da : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc339
0x000000000003827a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38279 ; xor eax, eax ; ret
0x000000000003835a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38359 ; xor eax, eax ; ret
0x00000000000d3dc7 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000a19a7 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000002d242 : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000106419 : rol byte ptr [rcx], 0x89 ; ret 0x8948
0x0000000000101aa2 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000374b5 : rol byte ptr [rcx], 0xf7 ; ret 0
0x000000000018b61d : rol byte ptr [rcx], 1 ; add byte ptr [rsp + rsi - 0xa], al ; jmp rsp
0x00000000000cb88c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000187554 : rol byte ptr [rdi - 0x78af0004], 0xfc ; jmp rax
0x000000000017876c : rol byte ptr [rdi - 0xe], 0xff ; rol byte ptr [rdi - 0xe], 1 ; jmp rax
0x0000000000178770 : rol byte ptr [rdi - 0xe], 1 ; jmp rax
0x00000000000a3052 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d99ae : rol byte ptr [rdx + 0x39], 0x34 ; xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x0000000000196cde : rol byte ptr [rdx + 0xd1cffed], 1 ; or al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a3002 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000018dc45 : rol byte ptr [rdx], 0 ; xor al, 0x3d ; cli ; call rsp
0x00000000000235b3 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x00000000000c1e46 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000fa475 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001b7140 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000000b4466 : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000001a0470 : rol byte ptr [rsi - 0xf], 1 ; call qword ptr [rdx]
0x00000000000a3042 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001b52c0 : rol byte ptr [rsi], 1 ; sti ; jmp qword ptr [rdx]
0x0000000000172d00 : rol cl, 0xc2 ; ret
0x00000000000376d7 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000012a2b8 : rol cl, 1 ; call 0xffffffff80d599d4
0x000000000012a482 : rol cl, 1 ; call 0xffffffff80d59b9e
0x000000000012a52f : rol cl, 1 ; call 0xffffffff80d59c4b
0x00000000000b22e6 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x00000000000b24db : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000046ddf : rol cl, 1 ; loopne 0x46e08 ; or eax, esi ; ret
0x00000000001111c1 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000a2f9c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000e1ee1 : rol dword ptr [rax], 0 ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000000000d4227 : rol dword ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000019a7a5 : rol dword ptr [rax], 0 ; js 0x19a7d2 ; out dx, al ; jmp qword ptr [rax]
0x0000000000097067 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000005ff2b : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x00000000000e35dd : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x944
0x0000000000034632 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000018b3b5 : rol dword ptr [rcx], 0 ; cmp r14d, ebp ; call rsp
0x00000000000d780f : rol dword ptr [rcx], 0x39 ; ret 0xd675
0x0000000000035ad5 : rol dword ptr [rcx], 0x3c ; pop rdi ; je 0x35af2 ; jmp 0x35aa6
0x000000000010bec8 : rol dword ptr [rcx], 0x45 ; test eax, eax ; jne 0x10bec0 ; ret
0x0000000000097637 : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x97639 ; ret
0x0000000000049c1a : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000001ab7f5 : rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], ch ; cmc ; jmp rbx
0x00000000001ab7dd : rol dword ptr [rcx], 1 ; add byte ptr [rax - 0x1d], dh ; cmc ; call qword ptr [rax]
0x00000000001ab9f5 : rol dword ptr [rcx], cl ; add al, bh ; in eax, -0xb ; call qword ptr [rax]
0x00000000001aba25 : rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001aba0d : rol dword ptr [rcx], cl ; add al, dh ; in eax, -0xb ; call qword ptr [rax]
0x000000000009f029 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000000dad0e : rol dword ptr [rdx + 0x39], 0x2c ; mov dr1, word ptr [rbx + rbp*8 + 0x39] ; ret 0xc789
0x0000000000118076 : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000037885 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000037884 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000186c40 : ror al, 0xfb ; call qword ptr [rax]
0x000000000010c642 : ror ax, 8 ; ret
0x0000000000186c94 : ror bh, 0xfb ; call qword ptr [rax]
0x0000000000186c88 : ror bl, 1 ; sti ; jmp qword ptr [rax]
0x000000000003bad8 : ror byte ptr [r15], 0x84 ; ret 1
0x00000000000376a4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000037886 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000361a2 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x000000000008bf12 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8bf59 ; add rax, rdi ; ret
0x0000000000088c6f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000009844e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000fbcf5 : ror byte ptr [rax + 0x39], 0xca ; cmovae rax, rsi ; ret
0x00000000000f1232 : ror byte ptr [rax + 0x39], 0xd6 ; ja 0xf1247 ; ret
0x0000000000107b48 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000cb88e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000003950f : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x0000000000039027 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000b0d3f : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000002611a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000097b8b : ror byte ptr [rax + 0x48c07503], 0x83 ; ret
0x0000000000108c8a : ror byte ptr [rax + 0x48e97507], 0x89 ; clc ; ret
0x00000000000c7d66 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000b4d7a : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000046f75 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000f7a8e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000000fa084 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x00000000000a3fc4 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x00000000000f9ae2 : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011d378 : ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000971b3 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x000000000009390c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008a819 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000118043 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000a5619 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000088c6c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000054edf : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004bfdc : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004c04c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000003c97a : ror byte ptr [rax + 9], 0xd0 ; ret
0x000000000008c095 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0375 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc2344cc3
0x00000000000b5232 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000b0593 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c27e0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008bed2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008bf02 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000970a2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008bef2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000010ae1c : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x000000000007bb9a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000096ce9 : ror byte ptr [rax - 0x77], 0xa ; ret
0x00000000001217e9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12178b ; xor eax, eax ; pop rbx ; ret
0x0000000000124758 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x000000000010aca2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000003cdd8 : ror byte ptr [rax - 0x77], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000010adb6 : ror byte ptr [rax - 0x77], 1 ; adc eax, 0x2b7a02 ; pop rbp ; ret
0x00000000000858cc : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000050def : ror byte ptr [rax - 0x77], 1 ; ret 0x38e8
0x000000000003d44a : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000793a5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b3f75 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000035429 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000001278c6 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000116cce : ror byte ptr [rax - 0x77], 5 ; pop rdx ; ret
0x000000000011f456 : ror byte ptr [rax - 0x77], 5 ; ret 0x2a42
0x0000000000070764 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000f4c4e : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdx + rax + 0x5b], dh ; ret
0x000000000003cef4 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000075bbf : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ecf40 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003c2ed : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000046664 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001361bd : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000129a78 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; ret
0x00000000001369b1 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000000518c9 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e947 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001138a3 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000097102 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000970e2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000970c2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000c0a4e : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000812e6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2915b05
0x000000000012e8fc : ror byte ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x00000000000230a4 : ror byte ptr [rax - 0x7d], 1 ; jmp 0x230e7
0x00000000000230a4 : ror byte ptr [rax - 0x7d], 1 ; jmp 0x230e8
0x000000000003f5d6 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000003c3c0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000050aef : ror byte ptr [rax - 0x7d], 1 ; ret 0x4803
0x000000000010c7dd : ror byte ptr [rax - 0x7d], 1 ; ret 0xf01
0x0000000000071a28 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000eb6e3 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0xeb6e5 ; ret 0x4840
0x0000000000047df0 : ror byte ptr [rax - 0x7d], cl ; ret
0x000000000002965a : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000028567 : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000009d636 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001787a8 : ror byte ptr [rax - 0xe], 0xff ; ror byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000001787ac : ror byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000000739aa : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6f52 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000001180c1 : ror byte ptr [rax], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000019fd20 : ror byte ptr [rax], 1 ; int1 ; jmp rcx
0x000000000008ab74 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000094fde : ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000066738 : ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x0000000000197b36 : ror byte ptr [rbp + rbp*8 + 0x20d1cff], 1 ; mov ebp, gs ; jmp qword ptr [rdx]
0x000000000004740d : ror byte ptr [rbp - 0x75], 1 ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000048fb4 : ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000a5574 : ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x0000000000131467 : ror byte ptr [rbx + 0x453b0840], cl ; or byte ptr [rdi], 0x94 ; ret 0xea83
0x00000000001a7710 : ror byte ptr [rbx], 0xf5 ; jmp qword ptr [rcx]
0x00000000000c257a : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xc2554 ; ret
0x00000000000c784b : ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc7872
0x00000000000f14f2 : ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret 0x820f
0x0000000000088def : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000eb2ef : ror byte ptr [rcx + 0x39], 1 ; ret 0x1b75
0x00000000000a3987 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000001adf36 : ror byte ptr [rcx + 0xd1cfff5], 0xe9 ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000012293e : ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x00000000000367c4 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007b52f : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036afe : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000117864 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x0000000000123d71 : ror byte ptr [rcx - 0x77], 0 ; mov eax, 1 ; ret
0x00000000000b095c : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000092290 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009d21f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000955d7 : ror byte ptr [rcx - 0x7d], 1 ; ret 0xe901
0x00000000000c100f : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000a3920 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000b01d0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000fa5fc : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008c889 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000001787f0 : ror byte ptr [rdi - 0xe], 1 ; push rax ; call qword ptr [rax]
0x000000000007d72c : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x0000000000048eb4 : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000094411 : ror byte ptr [rdi], 0x84 ; add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000003bae6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000ddf62 : ror byte ptr [rdi], 0x84 ; ret 0
0x000000000003bad9 : ror byte ptr [rdi], 0x84 ; ret 1
0x000000000015742a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000000953f3 : ror byte ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009702c : ror byte ptr [rdi], 0x85 ; jge 0x9703a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009be81 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000009a496 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000987c7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000d6ad1 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000000e2848 : ror byte ptr [rdi], 0x85 ; ret 8
0x00000000000add2a : ror byte ptr [rdi], 0x85 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001320d7 : ror byte ptr [rdi], 0x88 ; ret 0
0x000000000006f9cf : ror byte ptr [rdi], 0x88 ; ret 1
0x000000000013081f : ror byte ptr [rdi], 0x89 ; ret
0x00000000000c248f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000012971f : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000b0e9c : ror byte ptr [rdi], 0x94 ; ret 0x8840
0x0000000000021e05 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000b0f7c : ror byte ptr [rdi], 0x94 ; ret 0x943a
0x000000000013ceae : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000005b991 : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x000000000001f892 : ror byte ptr [rdi], 0x95 ; ret
0x0000000000076f91 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x0000000000122a7d : ror byte ptr [rdi], 0x95 ; ret 0x8348
0x0000000000121c82 : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x0000000000076ef6 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x000000000006df55 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000a4601 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x00000000000578b8 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000000c27dd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000005dc3b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cb91f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ed53a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000003543e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x35428 ; ret
0x00000000000d77dd : ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000ddf0e : ror byte ptr [rdi], 1 ; ret 0x8944
0x00000000000dc6dd : ror byte ptr [rdi], 1 ; ret 0xc339
0x00000000000b24e1 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000000b239e : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000049aae : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x000000000005c962 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000009714d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000f8140 : ror byte ptr [rdi], cl ; ret 0x66c3
0x00000000000f9b68 : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000048828 : ror byte ptr [rdi], cl ; ret 0xc35b
0x00000000000daf96 : ror byte ptr [rdi], cl ; ret 0xf2e9
0x00000000000ff98f : ror byte ptr [rdi], cl ; test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ffa5f : ror byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e633e : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b1059 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000db0a0 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc209
0x00000000000b0cd2 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x0000000000085cad : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001901e4 : ror byte ptr [rdx + rbp*8], cl ; jmp qword ptr [rdx]
0x00000000001a0e40 : ror dl, 0xf1 ; jmp qword ptr [rax]
0x00000000000cb859 : ror dword ptr [r8 + 0x39], -0xd ; ja 0xcb7f9 ; pop rbx ; pop rbp ; ret
0x00000000000cb85a : ror dword ptr [rax + 0x39], -0xd ; ja 0xcb7f8 ; pop rbx ; pop rbp ; ret
0x000000000012ed7d : ror dword ptr [rax + 0x4800154c], -0x7d ; ret 0x4101
0x00000000000c1fb1 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f79ec : ror dword ptr [rax + 0xf], cl ; ret
0x000000000013cff8 : ror dword ptr [rax + 1], -8 ; ret
0x000000000013ceb8 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000003e084 : ror dword ptr [rax + 1], 1 ; ret 0x8b48
0x0000000000131bf2 : ror dword ptr [rax + 1], cl ; ret
0x000000000012afd2 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x0000000000074a0e : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000d4c15 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000f7ffd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002ac9c : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000e2442 : ror dword ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000029a02 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x00000000000c68d4 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000007418d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x74187 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x00000000000397c5 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000057e85 : ror dword ptr [rax], -0x17 ; and ebp, 0x8348ffff ; ret 0xeb08
0x0000000000067752 : ror dword ptr [rax], -0x17 ; ret 0xfff0
0x00000000000d1cd9 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x000000000002652e : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x26503
0x0000000000051fb2 : ror dword ptr [rcx + 1], 1 ; ret 0x8d4d
0x000000000003e905 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000c7d21 : ror dword ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000162537 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000096fc5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003e47d : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x00000000000f03a5 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d2fc9 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000160c58 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161364 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161136 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000162260 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001610b6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001613f4 : ror dword ptr [rdi], -0x7b ; je 0x161404 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160eeb : ror dword ptr [rdi], -0x7b ; jno 0x160f00 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160fb3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160c30 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012f374 : ror dword ptr [rdi], -0x7c ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000013402b : ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x00000000000ed51c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000b25d7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000081ae6 : ror dword ptr [rdi], cl ; xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x00000000000800da : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000010a529 : ror dword ptr [rsi - 0xf], cl ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000010c643 : ror eax, 8 ; ret
0x000000000007418c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x74188 ; ret
0x000000000007af3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x0000000000061e4b : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x0000000000061afc : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x000000000018aebd : sahf ; add dword ptr [rax], eax ; pop rsp ; mov dh, bl ; jmp rsp
0x00000000001aae1c : sahf ; cmc ; jmp qword ptr [rdx]
0x00000000000cac1e : sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x00000000000025c2 : sahf ; jl 0x2557 ; loop 0x25a2 ; ret 0x23cb
0x00000000000025c1 : sahf ; jl 0x2558 ; loop 0x25a3 ; ret 0x23cb
0x000000000019373d : sahf ; jmp 0x193741
0x0000000000195804 : sahf ; jno 0x1957f7 ; jmp qword ptr [rdx]
0x00000000001878ac : sahf ; jp 0x1878b2 ; ljmp ptr [rsi] ; jp 0x1878b6 ; call rsp
0x0000000000186a30 : sahf ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000013de2e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019cd01 : sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000000efbae : sahf ; ret
0x00000000000b7430 : sahf ; ret 0x1fbf
0x00000000001744e5 : sahf ; ret 0x38ae
0x00000000000b0d44 : sahf ; ret 0xe9c1
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000186e0c : sal ah, 0xfb ; call qword ptr [rax]
0x0000000000186e00 : sal al, 1 ; sti ; jmp qword ptr [rax]
0x000000000019ff5d : sal al, cl ; jmp qword ptr [rdx]
0x00000000000b4464 : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000f227d : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129755 : sal bh, 0xd8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000129d34 : sal bh, 0xd8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000101f62 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dc3e : sal bh, 0xd8 ; pop rbx ; ret
0x0000000000022c2a : sal bh, 0xd8 ; ret
0x00000000000a1c96 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000088467 : sal bh, 1 ; ret 0x8000
0x0000000000088327 : sal bh, 1 ; ret 0xc000
0x00000000000881e7 : sal bh, 1 ; ret 0xe000
0x00000000000880a7 : sal bh, 1 ; ret 0xf000
0x0000000000087f67 : sal bh, 1 ; ret 0xf800
0x0000000000087e27 : sal bh, 1 ; ret 0xfc00
0x0000000000087ce7 : sal bh, 1 ; ret 0xfe00
0x0000000000087ba7 : sal bh, 1 ; ret 0xff00
0x0000000000087a67 : sal bh, 1 ; ret 0xff80
0x0000000000087927 : sal bh, 1 ; ret 0xffc0
0x00000000000877e7 : sal bh, 1 ; ret 0xffe0
0x00000000000876a7 : sal bh, 1 ; ret 0xfff0
0x0000000000087567 : sal bh, 1 ; ret 0xfff8
0x0000000000087427 : sal bh, 1 ; ret 0xfffc
0x00000000000872e7 : sal bh, 1 ; ret 0xfffe
0x0000000000186e54 : sal bh, 1 ; sti ; jmp qword ptr [rax]
0x000000000004f2cc : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x00000000001791e9 : sal bl, 0xff ; fcomi st(3) ; call qword ptr [rdx]
0x000000000003862b : sal bl, 1 ; ret
0x00000000000a379f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000e2401 : sal byte ptr [rax + rdi + 0xf], 0xb6 ; xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x00000000001293e5 : sal byte ptr [rax + rsi*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000008bec8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008abf0 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000005d610 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000050323 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000107b57 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000036bc7 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000001216e4 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000108234 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000011f816 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001268a6 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001213e5 : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x00000000000888d1 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000096bd8 : sal byte ptr [rbp + rbp*8 + 0x41], 1 ; cmp eax, ecx ; je 0x96bd1 ; ret
0x0000000000041cef : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000007c685 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000096ac5 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000003827e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000010843e : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000a1540 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000074190 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000096d8a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000010becc : sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x000000000012b9e6 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000096df7 : sal byte ptr [rbp - 0x1a], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096b6a : sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x0000000000097fbb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000c6160 : sal byte ptr [rbp - 0x21], cl ; ret
0x00000000000c6136 : sal byte ptr [rbp - 0x24], cl ; ret
0x0000000000035443 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000a367a : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000010853c : sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x000000000012d5ff : sal byte ptr [rbp - 0x44], 0xeb ; ret 0x1f0f
0x00000000000e4430 : sal byte ptr [rbp - 0x60], cl ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4405
0x00000000000974cb : sal byte ptr [rbp - 0x63], 0x48 ; mov eax, edi ; ret
0x0000000000086c0a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a4b4b : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000108140 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000f3282 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x0000000000088d92 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c04c9 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret
0x00000000000f3a15 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000012ad62 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000031901 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x0000000000186f44 : sal byte ptr [rbx], 1 ; cld ; call rax
0x00000000001202aa : sal byte ptr [rcx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000103532 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000103e07 : sal byte ptr [rcx + rcx - 0x77], cl ; ret 0xeac1
0x000000000012aced : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000107b46 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000186814 : sal byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x000000000002173c : sal byte ptr [rdx + rax*2 - 0xa], cl ; ret 0x7401
0x000000000013cff3 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000088ba3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000098453 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000086e03 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009714b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000177598 : sal byte ptr [rdx - 0x12], 1 ; call qword ptr [rax]
0x0000000000177594 : sal byte ptr [rdx - 0x12], 1 ; call rax
0x00000000001775b0 : sal byte ptr [rdx - 0x12], 1 ; push qword ptr [rax] ; jb 0x1775ac ; call rax
0x0000000000130737 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x00000000001247ba : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1247d8 ; call rax
0x000000000012ba6a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12ba88 ; call rax
0x000000000012c173 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x12c191 ; call rax
0x00000000001277de : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x127854 ; call rax
0x000000000012820e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x128274 ; call rax
0x0000000000088b47 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000186ea8 : sal byte ptr [rsi], 1 ; cld ; call rax
0x0000000000186ea4 : sal byte ptr [rsp + rdi*8], 1 ; call rax
0x00000000001aa8f1 : sal ch, cl ; jmp qword ptr [rsi]
0x000000000018a7b1 : sal cl, 0xff ; lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; ret 0xfff1
0x00000000001a0f01 : sal cl, 1 ; call rsi
0x00000000001a1279 : sal cl, cl ; jmp qword ptr [rbx]
0x00000000000d1ed1 : sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000000fa255 : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x000000000017a9b9 : sal dh, cl ; jmp rax
0x000000000017a9b5 : sal dh, cl ; push qword ptr [rdx] ; sal dh, cl ; jmp rax
0x0000000000096bb5 : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x00000000000b3e62 : sal dword ptr [rax], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000366b1 : sal dword ptr [rbp + 0xc], 0x48 ; add esp, 8 ; ret
0x00000000000363d6 : sal dword ptr [rbp + 7], 0x48 ; add esp, 8 ; ret
0x00000000000a31d8 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; nop ; ret
0x00000000000433f6 : sal dword ptr [rcx + 0x48], 0x39 ; ret
0x0000000000096ce7 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000088a8d : sal dword ptr [rcx], 1 ; ret
0x00000000000376d5 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000007bb98 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000019b464 : sal dword ptr [rdi], -0x12 ; jmp qword ptr [rdx]
0x00000000001aa999 : sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000179121 : sal ebx, 1 ; jmp rax
0x000000000018df85 : salc ; add al, byte ptr [rax] ; mov ah, 0x99 ; cli ; jmp rsp
0x00000000001abc8d : salc ; add dword ptr [rax], eax ; add bh, ah ; cmc ; call qword ptr [rax]
0x00000000000ac512 : salc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000162576 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001abca5 : salc ; add dword ptr [rax], eax ; clc ; out 0xf5, al ; call qword ptr [rax]
0x00000000001abc75 : salc ; add dword ptr [rax], eax ; or bh, ah ; cmc ; call qword ptr [rax]
0x000000000001f6a5 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f681
0x000000000012475b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000142be6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000165311 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007dfa3 : salc ; call qword ptr [rax]
0x00000000001064c9 : salc ; call rax
0x000000000011800f : salc ; ja 0x117ffc ; mov eax, 0xffffffff ; ret
0x00000000000f1235 : salc ; ja 0xf1244 ; ret
0x000000000000389d : salc ; jb 0x391f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000002e2a2 : salc ; jmp r14
0x00000000000829c2 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000754b0 : salc ; mov eax, 0xffffffff ; ja 0x754c9 ; ret
0x00000000000887cc : salc ; mov eax, edx ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000a37b9 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000b26e6 : salc ; out 0x30, eax ; add byte ptr [rcx], ch ; ret 0x428d
0x00000000000e3c85 : salc ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x000000000018e429 : salc ; sti ; call rsp
0x0000000000187a70 : salc ; stosb byte ptr [rdi], al ; cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x0000000000112314 : salc ; sub al, byte ptr [rax] ; ret
0x00000000001a19ac : salc ; xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000019ae34 : sar ah, cl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a47b0 : sar al, 1 ; jmp qword ptr [rdi]
0x0000000000176fc1 : sar bh, 1 ; jmp qword ptr [rdi]
0x000000000004c6a5 : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret 0x31eb
0x0000000000068b1f : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000186e60 : sar bl, 0xfb ; call qword ptr [rax]
0x0000000000186c31 : sar bl, 0xff ; rol ah, 1 ; sti ; jmp qword ptr [rax]
0x00000000000d23c1 : sar byte ptr [rax + 0x25], 0x89 ; ret 0x8b49
0x0000000000135972 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ea61 : sar byte ptr [rax + 1], cl ; jne 0x12ea78 ; ret
0x000000000012eaa1 : sar byte ptr [rax + 1], cl ; jne 0x12eab8 ; ret
0x0000000000083bd7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000000714ec : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000001869e0 : sar byte ptr [rax - 0x44ee0003], 0xfd ; call qword ptr [rcx]
0x00000000000d1ea5 : sar byte ptr [rax], 0xe ; je 0xd1e38 ; pop rbx ; ret
0x000000000019b614 : sar byte ptr [rcx], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000000fa443 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x0000000000002b61 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000f6226 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000c1e1c : sar byte ptr [rsi + 2], 1 ; ret
0x0000000000174e7f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018e509 : sar ch, 1 ; jmp rsp
0x00000000000e4bd3 : sar ch, cl ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000073438 : sar dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x00000000001a23d0 : sar dl, 1 ; int1 ; jmp qword ptr [rcx]
0x00000000001869c0 : sar dword ptr [rax - 0x44ee0003], 1 ; std ; call qword ptr [rcx]
0x00000000001b1286 : sar dword ptr [rsi], cl ; idiv bh ; sbb al, 0xd ; cli ; cmp dh, dh ; jmp qword ptr [rdx]
0x0000000000036791 : sar eax, 0x10 ; ret
0x000000000003645b : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000bf819 : sar eax, 0x1f ; pop rbx ; ret
0x0000000000132e54 : sar eax, 0x1f ; ret
0x000000000003674a : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003609d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003a9d : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000751fc : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000772c0 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000072f7a : sar eax, 2 ; ret
0x00000000000a3a0b : sar eax, 2 ; sub rdx, rax ; jmp 0xa39a2
0x000000000010abdd : sar eax, 6 ; ret
0x0000000000186c61 : sar ebx, cl ; call qword ptr [rax - 0x1f00042c]
0x0000000000174be3 : sar ecx, 1 ; jnp 0x174ba4 ; ret
0x000000000004c809 : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0x1beb
0x000000000003c924 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003c937 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000722d8 : sar edx, 1 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000f6e27 : sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000008c097 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000751fb : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003609c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000072f79 : sar rax, 2 ; ret
0x00000000000a3a0a : sar rax, 2 ; sub rdx, rax ; jmp 0xa39a3
0x000000000010abdc : sar rax, 6 ; ret
0x000000000008c096 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001a24d8 : sbb ah, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000022e8a : sbb ah, byte ptr [rax] ; call rax
0x0000000000179731 : sbb ah, dh ; jmp qword ptr [rdi]
0x000000000019a8a0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000cb759 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001a046c : sbb al, 0x1e ; add dword ptr [rax], eax ; rol byte ptr [rsi - 0xf], 1 ; call qword ptr [rdx]
0x00000000001064ce : sbb al, 0x20 ; je 0x106536 ; xor eax, eax ; pop rbx ; ret
0x00000000001064cd : sbb al, 0x20 ; je 0x106537 ; xor eax, eax ; pop rbx ; ret
0x000000000018a014 : sbb al, 0x30 ; add dword ptr [rax], eax ; ret
0x00000000001a266c : sbb al, 0x40 ; add dword ptr [rax], eax ; loopne 0x1a267d ; jmp rdx
0x0000000000002f64 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001782ac : sbb al, 0x51 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a3a6c : sbb al, 0x54 ; add dword ptr [rax], eax ; loopne 0x1a3aa4 ; jmp rdx
0x0000000000194d1c : sbb al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab68c : sbb al, 0x72 ; add dword ptr [rax], eax ; push rax ; loope 0x1ab68f ; call qword ptr [rcx]
0x00000000001a099c : sbb al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000000f3d13 : sbb al, 0x83 ; ret
0x00000000001a6e6c : sbb al, 0x88 ; add dword ptr [rax], eax ; rcr ch, 1 ; hlt ; call rbx
0x00000000000e2cb8 : sbb al, 0x9a ; add rbx, r10 ; jmp rbx
0x00000000001a826c : sbb al, 0x9c ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000d0ce3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000017c4c4 : sbb al, 0xbd ; cli ; jmp rsp
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001aaa6c : sbb al, 0xc4 ; add dword ptr [rax], eax ; mov al, 0xd3 ; cmc ; jmp qword ptr [rsi]
0x00000000001acc8a : sbb al, 0xd ; adc al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x00000000001a08ca : sbb al, 0xd ; adc al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000001917e2 : sbb al, 0xd ; adc bh, byte ptr [rcx - 0x16] ; jmp qword ptr [rdx]
0x000000000019584a : sbb al, 0xd ; adc dh, byte ptr [rdx - 0x13] ; jmp qword ptr [rdx]
0x000000000019abaa : sbb al, 0xd ; adc dl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b0ba : sbb al, 0xd ; adc dword ptr [rsi], esp ; out dx, al ; jmp qword ptr [rdx]
0x000000000019343a : sbb al, 0xd ; adc eax, dword ptr [rdi - 0x15] ; jmp qword ptr [rdx]
0x0000000000195f42 : sbb al, 0xd ; adc edi, dword ptr [rdx - 0x13] ; jmp qword ptr [rdx]
0x00000000001af472 : sbb al, 0xd ; adc esp, eax ; cmc ; jmp qword ptr [rdx]
0x000000000019c802 : sbb al, 0xd ; add al, 0x59 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000199faa : sbb al, 0xd ; add al, 0xf1 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018eaaa : sbb al, 0xd ; add bl, byte ptr [rax - 0x17] ; jmp qword ptr [rdx]
0x00000000001ac34a : sbb al, 0xd ; add byte ptr [rax - 0xb], ch ; jmp qword ptr [rdx]
0x00000000001a96a2 : sbb al, 0xd ; add cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000001abb0a : sbb al, 0xd ; add dword ptr [rbx - 0xb], ebx ; jmp qword ptr [rdx]
0x0000000000195efa : sbb al, 0xd ; add dword ptr [rdx - 0x13], edi ; jmp qword ptr [rdx]
0x000000000019ad5a : sbb al, 0xd ; add ebp, edi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c892 : sbb al, 0xd ; add ebx, dword ptr [rbx - 0x12] ; jmp qword ptr [rdx]
0x0000000000193a3a : sbb al, 0xd ; add esp, -0x15 ; jmp qword ptr [rdx]
0x00000000001ac52a : sbb al, 0xd ; and al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000001a1e1a : sbb al, 0xd ; and al, 0x90 ; int1 ; jmp qword ptr [rdx]
0x0000000000190582 : sbb al, 0xd ; and byte ptr [rdx + rbp*8], dh ; jmp qword ptr [rdx]
0x000000000019ab1a : sbb al, 0xd ; and dh, bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001953ba : sbb al, 0xd ; and dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x0000000000199c92 : sbb al, 0xd ; and dl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad6fa : sbb al, 0xd ; and dword ptr [rdi - 0xb], edi ; jmp qword ptr [rdx]
0x00000000001993ea : sbb al, 0xd ; and ebx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a924a : sbb al, 0xd ; and esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000001933f2 : sbb al, 0xd ; call 0x23191f44
0x0000000000195fc2 : sbb al, 0xd ; call 0x23194d48
0x00000000001add52 : sbb al, 0xd ; call 0x231ad2e3
0x0000000000199c02 : sbb al, 0xd ; cdq ; fldln2 ; jmp qword ptr [rdx]
0x0000000000199a52 : sbb al, 0xd ; cdq ; fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001a1eaa : sbb al, 0xd ; cdq ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000019ab62 : sbb al, 0xd ; clc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019458a : sbb al, 0xd ; clc ; jl 0x194580 ; jmp qword ptr [rdx]
0x00000000001ae33a : sbb al, 0xd ; clc ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001ab2ea : sbb al, 0xd ; clc ; pop rax ; cmc ; jmp qword ptr [rdx]
0x000000000019b102 : sbb al, 0xd ; cld ; sub dh, ch ; jmp qword ptr [rdx]
0x00000000001aaed2 : sbb al, 0xd ; cli ; cmc ; jmp qword ptr [rdx]
0x00000000001b128a : sbb al, 0xd ; cli ; cmp dh, dh ; jmp qword ptr [rdx]
0x000000000019b5ca : sbb al, 0xd ; cli ; cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000197b82 : sbb al, 0xd ; cli ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001ac23a : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x00000000001ade4a : sbb al, 0xd ; cmc ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000019b89a : sbb al, 0xd ; cmova ebp, esi ; jmp qword ptr [rdx]
0x00000000001a13ca : sbb al, 0xd ; cmp al, 0x7e ; int1 ; jmp qword ptr [rdx]
0x0000000000196c3a : sbb al, 0xd ; cmp al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b6482 : sbb al, 0xd ; cmp al, byte ptr [rsi - 9] ; jmp qword ptr [rdx]
0x00000000001a1142 : sbb al, 0xd ; cmp bh, byte ptr [rbp - 0xf] ; jmp qword ptr [rdx]
0x000000000019b65a : sbb al, 0xd ; cmp ch, dh ; jmp qword ptr [rdx]
0x00000000001aad42 : sbb al, 0xd ; cmp dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x000000000019600a : sbb al, 0xd ; cmp dword ptr [rbx - 0x13], edi ; jmp qword ptr [rdx]
0x00000000001947a2 : sbb al, 0xd ; cmp edi, dword ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x00000000001a9322 : sbb al, 0xd ; cmp esp, ecx ; hlt ; jmp qword ptr [rdx]
0x000000000019b53a : sbb al, 0xd ; cmp sil, bpl ; jmp qword ptr [rdx]
0x00000000001984aa : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019adea : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019752a : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000019574a : sbb al, 0xd ; cwde ; jno 0x195741 ; jmp qword ptr [rdx]
0x000000000019ffea : sbb al, 0xd ; f2xm1 ; jmp qword ptr [rdx]
0x000000000019b6ea : sbb al, 0xd ; fdivr qword ptr [rbx] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a8df2 : sbb al, 0xd ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x000000000018ebca : sbb al, 0xd ; ficomp dword ptr [rax - 0x17] ; jmp qword ptr [rdx]
0x000000000019af52 : sbb al, 0xd ; fmul qword ptr [rdx] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a965a : sbb al, 0xd ; fucompi st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000001af3e2 : sbb al, 0xd ; hlt ; fcompi st(5) ; jmp qword ptr [rdx]
0x0000000000193d5a : sbb al, 0xd ; in al, -0x1f ; jmp 0x193d64
0x0000000000195942 : sbb al, 0xd ; in al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae412 : sbb al, 0xd ; in al, dx ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000197bca : sbb al, 0xd ; in al, dx ; mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001a94a2 : sbb al, 0xd ; in eax, -0x1a ; hlt ; jmp qword ptr [rdx]
0x00000000001a1902 : sbb al, 0xd ; in eax, -0x79 ; int1 ; jmp qword ptr [rdx]
0x0000000000192c7a : sbb al, 0xd ; in eax, 0x1f ; jmp 0x192c84
0x00000000001ab332 : sbb al, 0xd ; in eax, 0x58 ; cmc ; jmp qword ptr [rdx]
0x00000000001ac462 : sbb al, 0xd ; in eax, dx ; cmc ; jmp qword ptr [rdx]
0x0000000000195b32 : sbb al, 0xd ; in eax, dx ; je 0x195b29 ; jmp qword ptr [rdx]
0x00000000001acafa : sbb al, 0xd ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x0000000000194e3a : sbb al, 0xd ; insb byte ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196242 : sbb al, 0xd ; insb byte ptr [rdi], dx ; jnp 0x196239 ; jmp qword ptr [rdx]
0x0000000000194652 : sbb al, 0xd ; insd dword ptr [rdi], dx ; jge 0x194648 ; jmp qword ptr [rdx]
0x000000000019fab2 : sbb al, 0xd ; int 0xb6
0x00000000001a2e4a : sbb al, 0xd ; int1 ; jns 0x1a2e46 ; jmp qword ptr [rdx]
0x00000000001ad2ca : sbb al, 0xd ; iretd ; jnp 0x1ad2c9 ; jmp qword ptr [rdx]
0x00000000001a0a7a : sbb al, 0xd ; ja 0x1a0af7 ; int1 ; jmp qword ptr [rdx]
0x00000000001a0fca : sbb al, 0xd ; ja 0x1a104f ; int1 ; jmp qword ptr [rdx]
0x00000000001ad05a : sbb al, 0xd ; ja 0x1ad0db ; cmc ; jmp qword ptr [rdx]
0x000000000019b8e2 : sbb al, 0xd ; jae 0x19b935 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad5b2 : sbb al, 0xd ; jb 0x1ad637 ; cmc ; jmp qword ptr [rdx]
0x0000000000195cda : sbb al, 0xd ; je 0x195d59 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a9f7a : sbb al, 0xd ; je 0x1a9f74 ; hlt ; jmp qword ptr [rdx]
0x00000000001965da : sbb al, 0xd ; jg 0x19665f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000192d52 : sbb al, 0xd ; jge 0x192d7b ; jmp 0x192d5c
0x000000000019460a : sbb al, 0xd ; jge 0x194600 ; jmp qword ptr [rdx]
0x0000000000192d0a : sbb al, 0xd ; jl 0x192d33 ; jmp 0x192d14
0x0000000000195d6a : sbb al, 0xd ; jl 0x195dea ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019aa8a : sbb al, 0xd ; jl 0x19aa90 ; jmp qword ptr [rdx]
0x00000000001ad312 : sbb al, 0xd ; jl 0x1ad311 ; jmp qword ptr [rdx]
0x00000000001ad4da : sbb al, 0xd ; jl 0x1ad4d9 ; jmp qword ptr [rdx]
0x00000000001ad522 : sbb al, 0xd ; jl 0x1ad521 ; jmp qword ptr [rdx]
0x00000000001a12f2 : sbb al, 0xd ; jle 0x1a12ed ; jmp qword ptr [rdx]
0x00000000001a133a : sbb al, 0xd ; jle 0x1a1335 ; jmp qword ptr [rdx]
0x00000000001a1382 : sbb al, 0xd ; jle 0x1a137d ; jmp qword ptr [rdx]
0x00000000001adf3a : sbb al, 0xd ; jmp 0x231ad4cd
0x00000000001ae2b2 : sbb al, 0xd ; jmp 0x231ad846
0x000000000019b2fa : sbb al, 0xd ; jne 0x19b337 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0d8a : sbb al, 0xd ; jne 0x1a0d85 ; jmp qword ptr [rdx]
0x00000000001a102a : sbb al, 0xd ; jne 0x1a10af ; int1 ; jmp qword ptr [rdx]
0x00000000001a9612 : sbb al, 0xd ; jne 0x1a9602 ; hlt ; jmp qword ptr [rdx]
0x00000000001954ca : sbb al, 0xd ; jno 0x1954c1 ; jmp qword ptr [rdx]
0x000000000019555a : sbb al, 0xd ; jno 0x195551 ; jmp qword ptr [rdx]
0x0000000000195892 : sbb al, 0xd ; jno 0x195889 ; jmp qword ptr [rdx]
0x0000000000196622 : sbb al, 0xd ; jno 0x1966a7 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196baa : sbb al, 0xd ; jno 0x196b33 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acd0a : sbb al, 0xd ; jno 0x1acd09 ; jmp qword ptr [rdx]
0x000000000019b342 : sbb al, 0xd ; jnp 0x19b37f ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a9b7a : sbb al, 0xd ; jnp 0x1a9b6e ; hlt ; jmp qword ptr [rdx]
0x00000000001ad012 : sbb al, 0xd ; jnp 0x1ad093 ; cmc ; jmp qword ptr [rdx]
0x00000000001a2e92 : sbb al, 0xd ; jns 0x1a2e8e ; jmp qword ptr [rdx]
0x000000000019515a : sbb al, 0xd ; jo 0x1951d2 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b222 : sbb al, 0xd ; jo 0x19b25a ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a9132 : sbb al, 0xd ; jo 0x1a911a ; hlt ; jmp qword ptr [rdx]
0x0000000000196352 : sbb al, 0xd ; jp 0x1963d6 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001975ea : sbb al, 0xd ; jp 0x197579 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae1e2 : sbb al, 0xd ; jp 0x1ae173 ; cmc ; jmp qword ptr [rdx]
0x0000000000195052 : sbb al, 0xd ; jrcxz 0x1950c9 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b4aa : sbb al, 0xd ; jrcxz 0x19b4ea ; out dx, al ; jmp qword ptr [rdx]
0x00000000001936aa : sbb al, 0xd ; js 0x193701 ; jmp 0x1936b4
0x00000000001936f2 : sbb al, 0xd ; js 0x193749 ; jmp 0x1936fc
0x0000000000196592 : sbb al, 0xd ; js 0x196617 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad0a2 : sbb al, 0xd ; js 0x1ad0a1 ; jmp qword ptr [rdx]
0x00000000001ad1ca : sbb al, 0xd ; js 0x1ad24c ; cmc ; jmp qword ptr [rdx]
0x000000000019ae7a : sbb al, 0xd ; lahf ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1072 : sbb al, 0xd ; leave ; jl 0x1a106d ; jmp qword ptr [rdx]
0x00000000001a1e62 : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000019767a : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x0000000000195eb2 : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jns 0x195ea9 ; jmp qword ptr [rdx]
0x0000000000194b8a : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; jrcxz 0x194b80 ; jmp qword ptr [rdx]
0x00000000001a1b4a : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000194f9a : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196dea : sbb al, 0xd ; loop 0x196d74 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b14a : sbb al, 0xd ; loop 0x19b17b ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a9202 : sbb al, 0xd ; loope 0x1a9200 ; jmp qword ptr [rdx]
0x000000000019abf2 : sbb al, 0xd ; loopne 0x19abf4 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001adef2 : sbb al, 0xd ; loopne 0x1ade82 ; cmc ; jmp qword ptr [rdx]
0x00000000001af50a : sbb al, 0xd ; loopne 0x1af509 ; jmp qword ptr [rdx]
0x00000000001af5b2 : sbb al, 0xd ; loopne 0x1af5b1 ; jmp qword ptr [rdx]
0x00000000001933aa : sbb al, 0xd ; mov ah, 0x45 ; jmp 0x1933b4
0x0000000000196192 : sbb al, 0xd ; mov al, 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018eb82 : sbb al, 0xd ; mov byte ptr [rax - 0x17], bl ; jmp qword ptr [rdx]
0x000000000019b41a : sbb al, 0xd ; mov byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad7ea : sbb al, 0xd ; mov ch, 0x80 ; cmc ; jmp qword ptr [rdx]
0x000000000019853a : sbb al, 0xd ; mov ch, 0xaa ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001951a2 : sbb al, 0xd ; mov ch, byte ptr [rdi - 0x13] ; jmp qword ptr [rdx]
0x00000000001ae3ca : sbb al, 0xd ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001ad9fa : sbb al, 0xd ; mov dh, 0x80 ; cmc ; jmp qword ptr [rdx]
0x00000000001a1b92 : sbb al, 0xd ; mov dh, 0x88 ; int1 ; jmp qword ptr [rdx]
0x00000000001959d2 : sbb al, 0xd ; mov dh, byte ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x000000000019b38a : sbb al, 0xd ; mov dh, byte ptr [rsi + rbp*8] ; jmp qword ptr [rdx]
0x0000000000196052 : sbb al, 0xd ; mov dr1, word ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x00000000001acfca : sbb al, 0xd ; mov dword ptr [rax - 0xb], edi ; jmp qword ptr [rdx]
0x00000000001afa42 : sbb al, 0xd ; mov eax, esi ; cmc ; jmp qword ptr [rdx]
0x000000000019ac82 : sbb al, 0xd ; mov ebx, edi ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000194b42 : sbb al, 0xd ; mov ebx, esp ; in al, dx ; jmp qword ptr [rdx]
0x000000000019639a : sbb al, 0xd ; mov edi, dword ptr [rbx - 0x13] ; jmp qword ptr [rdx]
0x000000000019f84a : sbb al, 0xd ; mov r14b, 0xf0 ; jmp qword ptr [rdx]
0x00000000001a1a7a : sbb al, 0xd ; mov r9b, r14b ; jmp qword ptr [rdx]
0x00000000001a1c22 : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, dh ; jmp qword ptr [rdx]
0x00000000001974e2 : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg ch, ch ; jmp qword ptr [rdx]
0x0000000000199d22 : sbb al, 0xd ; movsxd rbp, edx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6a1a : sbb al, 0xd ; movsxd rsi, esp ; jmp qword ptr [rdx]
0x00000000001ac3d2 : sbb al, 0xd ; mul dword ptr [rdi - 0xb] ; jmp qword ptr [rdx]
0x00000000001932d2 : sbb al, 0xd ; nop ; jmp 0x1932dc
0x000000000019c96a : sbb al, 0xd ; nop ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x000000000019b6a2 : sbb al, 0xd ; or al, 0x3c ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196ce2 : sbb al, 0xd ; or al, 0x82 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000194542 : sbb al, 0xd ; or bh, byte ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x00000000001acd52 : sbb al, 0xd ; or byte ptr [rdx - 0xb], dh ; jmp qword ptr [rdx]
0x00000000001ac302 : sbb al, 0xd ; or ch, byte ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000001a98da : sbb al, 0xd ; or ch, cl ; hlt ; jmp qword ptr [rdx]
0x000000000019b972 : sbb al, 0xd ; or ecx, dword ptr [rbp - 0x12] ; jmp qword ptr [rdx]
0x000000000019445a : sbb al, 0xd ; or edi, dword ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x000000000019a9fa : sbb al, 0xd ; out -0x10, eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af42a : sbb al, 0xd ; out -0x21, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001ade92 : sbb al, 0xd ; out -0x79, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001a957a : sbb al, 0xd ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000019c8da : sbb al, 0xd ; out 0x5b, al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001943ca : sbb al, 0xd ; out 0x7c, eax ; in al, dx ; jmp qword ptr [rdx]
0x00000000001a96ea : sbb al, 0xd ; out 0xe8, al ; hlt ; jmp qword ptr [rdx]
0x000000000019b92a : sbb al, 0xd ; out dx, al ; jmp qword ptr [rdx]
0x00000000001af9b2 : sbb al, 0xd ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001a6a62 : sbb al, 0xd ; outsb dx, byte ptr [rsi] ; hlt ; jmp qword ptr [rdx]
0x0000000000195112 : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab91a : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001ab5e2 : sbb al, 0xd ; pop r9 ; cmc ; jmp qword ptr [rdx]
0x000000000019568a : sbb al, 0xd ; pop rax ; jno 0x195681 ; jmp qword ptr [rdx]
0x000000000019f9ea : sbb al, 0xd ; pop rax ; mov dh, 0xf0 ; jmp qword ptr [rdx]
0x00000000001b02d2 : sbb al, 0xd ; pop rbp ; and esi, esi ; jmp qword ptr [rdx]
0x00000000001aa00a : sbb al, 0xd ; pop rbp ; int1 ; hlt ; jmp qword ptr [rdx]
0x000000000019c9b2 : sbb al, 0xd ; pop rbp ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x00000000001abb9a : sbb al, 0xd ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001a145a : sbb al, 0xd ; pop rbx ; jle 0x1a1455 ; jmp qword ptr [rdx]
0x00000000001a169a : sbb al, 0xd ; pop rbx ; xchg cl, dh ; jmp qword ptr [rdx]
0x00000000001ae83a : sbb al, 0xd ; pop rbx ; xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000001ab44a : sbb al, 0xd ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001ad492 : sbb al, 0xd ; pop rcx ; jl 0x1ad491 ; jmp qword ptr [rdx]
0x0000000000199dfa : sbb al, 0xd ; pop rdx ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab512 : sbb al, 0xd ; pop rdx ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001ae8ca : sbb al, 0xd ; pop rsp ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000001949b2 : sbb al, 0xd ; popfq ; fsubr st(4) ; jmp qword ptr [rdx]
0x000000000019436a : sbb al, 0xd ; popfq ; jl 0x194360 ; jmp qword ptr [rdx]
0x000000000019022a : sbb al, 0xd ; popfq ; or al, 0xea ; jmp qword ptr [rdx]
0x00000000001a92da : sbb al, 0xd ; psraw mm6, mm4 ; jmp qword ptr [rdx]
0x00000000001ae882 : sbb al, 0xd ; push 0x96 ; cmc ; jmp qword ptr [rdx]
0x0000000000198f9a : sbb al, 0xd ; push 0xbb ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad44a : sbb al, 0xd ; push rax ; jl 0x1ad449 ; jmp qword ptr [rdx]
0x00000000001ab55a : sbb al, 0xd ; push rax ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001a8daa : sbb al, 0xd ; push rbp ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x0000000000194d62 : sbb al, 0xd ; push rbp ; insb byte ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad3a2 : sbb al, 0xd ; push rbp ; jl 0x1ad3a1 ; jmp qword ptr [rdx]
0x0000000000193362 : sbb al, 0xd ; push rbp ; jmp 0x19336c
0x00000000001a1652 : sbb al, 0xd ; push rbp ; xchg cl, dh ; jmp qword ptr [rdx]
0x000000000019475a : sbb al, 0xd ; push rbx ; jge 0x194750 ; jmp qword ptr [rdx]
0x000000000019acca : sbb al, 0xd ; push rbx ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a9532 : sbb al, 0xd ; push rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x000000000019b77a : sbb al, 0xd ; push rcx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0ac2 : sbb al, 0xd ; push rdi ; je 0x1a0abd ; jmp qword ptr [rdx]
0x000000000019469a : sbb al, 0xd ; push rdi ; jge 0x194690 ; jmp qword ptr [rdx]
0x000000000019af0a : sbb al, 0xd ; push rdi ; or ch, dh ; jmp qword ptr [rdx]
0x000000000019b9ba : sbb al, 0xd ; push rdi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab402 : sbb al, 0xd ; push rdi ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001aadd2 : sbb al, 0xd ; push rdx ; cmc ; jmp qword ptr [rdx]
0x00000000001a125a : sbb al, 0xd ; push rdx ; jle 0x1a1255 ; jmp qword ptr [rdx]
0x0000000000195702 : sbb al, 0xd ; push rdx ; jno 0x1956f9 ; jmp qword ptr [rdx]
0x000000000019496a : sbb al, 0xd ; push rsi ; fsubr st(4) ; jmp qword ptr [rdx]
0x0000000000194712 : sbb al, 0xd ; push rsp ; jge 0x194708 ; jmp qword ptr [rdx]
0x00000000001ad3ea : sbb al, 0xd ; push rsp ; jl 0x1ad3e9 ; jmp qword ptr [rdx]
0x00000000001acc42 : sbb al, 0xd ; push rsp ; jo 0x1acc41 ; jmp qword ptr [rdx]
0x00000000001ab8d2 : sbb al, 0xd ; push rsp ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x000000000019c84a : sbb al, 0xd ; pushfq ; pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab782 : sbb al, 0xd ; rcr byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rdx]
0x0000000000199a0a : sbb al, 0xd ; rcr eax, -0x13 ; jmp qword ptr [rdx]
0x0000000000193eea : sbb al, 0xd ; ret
0x000000000019373a : sbb al, 0xd ; retf -0x1462 ; jmp qword ptr [rdx]
0x00000000001ac1aa : sbb al, 0xd ; retf ; cmc ; jmp qword ptr [rdx]
0x00000000001901e2 : sbb al, 0xd ; ror byte ptr [rdx + rbp*8], cl ; jmp qword ptr [rdx]
0x00000000001aae1a : sbb al, 0xd ; sahf ; cmc ; jmp qword ptr [rdx]
0x0000000000195802 : sbb al, 0xd ; sahf ; jno 0x1957f9 ; jmp qword ptr [rdx]
0x000000000019b462 : sbb al, 0xd ; sal dword ptr [rdi], -0x12 ; jmp qword ptr [rdx]
0x00000000001a19aa : sbb al, 0xd ; salc ; xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000019ae32 : sbb al, 0xd ; sar ah, cl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b612 : sbb al, 0xd ; sar byte ptr [rcx], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194d1a : sbb al, 0xd ; sbb al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a099a : sbb al, 0xd ; sbb al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000001a9292 : sbb al, 0xd ; sbb al, 0xe1 ; hlt ; jmp qword ptr [rdx]
0x0000000000194412 : sbb al, 0xd ; sbb byte ptr [rbp - 0x14], bh ; jmp qword ptr [rdx]
0x000000000018ef7a : sbb al, 0xd ; sbb byte ptr [rbx - 0x17], bl ; jmp qword ptr [rdx]
0x00000000001955fa : sbb al, 0xd ; sbb dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001ac8fa : sbb al, 0xd ; sbb ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x00000000001ab3ba : sbb al, 0xd ; sbb ebx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x0000000000199f62 : sbb al, 0xd ; sbb esi, ecx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aad8a : sbb al, 0xd ; sbb esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x0000000000192e2a : sbb al, 0xd ; scasb al, byte ptr [rdi] ; and ebx, ebp ; jmp qword ptr [rdx]
0x0000000000193b6a : sbb al, 0xd ; scasb al, byte ptr [rdi] ; loopne 0x193b5f ; jmp qword ptr [rdx]
0x0000000000199a9a : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; fsubr st(5) ; jmp qword ptr [rdx]
0x0000000000192d9a : sbb al, 0xd ; shl dword ptr [rax], 1 ; jmp 0x192da4
0x0000000000192de2 : sbb al, 0xd ; shl dword ptr [rax], 1 ; jmp 0x192dec
0x00000000001a9732 : sbb al, 0xd ; shr eax, -0xc ; jmp qword ptr [rdx]
0x0000000000199f1a : sbb al, 0xd ; shr esp, 1 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001af30a : sbb al, 0xd ; std ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001a0b72 : sbb al, 0xd ; std ; jae 0x1a0b6d ; jmp qword ptr [rdx]
0x00000000001ad182 : sbb al, 0xd ; std ; js 0x1ad181 ; jmp qword ptr [rdx]
0x0000000000193d12 : sbb al, 0xd ; std ; loope 0x193d07 ; jmp qword ptr [rdx]
0x00000000001af39a : sbb al, 0xd ; sti ; fcompi st(5) ; jmp qword ptr [rdx]
0x0000000000195b7a : sbb al, 0xd ; sti ; je 0x195b71 ; jmp qword ptr [rdx]
0x00000000001964aa : sbb al, 0xd ; sti ; jnp 0x1964a1 ; jmp qword ptr [rdx]
0x000000000019182a : sbb al, 0xd ; stosb byte ptr [rdi], al ; jns 0x19181e ; jmp qword ptr [rdx]
0x000000000019500a : sbb al, 0xd ; stosb byte ptr [rdi], al ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1bda : sbb al, 0xd ; stosd dword ptr [rdi], eax ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000019ac3a : sbb al, 0xd ; stosd dword ptr [rdi], eax ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a9962 : sbb al, 0xd ; sub cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000001b04da : sbb al, 0xd ; sub r14, r14 ; jmp qword ptr [rdx]
0x00000000001b056a : sbb al, 0xd ; sub r14, rsi ; jmp qword ptr [rdx]
0x00000000001b0522 : sbb al, 0xd ; sub rsi, r14 ; jmp qword ptr [rdx]
0x00000000001ac0da : sbb al, 0xd ; test al, 0x67 ; cmc ; jmp qword ptr [rdx]
0x0000000000198c2a : sbb al, 0xd ; test al, 0xb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199ae2 : sbb al, 0xd ; test al, 0xd8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acf22 : sbb al, 0xd ; test byte ptr [rax - 0xb], bh ; jmp qword ptr [rdx]
0x00000000001a11ca : sbb al, 0xd ; test byte ptr [rbp - 0xf], bh ; jmp qword ptr [rdx]
0x0000000000195792 : sbb al, 0xd ; test byte ptr [rcx - 0x13], dh ; jmp qword ptr [rdx]
0x00000000001948da : sbb al, 0xd ; test ch, ah ; jmp qword ptr [rdx]
0x00000000001aceda : sbb al, 0xd ; test dword ptr [rax - 0xb], edi ; jmp qword ptr [rdx]
0x000000000019fc02 : sbb al, 0xd ; wait ; mov dh, 0xf0 ; jmp qword ptr [rdx]
0x0000000000195d22 : sbb al, 0xd ; xchg byte ptr [rdi - 0x13], dh ; jmp qword ptr [rdx]
0x00000000001a160a : sbb al, 0xd ; xchg cl, dh ; jmp qword ptr [rdx]
0x00000000001ac122 : sbb al, 0xd ; xchg eax, ebp ; cmc ; jmp qword ptr [rdx]
0x0000000000196102 : sbb al, 0xd ; xchg eax, ebp ; jnp 0x1960f9 ; jmp qword ptr [rdx]
0x00000000001ae26a : sbb al, 0xd ; xchg eax, ebp ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001a1ef2 : sbb al, 0xd ; xchg eax, ebp ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000019ff5a : sbb al, 0xd ; xchg eax, ebp ; sal al, cl ; jmp qword ptr [rdx]
0x00000000001ae7aa : sbb al, 0xd ; xchg eax, ebx ; cmc ; jmp qword ptr [rdx]
0x0000000000195c92 : sbb al, 0xd ; xchg eax, ebx ; jne 0x195c89 ; jmp qword ptr [rdx]
0x0000000000191872 : sbb al, 0xd ; xchg eax, ebx ; jns 0x191866 ; jmp qword ptr [rdx]
0x0000000000199e42 : sbb al, 0xd ; xchg eax, edi ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1c6a : sbb al, 0xd ; xchg eax, edi ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000019b582 : sbb al, 0xd ; xchg eax, esi ; cmp esi, ebp ; jmp qword ptr [rdx]
0x00000000001a17fa : sbb al, 0xd ; xchg eax, esi ; xchg cl, dh ; jmp qword ptr [rdx]
0x0000000000199bba : sbb al, 0xd ; xchg eax, esp ; fldln2 ; jmp qword ptr [rdx]
0x00000000001a09e2 : sbb al, 0xd ; xchg eax, esp ; je 0x1a09dd ; jmp qword ptr [rdx]
0x00000000001a194a : sbb al, 0xd ; xlatb ; xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000019b26a : sbb al, 0xd ; xlatb ; xor dh, ch ; jmp qword ptr [rdx]
0x0000000000199b72 : sbb al, 0xd ; xor cl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019544a : sbb al, 0xd ; xor esi, dword ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000001a9294 : sbb al, 0xe1 ; hlt ; jmp qword ptr [rdx]
0x0000000000029c0c : sbb al, 0xeb ; ret 0x8948
0x0000000000186fcd : sbb al, 0xfc ; jmp qword ptr [rax]
0x00000000000b6e52 : sbb al, 0xfd ; dec dword ptr [rax - 0x77] ; jmp 0x48cdf7ac
0x00000000000a37ac : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000189d05 : sbb al, byte ptr [rcx] ; add byte ptr [rdi], cl ; out dx, eax ; call rsp
0x00000000001b00dd : sbb al, byte ptr [rdx] ; add byte ptr [rax], dl ; mov ch, 0xf6 ; call qword ptr [rdi]
0x0000000000092878 : sbb al, ch ; ret 0xf8cb
0x0000000000186725 : sbb bh, bl ; jmp rax
0x00000000000d0c9a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000000221fa : sbb bh, byte ptr [rdx] ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000001a46c8 : sbb bh, dh ; jmp qword ptr [rax]
0x00000000001ac7e8 : sbb bl, bh ; cmc ; call qword ptr [rax]
0x000000000018671d : sbb bl, bh ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x0000000000035752 : sbb bl, byte ptr [rbp - 0x3fce0002] ; pop rbx ; ret
0x0000000000173965 : sbb bl, byte ptr [rsi] ; ret
0x0000000000188861 : sbb bl, ch ; call rsp
0x0000000000026fc6 : sbb bl, ch ; ret 0x1f0f
0x00000000000eb1fb : sbb bl, dh ; ret
0x000000000009207b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000012e7ed : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000726be : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000012e482 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000012e9e4 : sbb byte ptr [r8 - 0x77], r9b ; out -0x18, eax ; ret 0xf3fe
0x00000000001645fa : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a1024 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1046 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1084 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000726d3 : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c5a9 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c701 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000726bf : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000037450 : sbb byte ptr [rax + 0x450f4402], ch ; ret 0x8944
0x000000000012e451 : sbb byte ptr [rax + 1], bh ; ret
0x00000000000233a1 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x000000000007d8aa : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e5070 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012e9e5 : sbb byte ptr [rax - 0x77], cl ; out -0x18, eax ; ret 0xf3fe
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001028aa : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000bc3e8 : sbb byte ptr [rax - 0x77], cl ; ret 0x4775
0x00000000000e8484 : sbb byte ptr [rax - 0x77], cl ; ret 0x4c6
0x0000000000053811 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x000000000012189a : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ed8f7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b4f31 : sbb byte ptr [rax - 0x7bf0f706], al ; ret
0x0000000000081d4b : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d655b
0x0000000000081d4a : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d655c
0x00000000000830bf : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d78cf
0x00000000000830be : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d78d0
0x0000000000078f56 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000da443 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000eda95 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091c1e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000082a77 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000091c1d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000112271 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000018fe5d : sbb byte ptr [rax], al ; add byte ptr [rax], ah ; add edx, ebp ; call qword ptr [rbx]
0x000000000001b0f2 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x3b
0x000000000001b2d2 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000001afd2 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x000000000001b2ba : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001afba : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x000000000001b212 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x000000000001af12 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x3b
0x000000000001b1fa : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000001aefa : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x3b
0x000000000001b1ca : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001aeca : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3b
0x000000000007bafa : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001039a0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000018fea5 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; add edx, ebp ; call qword ptr [rdx]
0x000000000018fe75 : sbb byte ptr [rax], al ; add byte ptr [rax], ch ; add edx, ebp ; call qword ptr [rbx]
0x000000000018fe8d : sbb byte ptr [rax], al ; add byte ptr [rax], dh ; add edx, ebp ; call qword ptr [rbx]
0x0000000000072fab : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a1025 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1047 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1085 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000194414 : sbb byte ptr [rbp - 0x14], bh ; jmp qword ptr [rdx]
0x00000000000d3499 : sbb byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000a4137 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc36682a5
0x00000000000a3bf2 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a3a60 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000072632 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086a8a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012e7ee : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003d26a : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000376e7 : sbb byte ptr [rbx + 0xb7501e2], al ; xor eax, eax ; nop ; ret
0x000000000002add8 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029c08 : sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x000000000018ef7c : sbb byte ptr [rbx - 0x17], bl ; jmp qword ptr [rdx]
0x000000000007c6c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000829c6 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x000000000013068e : sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000ebc1f : sbb byte ptr [rbx - 0x7663dbbc], cl ; ret 0xdaf7
0x00000000000ebd2f : sbb byte ptr [rbx - 0x76ebdbbc], cl ; ret 0xdaf7
0x0000000000186fc8 : sbb byte ptr [rbx], 0xfc ; call rax
0x00000000001a7668 : sbb byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000012e3c3 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x00000000000e50f6 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000007506b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000012f96b : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000726d4 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104a23 : sbb byte ptr [rcx - 0x75], al ; or r14b, r14b ; ret 0x7508
0x00000000000af8de : sbb byte ptr [rcx - 0x75], cl ; jge 0xaf8e9 ; call r12
0x000000000012c5aa : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000012c702 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000001077bb : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000968d6 : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000a37a1 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000f56b3 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000000001a5758 : sbb byte ptr [rcx - 0xc], bh ; jmp qword ptr [rcx]
0x00000000000f10a0 : sbb byte ptr [rcx], al ; ret 0x8d48
0x0000000000102cbe : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000102257 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x0000000000178cc4 : sbb byte ptr [rdi - 0x7128000e], cl ; jmp rax
0x000000000005dc08 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012e94b : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000356bd : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000008287e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000002047 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001aff3d : sbb byte ptr [rdx], al ; add al, ah ; mov cl, 0xf6 ; jmp qword ptr [rcx]
0x00000000001aff25 : sbb byte ptr [rdx], al ; add al, bl ; mov cl, 0xf6 ; call qword ptr [rcx]
0x00000000000f5e8c : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000013553d : sbb byte ptr [rip - 0x3fcf0000], al ; pop rbx ; pop rbp ; ret
0x000000000013550b : sbb byte ptr [rip - 0x76b80000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000017afc8 : sbb byte ptr [rsi - 0x73470006], cl ; cli ; call rax
0x00000000000fcbc2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000fcbc1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000001b1f9 : sbb byte ptr fs:[rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000002aba8 : sbb ch, al ; ret 0x10b4
0x000000000019d619 : sbb ch, bh ; call qword ptr [rax]
0x00000000000fc822 : sbb ch, byte ptr [rax + rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fc874 : sbb ch, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000130088 : sbb cl, byte ptr [rax + 0x39] ; ret
0x000000000012545e : sbb cl, byte ptr [rax - 0x3f] ; out dx, al ; add cl, byte ptr [rcx - 0x77] ; ret 0xc148
0x0000000000132bd6 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c8d22 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000011ccc3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a5d68 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000009da7f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000001380bd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a22d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137cad : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001377b9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137fc9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e1ca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013d9ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013ddda : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d5fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013ad8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a56d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000137a3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139d4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000137d7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138099 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d799 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138169 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a8ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a08d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013986d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000013aa4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000137f1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013770d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000137b0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000013dc8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d4aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e5ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137fed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001377dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000139bad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013787f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137bdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000139ce3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a9e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a503 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013db8b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013e4bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137e4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013ad23 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a023 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000139b43 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a843 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013dcdb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013d4fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001378a3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001aba78 : sbb dh, ah ; cmc ; call qword ptr [rax]
0x00000000000eb361 : sbb dh, bl ; ret
0x00000000001955fc : sbb dh, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x000000000019bab1 : sbb dh, ch ; call qword ptr [rbx]
0x000000000019a329 : sbb dh, ch ; call qword ptr [rcx]
0x00000000000ef11b : sbb dh, dh ; ret
0x00000000001026a2 : sbb dh, dh ; ret 0x7504
0x0000000000186bb0 : sbb dl, 0xfb ; inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x00000000000f6d82 : sbb dl, ah ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001ac748 : sbb dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ab088 : sbb dl, bl ; cmc ; call qword ptr [rax]
0x0000000000190485 : sbb dl, ch ; jmp qword ptr [rdx]
0x000000000013b4e8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d0c73 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000f7fb6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000013b471 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b4e9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f7fa3 : sbb dword ptr [rax], ebp ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c25c5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x0000000000189d98 : sbb dword ptr [rbp - 0x11], ecx ; jmp rsp
0x0000000000196ba6 : sbb dword ptr [rbx + 0xd1cffed], eax ; jno 0x196b37 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae336 : sbb dword ptr [rbx + 0xd1cfff5], ecx ; clc ; mov ch, dh ; jmp qword ptr [rdx]
0x000000000017621d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000008c884 : sbb dword ptr [rbx], esi ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000117fca : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011b70b : sbb dword ptr [rcx - 0x80], eax ; jmp qword ptr [rbx]
0x000000000012add3 : sbb dword ptr [rcx], esi ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000009f19e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce1 ; ret
0x000000000015e83c : sbb eax, -1 ; ret
0x000000000010ae3b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000066b1 : sbb eax, 0x120000 ; or al, 0 ; push rax ; ret
0x0000000000186731 : sbb eax, 0x1e30fffb ; sti ; jmp qword ptr [rax]
0x000000000018700d : sbb eax, 0x1e90fffc ; cld ; jmp rax
0x00000000000fc731 : sbb eax, 0x2c1bca ; pop rbx ; ret
0x00000000001a037d : sbb eax, 0x3ff00001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a0395 : sbb eax, 0x40080001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a041d : sbb eax, 0x41000001 ; int1 ; call rsi
0x000000000009db09 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000001064c2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009f25d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000000f803a : sbb eax, 0x86887 ; mov rax, rbx ; pop rbx ; ret
0x0000000000042a1e : sbb eax, 0x89000001 ; ret
0x000000000013b291 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013b309 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007290 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x0000000000045c78 : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000001249e0 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000385ca : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000117c57 : sbb eax, eax ; ret
0x0000000000163f45 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000017926c : sbb eax, ebx ; call qword ptr [rdx]
0x00000000000ae2b9 : sbb eax, edi ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000fc733 : sbb ebp, dword ptr [rax + rax] ; pop rbx ; ret
0x00000000001ac8fc : sbb ebp, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x0000000000190361 : sbb ebp, edx ; call qword ptr [rax]
0x0000000000190391 : sbb ebp, edx ; call qword ptr [rsi]
0x00000000001ab3bc : sbb ebx, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x0000000000186721 : sbb ebx, edi ; call qword ptr [rax]
0x000000000006dae2 : sbb ebx, edi ; lcall ptr [rbx - 0x77] ; call 0xffffffffc3631c52
0x0000000000036cd0 : sbb ebx, esi ; ret
0x00000000000538e0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000dac84 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012748c : sbb edi, dword ptr [rdi + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000186fc9 : sbb edi, esp ; call rax
0x000000000019043d : sbb edx, ebp ; jmp qword ptr [rdx]
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000000eb308 : sbb esi, ebx ; ret
0x0000000000199f64 : sbb esi, ecx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000007df9b : sbb esi, edi ; xor eax, dword ptr [rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x00000000001aad8c : sbb esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x000000000015e83b : sbb rax, -1 ; ret
0x0000000000139212 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e21e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000192e2c : scasb al, byte ptr [rdi] ; and ebx, ebp ; jmp qword ptr [rdx]
0x0000000000187b0d : scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x0000000000187a51 : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000001a5eb9 : scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000000f73f7 : scasb al, byte ptr [rdi] ; jg 0xf7408 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000193b6c : scasb al, byte ptr [rdi] ; loopne 0x193b5d ; jmp qword ptr [rdx]
0x0000000000063198 : scasb al, byte ptr [rdi] ; ret
0x0000000000002f62 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000003d445 : scasd eax, dword ptr [rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x000000000013e31d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c62c2 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000add2d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001995d5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; fdivr st(1) ; in eax, dx ; call qword ptr [rax]
0x00000000000b16df : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x0000000000187b09 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rdx + 0x22fffcae]
0x0000000000187a85 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rsi]
0x0000000000187c45 : scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000187c41 : scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax - 0x51] ; cld ; call rax
0x0000000000187bc5 : scasd eax, dword ptr [rdi] ; cld ; jmp rsp
0x00000000001797d0 : scasd eax, dword ptr [rdi] ; cwde ; hlt ; jmp qword ptr [rsi]
0x0000000000199a9c : scasd eax, dword ptr [rdi] ; fsubr st(5) ; jmp qword ptr [rdx]
0x000000000011c97b : scasd eax, dword ptr [rdi] ; or bl, ch ; ret 0x4890
0x000000000012ad2c : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x000000000003a3fc : scasd eax, dword ptr [rdi] ; ret
0x00000000000b23a0 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x00000000000a19b4 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b70ed : scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000035c23 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000b8fd0 : scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000356bf : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000105a6d : scasd eax, dword ptr [rdi] ; ret 0xffff
0x0000000000002bab : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efad ; ret
0x000000000000258c : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000085bdd : scasd eax, dword ptr [rdi] ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x00000000000fcbf5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000ed538 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000107b4c : setae al ; ret
0x00000000000fda28 : setbe al ; ret
0x0000000000122706 : sete al ; movzx eax, al ; ret
0x000000000002fee5 : sete al ; ret
0x000000000004d6ef : sete cl ; call 0x49995
0x0000000000103ccc : sete dl ; jmp 0x103c5c
0x00000000000d0de7 : setg dl ; jmp 0xd0d70
0x000000000005dc39 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000cb91d : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f4cf9 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000037666 : setne al ; movzx eax, al ; ret
0x0000000000072fad : setne al ; ret
0x00000000000cb93d : setne dl ; cmovbe eax, edx ; ret
0x00000000000a5d07 : setne dl ; jmp 0xa5d1a
0x00000000000a84e3 : setne dl ; jmp 0xa84f9
0x00000000000aabb7 : setne dl ; jmp 0xaabca
0x00000000000fa25b : setne dl ; jmp 0xfa231
0x00000000001798c8 : setns ah ; lcall ptr [rcx] ; cdq ; hlt ; jmp qword ptr [rbx]
0x00000000000f9f45 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000088ed8 : sgdt ptr [rax] ; ret
0x0000000000186b04 : shl ah, 1 ; sti ; call rax
0x0000000000186fd8 : shl byte ptr [rax], 0xfc ; call qword ptr [rax]
0x0000000000186978 : shl byte ptr [rbp + rdi*8 - 0x25a2f01], 1 ; call rax
0x0000000000187e44 : shl byte ptr [rbp - 0x5aaf0004], 1 ; cld ; call rax
0x0000000000187e54 : shl byte ptr [rbx - 0x5caf0004], 1 ; cld ; call rax
0x0000000000187240 : shl byte ptr [rbx - 4], 0xff ; push rax ; movsxd rdi, esp ; jmp rax
0x0000000000187020 : shl byte ptr [rbx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000036509 : shl byte ptr [rcx], cl ; ret 0xf66
0x0000000000186988 : shl byte ptr [rdi - 0x57af0003], 1 ; std ; call rax
0x0000000000178a20 : shl byte ptr [rdi - 0xe], 0xff ; jmp qword ptr [eax]
0x000000000019a890 : shl byte ptr [rdi], 0xee ; call qword ptr [rsi]
0x00000000001a7bc0 : shl byte ptr [rdi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001789d8 : shl byte ptr [rdx + rsi*8 - 1], 1 ; call qword ptr fs:[rax]
0x00000000001935e0 : shl byte ptr [rdx - 0x15], 1 ; call qword ptr [rdi]
0x00000000001657b4 : shl byte ptr [rip - 0x7cb800], 1 ; add dword ptr [rdi + 3], esi ; ret
0x00000000001657a5 : shl byte ptr [rip], 1 ; add bl, dh ; ret
0x00000000000a145f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000036173 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000162533 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000087045 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000001615eb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000161602 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000036590 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000008a926 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a937 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000096f88 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000001614e1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006aff5 : shl byte ptr [rsi + 0xf], cl ; outsd dx, dword ptr [rsi] ; mul dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000186980 : shl byte ptr [rsi - 0x58af0003], 1 ; std ; call rax
0x0000000000187e3c : shl byte ptr [rsi - 0x59af0004], 1 ; cld ; call rax
0x00000000000a4b1d : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x0000000000187e4c : shl byte ptr [rsp + rdi*8 - 0x35baf01], 1 ; call rax
0x0000000000186b08 : shl dh, 1 ; sti ; call rax
0x0000000000186b00 : shl dl, 1 ; sti ; call rax
0x000000000016f200 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000192d9c : shl dword ptr [rax], 1 ; jmp 0x192da2
0x0000000000192de4 : shl dword ptr [rax], 1 ; jmp 0x192dea
0x0000000000174d68 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000000bcc99 : shl dword ptr [rdi], cl ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000161566 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a12bb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008a922 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016161d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000161606 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001615ef : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001600ab : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000161581 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008bcec : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000971c8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000161441 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000046de0 : shl eax, 0x1e ; or eax, esi ; ret
0x000000000011825a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000001180bd : shl eax, 4 ; add eax, 8 ; ret
0x000000000010c69f : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000037843 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000038bbc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038b47 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038b16 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000113208 : shl edi, 4 ; call 0x1f415
0x000000000003c976 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000dbc3b : shl edx, 2 ; xor esi, esi ; call 0x8c5c9
0x0000000000021f58 : shl edx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000011828c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000038bbb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000038b46 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000038b15 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000037842 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000113207 : shl rdi, 4 ; call 0x1f416
0x000000000003c975 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021f57 : shl rdx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000011828b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000105aa6 : shr al, 0x24 ; ret
0x0000000000105b6c : shr al, 0x5e ; ret 0xffff
0x00000000001322c1 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x0000000000107ac6 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000018a109 : shr bh, 1 ; call rsp
0x00000000001369c1 : shr bl, 0xdb ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000049898 : shr bl, 0xec ; mov rax, rsi ; nop ; ret
0x00000000000f2628 : shr byte ptr [rax + rax], cl ; mov rdx, rax ; jmp 0xf25c4
0x0000000000186990 : shr byte ptr [rax - 0x56af0003], 1 ; std ; jmp rax
0x0000000000178a40 : shr byte ptr [rax - 0xe], 0xff ; shr byte ptr [rax - 0xe], 1 ; jmp rax
0x0000000000178a44 : shr byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000001869ac : shr byte ptr [rbp + rdi*8 - 0x2472201], 1 ; call qword ptr [rcx]
0x0000000000187c64 : shr byte ptr [rbx - 0x54af0004], 0xfc ; jmp rax
0x0000000000107f73 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x107f89 ; xor eax, eax ; ret
0x0000000000107fa3 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x107fb9 ; xor eax, eax ; ret
0x0000000000107fd3 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x107fe9 ; xor eax, eax ; ret
0x0000000000108003 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x108019 ; xor eax, eax ; ret
0x0000000000108033 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x108049 ; xor eax, eax ; ret
0x0000000000108063 : shr byte ptr [rbx], 0 ; test eax, eax ; jne 0x108079 ; xor eax, eax ; ret
0x0000000000097fbf : shr byte ptr [rcx], 0xc8 ; ret
0x000000000002bd38 : shr byte ptr [rcx], cl ; ret
0x000000000008c09b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ed53d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000178b04 : shr byte ptr [rdx + rsi*8 - 1], 0xd0 ; insb byte ptr [rdi], dx ; jmp rax
0x0000000000187a4c : shr byte ptr [rsi - 0x51af0004], 0xfc ; jmp rax
0x00000000001a8180 : shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001982a9 : shr ch, cl ; call rcx
0x00000000000caa9c : shr cl, 0xf7 ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000011aed4 : shr cl, 1 ; ret 0xfffe
0x000000000010c992 : shr cl, 1 ; sub eax, 0x89ffffff ; ret 0x96eb
0x00000000000f23c7 : shr cl, cl ; ret
0x00000000000cdf85 : shr cl, cl ; ret 0xfff9
0x0000000000028f2b : shr dword ptr [rax + rax], -0x77 ; ret 0xe283
0x00000000000f2592 : shr dword ptr [rax + rax], cl ; add rsp, 8 ; ret
0x00000000000519e9 : shr dword ptr [rbp + 0x1480001], cl ; ret
0x0000000000107e83 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107e99 ; xor eax, eax ; ret
0x0000000000107eb3 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107ec9 ; xor eax, eax ; ret
0x0000000000107ee3 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107ef9 ; xor eax, eax ; ret
0x0000000000107f13 : shr dword ptr [rbx], 0 ; test eax, eax ; jne 0x107f29 ; xor eax, eax ; ret
0x00000000001868dc : shr dword ptr [rdx - 0x54ae0003], -3 ; jmp rcx
0x000000000004d6f1 : shr eax, -0x67 ; ret 0xffff
0x00000000001a9734 : shr eax, -0xc ; jmp qword ptr [rdx]
0x000000000010c6d8 : shr eax, 0x18 ; ret
0x0000000000036481 : shr eax, 0x1f ; ret
0x00000000001624ac : shr eax, 0x20 ; cmp ecx, eax ; jne 0x1624bf ; xor eax, eax ; ret
0x00000000000360d0 : shr eax, 0x3f ; ret
0x00000000000fa5f8 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000a1bca : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000107ac7 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000736e2 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000118260 : shr eax, 4 ; ret
0x00000000000736f2 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a1ba9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000003767f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000fddb8 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000018f669 : shr ecx, cl ; call qword ptr [rdx]
0x0000000000038ccc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038c51 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038c20 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000f67fc : shr ecx, cl ; ret
0x00000000000d1aa6 : shr ecx, cl ; ret 0xfff8
0x00000000000d2e7c : shr ecx, cl ; ret 0xfffc
0x0000000000075303 : shr edx, 2 ; sub eax, edx ; ret
0x000000000012f0ba : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000002f8f9 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2f910 ; ret
0x0000000000071380 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000071480 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000199f1c : shr esp, 1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000038ccb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038c50 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038c1f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000011aed3 : shr r9b, 1 ; ret 0xfffe
0x00000000000360cf : shr rax, 0x3f ; ret
0x00000000000fa5f7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000011825f : shr rax, 4 ; ret
0x0000000000075302 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000012f0b9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000096a71 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000969d1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000236e5 : sldt word ptr [r8] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000236e6 : sldt word ptr [rax] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000016e3c5 : sldt word ptr [rax] ; ret 0xf
0x00000000000ae5b3 : stc ; adc bh, al ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000000b742d : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000019d4fa : stc ; call qword ptr [rax]
0x000000000018d2f2 : stc ; call rsp
0x00000000000ef143 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f2723 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000085b26 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000095a19 : stc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000095edb : stc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000001995d9 : stc ; in eax, dx ; call qword ptr [rax]
0x000000000019abf5 : stc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018d8aa : stc ; inc dword ptr [rax + rbp*4 - 0x303bfffe] ; stc ; call rsp
0x000000000018d502 : stc ; inc dword ptr [rbp + rcx*4 + 0x65440002] ; stc ; call rsp
0x00000000000f3d59 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018d9c2 : stc ; inc dword ptr [rdi + rbp*4 - 0x33bfffe] ; stc ; call rsp
0x000000000013d2d2 : stc ; je 0x13d29e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013e962 : stc ; je 0x13e92e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000007d75b : stc ; je 0x7d595 ; ret
0x000000000018d83a : stc ; jmp qword ptr [rbp + 2]
0x000000000018d35a : stc ; jmp rsp
0x0000000000174be4 : stc ; jnp 0x174ba3 ; ret
0x000000000018d892 : stc ; lcall ptr [rdi - 0x34ebfffe] ; stc ; call rsp
0x000000000018d512 : stc ; lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi - 7], al ; jmp rsp
0x000000000018d762 : stc ; ljmp ptr [rdi + rbx*4 - 0x583bfffe] ; stc ; jmp rsp
0x00000000001453c8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096cd5 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000011b3c2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096953 : stc ; mov rax, rdi ; ret
0x0000000000070fc2 : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000003884e : stc ; pop r15 ; ret
0x0000000000038d0d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000018d352 : stc ; push qword ptr [rsp + rdi*2 + 0x12440002] ; stc ; jmp rsp
0x0000000000051ac3 : stc ; ret 0x36
0x000000000013477f : stc ; sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x000000000019e415 : std ; add byte ptr [rax], al ; mov byte ptr [rdi - 5], al ; call qword ptr [rax]
0x000000000019e445 : std ; add byte ptr [rax], al ; test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000111f7a : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000017875a : std ; call qword ptr [rax]
0x00000000001869ee : std ; call qword ptr [rbp + 0x11fffdb8]
0x0000000000186aba : std ; call qword ptr [rcx]
0x0000000000186a4e : std ; call qword ptr [rsi + 0x11fffdb9]
0x0000000000186916 : std ; call qword ptr [rsi]
0x000000000018689e : std ; call rax
0x00000000001869be : std ; call rcx
0x00000000001794e8 : std ; cld ; inc dword ptr [rbx - 8] ; jmp qword ptr [rax]
0x00000000000df434 : std ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000e4bd4 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b6e53 : std ; dec dword ptr [rax - 0x77] ; jmp 0x48cdf7ab
0x0000000000121d59 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000072577 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001af30c : std ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000000368fd : std ; fstp st(1) ; ret
0x000000000019ad5d : std ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e502 : std ; inc dword ptr [rax + rsi*2] ; add byte ptr [rax + rdx*8], al ; std ; jmp rsp
0x0000000000186972 : std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x000000000018690e : std ; inc dword ptr [rsi] ; test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x00000000001869de : std ; inc eax ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001a0b74 : std ; jae 0x1a0b6b ; jmp qword ptr [rdx]
0x0000000000178716 : std ; jmp qword ptr [rax - 0x3d]
0x000000000018f842 : std ; jmp qword ptr [rax]
0x00000000001868c2 : std ; jmp qword ptr [rcx + 0x21fffda7]
0x00000000001868ca : std ; jmp qword ptr [rcx + 0x21fffda8]
0x00000000001868b6 : std ; jmp qword ptr [rcx]
0x000000000018f6ba : std ; jmp qword ptr [rdi]
0x000000000018ef9a : std ; jmp qword ptr [rdx]
0x00000000001869ce : std ; jmp qword ptr [rsi + 0x11fffdb8]
0x000000000017871a : std ; jmp rax
0x000000000018687e : std ; jmp rcx
0x000000000018e50a : std ; jmp rsp
0x00000000000c257f : std ; jne 0xc254f ; ret
0x00000000001ad184 : std ; js 0x1ad17f ; jmp qword ptr [rdx]
0x0000000000186876 : std ; ljmp ptr [rsi - 0x4f00025b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000193d14 : std ; loope 0x193d05 ; jmp qword ptr [rdx]
0x0000000000144beb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000018e592 : std ; push qword ptr [rax + rdi*8 - 0x28bbffff] ; std ; jmp rsp
0x0000000000186aae : std ; push qword ptr [rax - 0x46] ; std ; call qword ptr [rcx]
0x000000000018696e : std ; push qword ptr [rax - 0x53] ; std ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rax
0x00000000001869a6 : std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x00000000001869fe : std ; push qword ptr [rcx] ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000186a1e : std ; push qword ptr [rcx] ; mov edx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000000ef72a : std ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018689a : std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x0000000000186896 : std ; push qword ptr [rdx] ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; push qword ptr [rdx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rax
0x000000000018e632 : std ; push rsp ; add qword ptr [r8], r8 ; xor al, 0xe1 ; std ; jmp rsp
0x000000000010fc14 : std ; sub al, byte ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fbd9
0x00000000000a9da1 : std ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd32c0
0x0000000000083f51 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000084131 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001899a8 : sti ; add bh, ch ; call rsp
0x000000000003e908 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000b7a74 : sti ; add eax, 0x2941c229 ; ret
0x000000000018682e : sti ; call qword ptr [rax + 0x10fffb82]
0x0000000000186836 : sti ; call qword ptr [rax + 0x10fffb85]
0x000000000018683e : sti ; call qword ptr [rax + 0x10fffb88]
0x0000000000186846 : sti ; call qword ptr [rax + 0x10fffb8b]
0x000000000018684e : sti ; call qword ptr [rax + 0x10fffb8e]
0x0000000000186856 : sti ; call qword ptr [rax + 0x10fffb91]
0x000000000018685e : sti ; call qword ptr [rax + 0x10fffb94]
0x0000000000186b4a : sti ; call qword ptr [rax + 0x20fffbe8]
0x0000000000186e42 : sti ; call qword ptr [rax - 0x1f00040e]
0x0000000000186c62 : sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000186c76 : sti ; call qword ptr [rax - 0x1f00043a]
0x0000000000186802 : sti ; call qword ptr [rax - 0x1f00048e]
0x0000000000186c2e : sti ; call qword ptr [rax - 0x2f000440]
0x0000000000186b46 : sti ; call qword ptr [rax - 0x6f00041a]
0x00000000001867e2 : sti ; call qword ptr [rax]
0x0000000000186c32 : sti ; call rax
0x00000000000dbc43 : sti ; call rcx
0x00000000001b05f2 : sti ; call rsi
0x000000000018e3ea : sti ; call rsp
0x00000000001ac7e9 : sti ; cmc ; call qword ptr [rax]
0x000000000002c1b1 : sti ; cmp byte ptr [rcx], bh ; add byte ptr [rax + 0x39], cl ; ret 0x7773
0x00000000000c10e2 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cac20 : sti ; dec dword ptr [rax + 1] ; ret
0x00000000000c10a9 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000001322f0 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001af39c : sti ; fcompi st(5) ; jmp qword ptr [rdx]
0x000000000019ac3d : sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018671e : sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x0000000000186776 : sti ; inc dword ptr [rax + 0x31] ; sti ; jmp rax
0x0000000000186796 : sti ; inc dword ptr [rax + 0x3e] ; sti ; jmp rax
0x0000000000186bae : sti ; inc dword ptr [rax + 0x40fffbda] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00000000001867fe : sti ; inc dword ptr [rax + 0x71] ; sti ; call qword ptr [rax - 0x1f00048e]
0x0000000000186b9a : sti ; inc dword ptr [rax - 0x20] ; sti ; jmp qword ptr [rax]
0x0000000000186c16 : sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x0000000000186bb2 : sti ; inc dword ptr [rax - 0x24] ; sti ; jmp qword ptr [rax]
0x0000000000186bce : sti ; inc dword ptr [rax - 0x26] ; sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x0000000000186c5e : sti ; inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000186e4e : sti ; inc dword ptr [rax - 0x2f00040a] ; idiv ebx ; jmp qword ptr [rax]
0x0000000000186c82 : sti ; inc dword ptr [rax - 0x2f000436] ; retf ; sti ; jmp qword ptr [rax]
0x000000000018680e : sti ; inc dword ptr [rax - 0x2f00048a] ; ja 0x18681b ; jmp qword ptr [rax]
0x0000000000186c72 : sti ; inc dword ptr [rax - 0x3b] ; sti ; call qword ptr [rax - 0x1f00043a]
0x0000000000186e3e : sti ; inc dword ptr [rax - 0xf] ; sti ; call qword ptr [rax - 0x1f00040e]
0x000000000018673e : sti ; inc dword ptr [rax] ; and ebx, edi ; push rax ; and ebx, edi ; jmp rax
0x0000000000186bd2 : sti ; inc dword ptr [rax] ; fdiv st(3), st(0) ; jmp rax
0x0000000000186bba : sti ; inc dword ptr [rax] ; loopne 0x186bbf ; jmp rax
0x0000000000186e0a : sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186c92 : sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x000000000018681e : sti ; inc eax ; jnp 0x186823 ; call qword ptr [rax]
0x0000000000186e5e : sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000017a078 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a2449 : sti ; int1 ; jmp qword ptr [rcx]
0x0000000000195b7c : sti ; je 0x195b6f ; jmp qword ptr [rdx]
0x000000000007b57b : sti ; je 0x7b58f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001013ca : sti ; jmp 0x101113
0x0000000000186736 : sti ; jmp qword ptr [rax]
0x00000000001aad46 : sti ; jmp qword ptr [rdx]
0x00000000001aaf62 : sti ; jmp qword ptr [rsi]
0x000000000018679a : sti ; jmp rax
0x00000000001964ac : sti ; jnp 0x19649f ; jmp qword ptr [rdx]
0x00000000000d2467 : sti ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000006dae3 : sti ; lcall ptr [rbx - 0x77] ; call 0xffffffffc3631c51
0x0000000000144fc8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000186a80 : sti ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000186aa0 : sti ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x000000000009691d : sti ; mov rax, rdi ; ret
0x000000000018671a : sti ; push qword ptr [rax + 0x18] ; sti ; inc dword ptr [rax + 0x19] ; sti ; call qword ptr [rax]
0x000000000018681a : sti ; push qword ptr [rax + 0x7a] ; sti ; inc eax ; jnp 0x186827 ; call qword ptr [rax]
0x0000000000186c12 : sti ; push qword ptr [rax - 0x25] ; sti ; inc dword ptr [rax - 0x23] ; sti ; jmp qword ptr [rax]
0x0000000000186c8e : sti ; push qword ptr [rax - 0x32] ; sti ; inc eax ; iretd ; sti ; call qword ptr [rax]
0x0000000000186e06 : sti ; push qword ptr [rax - 0xd] ; sti ; inc eax ; hlt ; sti ; call qword ptr [rax]
0x0000000000186e5a : sti ; push qword ptr [rax - 6] ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x000000000018670a : sti ; push qword ptr [rax] ; adc eax, 0x1600fffb ; sti ; call rax
0x00000000001867be : sti ; push qword ptr [rax] ; push rcx ; sti ; call qword ptr [rax]
0x0000000000186742 : sti ; push rax ; and ebx, edi ; jmp rax
0x0000000000186afa : sti ; push rax ; loopne 0x186aff ; call rax
0x00000000001867e6 : sti ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x000000000018682a : sti ; push rax ; push 0xfb ; call qword ptr [rax + 0x10fffb82]
0x00000000001867c6 : sti ; push rax ; push rsp ; sti ; call rax
0x0000000000174d6a : sti ; ret
0x0000000000043b47 : sti ; ret 0xffbf
0x000000000006fc5a : sti ; ret 7
0x00000000000a84e2 : sti ; setne dl ; jmp 0xa84fa
0x0000000000186e61 : sti ; sti ; call qword ptr [rax]
0x000000000002e7a7 : sti ; test rax, rax ; je 0x2e7b5 ; call rax
0x000000000018b0cd : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; xor al, 0x14 ; hlt ; call rsp
0x0000000000187a71 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rsi - 0x4f] ; cld ; call rsi
0x0000000000175244 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001a5cc1 : stosb byte ptr [rdi], al ; hlt ; call qword ptr [rbx]
0x000000000011c61d : stosb byte ptr [rdi], al ; idiv bh ; xor eax, eax ; ret
0x000000000019853d : stosb byte ptr [rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019182c : stosb byte ptr [rdi], al ; jns 0x19181c ; jmp qword ptr [rdx]
0x000000000019500c : stosb byte ptr [rdi], al ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000107dc2 : stosb byte ptr [rdi], al ; ret 0x2b
0x00000000000ef572 : stosb byte ptr [rdi], al ; ret 0xfff4
0x000000000007d589 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000012ceb1 : stosd dword ptr [rdi], eax ; and eax, 0x8948ffef ; ret
0x0000000000165ff9 : stosd dword ptr [rdi], eax ; and eax, 0xf31e7500 ; ret
0x0000000000187b29 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rdx]
0x0000000000187a6d : stosd dword ptr [rdi], eax ; cld ; call rsi
0x0000000000187a69 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rax - 0x55] ; cld ; call rsi
0x0000000000187aa9 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rsi]
0x0000000000187c69 : stosd dword ptr [rdi], eax ; cld ; jmp rax
0x00000000001a3175 : stosd dword ptr [rdi], eax ; jmp qword ptr [rdx]
0x00000000001a1bdc : stosd dword ptr [rdi], eax ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000017634c : stosd dword ptr [rdi], eax ; ret
0x00000000000e4aa1 : stosd dword ptr [rdi], eax ; ret 0
0x00000000001868e1 : stosd dword ptr [rdi], eax ; std ; jmp rcx
0x00000000001869a5 : stosd dword ptr [rdi], eax ; std ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; std ; call rax
0x000000000019ac3c : stosd dword ptr [rdi], eax ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000083663 : str word ptr [rax + 0x63] ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000128855 : str word ptr [rax - 0x77] ; ret 0x8348
0x0000000000086811 : str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000176731 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000037c62 : sub ah, byte ptr [rax + rdi] ; ret
0x00000000001aabd8 : sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000fc823 : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fc875 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000136060 : sub al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000f9e42 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f2593 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fc908 : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000f3d9c : sub al, 0 ; jne 0xf47aa ; ret
0x00000000000f964d : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8162] ; ret
0x00000000000f948d : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8322] ; ret
0x00000000000fd525 : sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fce0d : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f2629 : sub al, 0 ; mov rdx, rax ; jmp 0xf25c3
0x00000000000f3a3a : sub al, 0 ; mov rdx, rax ; jmp 0xf3a14
0x00000000000f3626 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f984c : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc734 : sub al, 0 ; pop rbx ; ret
0x00000000000f479e : sub al, 0 ; ret
0x00000000000be441 : sub al, 0x30 ; add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x00000000000a2c82 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000007ae6b : sub al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013395b : sub al, 0x48 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001870ec : sub al, 0x5f ; cld ; call rdx
0x00000000000c48d2 : sub al, 0x74 ; cmp eax, dword ptr [rax - 0x6bf08406] ; ret 0xb60f
0x00000000000c46c1 : sub al, 0x74 ; fmul qword ptr [rax - 0x7d] ; ret 0x3c01
0x000000000011b33a : sub al, 0x74 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2c85 : sub al, 0x75 ; pop rax ; ret
0x00000000001a637c : sub al, 0x7d ; add dword ptr [rax], eax ; jo 0x1a6344 ; hlt ; jmp qword ptr [rcx]
0x00000000000d78d3 : sub al, 0x83 ; ret 0x4801
0x00000000001a6d7c : sub al, 0x87 ; add dword ptr [rax], eax ; xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a767c : sub al, 0x90 ; add dword ptr [rax], eax ; xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a7e7c : sub al, 0x98 ; add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a817c : sub al, 0x9b ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000160c33 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000179150 : sub al, 0xbd ; call rsp
0x00000000001a7f41 : sub al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000186f35 : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; jmp qword ptr [rax]
0x0000000000186f55 : sub al, 0xfc ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000018e77c : sub al, 1 ; add byte ptr [rax], al ; push rax ; cmp cl, ch ; call qword ptr [rax]
0x00000000001a1275 : sub al, 1 ; add byte ptr [rax], bh ; sal cl, cl ; jmp qword ptr [rbx]
0x000000000018c7e5 : sub al, 2 ; add byte ptr [rcx + rax - 8], dh ; jmp rsp
0x0000000000080311 : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000003570a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x000000000010fc15 : sub al, byte ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fbd8
0x00000000000048f9 : sub al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x0000000000112193 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000118a74 : sub al, byte ptr [rax] ; jne 0x118af0 ; add rsp, 8 ; ret
0x000000000010e6e2 : sub al, byte ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000011c2b5 : sub al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11c2c9 ; ret
0x000000000011c595 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011eeb6 : sub al, byte ptr [rax] ; pop rbx ; ret
0x0000000000112315 : sub al, byte ptr [rax] ; ret
0x000000000011be1e : sub al, byte ptr [rax] ; test eax, eax ; je 0x11be2e ; ret
0x000000000011fbe4 : sub al, byte ptr [rax] ; test eax, eax ; je 0x11fbf6 ; ret
0x00000000000552ba : sub al, byte ptr [rbx - 0x1ef43] ; call qword ptr [rax]
0x000000000018c765 : sub al, byte ptr [rdx] ; add byte ptr [rsi + rdi*8 - 9], dh ; call rsp
0x0000000000128d71 : sub al, ch ; cdq ; out dx, ax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001289e1 : sub al, ch ; sub dword ptr [rdx - 0x11], ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d4b03 : sub al, ch ; test eax, 0xc031fff4 ; pop rbx ; ret
0x0000000000186dfc : sub bh, 0xfb ; call rax
0x0000000000186f51 : sub bh, ah ; jmp qword ptr [rax]
0x0000000000186f71 : sub bh, ah ; jmp rax
0x000000000019d468 : sub bh, dh ; out dx, al ; call qword ptr [rcx]
0x00000000000a2c76 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000012e741 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007c953 : sub byte ptr [r8 + rax], sil ; ret
0x00000000000e2360 : sub byte ptr [r8 - 0x77], r9b ; ret
0x00000000001337f7 : sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000133ab3 : sub byte ptr [r8], 0 ; pop r12 ; jmp rax
0x000000000003745f : sub byte ptr [rax + 0x44c88904], 0xf ; ret 0x8d48
0x00000000001280fe : sub byte ptr [rax + 1], bh ; ret
0x000000000007c954 : sub byte ptr [rax + rax], dh ; ret
0x000000000012e742 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e9457 : sub byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000012e7ea : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000fb400 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000b54dd : sub byte ptr [rax - 0x77], cl ; jmp 0x48cdde33
0x00000000000b5834 : sub byte ptr [rax - 0x77], cl ; jmp 0x4ccde18a
0x0000000000123f09 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000e2361 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000001337f8 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000026fc3 : sub byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x000000000002add5 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000029c05 : sub byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x8948
0x0000000000070c18 : sub byte ptr [rax - 0x78], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x0000000000073713 : sub byte ptr [rax - 0x78], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x00000000000d0037 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000178a30 : sub byte ptr [rax - 0xe], 0xff ; mov al, 0x68 ; jmp rax
0x00000000001339ee : sub byte ptr [rax], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000133a54 : sub byte ptr [rax], 0 ; pop r12 ; jmp rax
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00000000001a7c90 : sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x0000000000134781 : sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001339ef : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001339aa : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000133b66 : sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000010206c : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000133b05 : sub byte ptr [rax], al ; jmp rax
0x0000000000136155 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x108] ; jmp rax
0x0000000000133afe : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287ff9] ; jmp rax
0x0000000000133a55 : sub byte ptr [rax], al ; pop r12 ; jmp rax
0x0000000000136e64 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136e78 ; xor eax, eax ; ret
0x0000000000136e94 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136ea8 ; xor eax, eax ; ret
0x0000000000136ec4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136ed8 ; xor eax, eax ; ret
0x0000000000136ef4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136f08 ; xor eax, eax ; ret
0x0000000000136f24 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136f38 ; xor eax, eax ; ret
0x0000000000136f54 : sub byte ptr [rax], al ; test eax, eax ; jne 0x136f68 ; xor eax, eax ; ret
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000a2c7a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a2c79 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000d9bb9 : sub byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000d0d02 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000105c5e : sub byte ptr [rbx + 0x2b872f35], cl ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000b27ca : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021d4b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005d5ab : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012d257 : sub byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x00000000000d4ee3 : sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000136033 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000136032 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000186e90 : sub byte ptr [rbx], 0xfc ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000000a2c77 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001a7e98 : sub byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000b386d : sub byte ptr [rcx + 0x39], cl ; ret
0x00000000000a85a5 : sub byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000080042 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000012e817 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a3cbd : sub byte ptr [rcx + rcx*4 - 0x12], cl ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000834a8 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000103e57 : sub byte ptr [rcx + rcx*4 - 0x38], al ; sub eax, edx ; ret
0x000000000008091c : sub byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000036bb5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000000cbf82 : sub byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000001a8678 : sub byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000105d27 : sub byte ptr [rcx], ch ; ret 0x8941
0x0000000000070e27 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e1b37 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000105d26 : sub byte ptr [rcx], r13b ; ret 0x8941
0x0000000000121d0c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000a5dc3 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000b2cd2 : sub byte ptr [rip + 0x440f4800], cl ; ret 0x8d48
0x000000000019c672 : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a8108 : sub byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000002be8 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001a7d09 : sub ch, dh ; call qword ptr [rax]
0x00000000001a7c49 : sub ch, dh ; call qword ptr [rcx]
0x00000000001a7c91 : sub ch, dh ; jmp qword ptr [rcx]
0x00000000000363d5 : sub cl, al ; jne 0x363e8 ; add rsp, 8 ; ret
0x00000000000366b0 : sub cl, al ; jne 0x366c8 ; add rsp, 8 ; ret
0x0000000000036258 : sub cl, al ; ret
0x00000000000f7fa4 : sub cl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d1873 : sub cl, byte ptr [rax + 0x39] ; ret 0x870f
0x00000000000bd48a : sub cl, byte ptr [rax - 0x77] ; loope 0xbd41d ; ret 0xf631
0x00000000000e7556 : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000001a9964 : sub cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000000f6ecd : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ce97 : sub dh, byte ptr [rip + 0x48b4800] ; ret 0x8548
0x000000000019a909 : sub dh, ch ; call qword ptr [rdx]
0x00000000001a7df1 : sub dh, ch ; jmp qword ptr [rcx]
0x000000000019b105 : sub dh, ch ; jmp qword ptr [rdx]
0x000000000018b3a1 : sub dh, ch ; jmp rsp
0x000000000017a5f1 : sub dh, dh ; dec dword ptr [rcx] ; sub dh, dh ; jmp rsp
0x000000000017a5f5 : sub dh, dh ; jmp rsp
0x0000000000092816 : sub dword ptr [rax - 0x77], ecx ; jmp 0x4ccbb170
0x0000000000082395 : sub dword ptr [rax], eax ; add bl, ch ; or eax, 0xbf35b10f ; ret
0x000000000012ad75 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012b985 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x12b998 ; ret
0x000000000012ac9c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121355 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000130734 : sub dword ptr [rax], eax ; test eax, eax ; je 0x130748 ; xor eax, eax ; ret
0x000000000015a723 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000010d044 : sub dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000143217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14322d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14337d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001434b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1434cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14361d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14376d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001438a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1438bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001439f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14409d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001441d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1441ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14433d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14448d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145be7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145bfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145d37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145d4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145e87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145e9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145fd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145fed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146127 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14613d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146277 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14628d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001463c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1463dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14652d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14667d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001467b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1467cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14691d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001485b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1485cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148707 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14871d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148857 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14886d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001489a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1489bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148af7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148b0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148c47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148c5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148d97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000148ee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x148efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14904d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14919d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001492d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1492ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14943d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14958d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001496c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1496dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14982d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x0000000000143173 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000014316f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000014321d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001289e3 : sub dword ptr [rdx - 0x11], ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000162289 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161416 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000012ad96 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000012e58a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e32d5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000186eb5 : sub eax, 0x2f00fffc ; cld ; jmp rax
0x0000000000186e75 : sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x000000000008035a : sub eax, 0x448d48fe ; ret
0x00000000000b43ef : sub eax, 0x48ffffd1 ; add esp, 0x18 ; ret
0x0000000000036499 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000f8e11 : sub eax, 0x89000862 ; ret 0xe8c1
0x00000000000fc4cf : sub eax, 0x89480008 ; ret 0xff31
0x000000000009577f : sub eax, 0x89ffff19 ; ret
0x000000000010c994 : sub eax, 0x89ffffff ; ret 0x96eb
0x0000000000076ab6 : sub eax, 0xf8830000 ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000129e05 : sub eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000047107 : sub eax, 1 ; cmp rax, rbx ; jne 0x47109 ; pop rbx ; ret
0x000000000009763a : sub eax, 1 ; jne 0x97636 ; ret
0x000000000002caa4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000011d6a1 : sub eax, 1 ; pop r13 ; ret
0x00000000000385cf : sub eax, 1 ; ret
0x0000000000108602 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010d71f : sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x000000000010c59a : sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x000000000011194a : sub eax, dword ptr [rax] ; call rax
0x00000000001083bf : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x1083a8 ; ret
0x00000000000ff3ef : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000010adbc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000107b84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107b98 ; xor eax, eax ; ret
0x0000000000107bb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107bc8 ; xor eax, eax ; ret
0x0000000000107be4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107bf8 ; xor eax, eax ; ret
0x0000000000107c14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c28 ; xor eax, eax ; ret
0x0000000000107c44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c58 ; xor eax, eax ; ret
0x0000000000107c74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107c88 ; xor eax, eax ; ret
0x0000000000107ca4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107cb8 ; xor eax, eax ; ret
0x0000000000107cd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ce8 ; xor eax, eax ; ret
0x0000000000107d04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d18 ; xor eax, eax ; ret
0x0000000000107d34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d48 ; xor eax, eax ; ret
0x0000000000107d64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107d78 ; xor eax, eax ; ret
0x0000000000107d94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107da8 ; xor eax, eax ; ret
0x0000000000107dc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107dd8 ; xor eax, eax ; ret
0x0000000000107df4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e08 ; xor eax, eax ; ret
0x0000000000107e24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e38 ; xor eax, eax ; ret
0x0000000000107e54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e68 ; xor eax, eax ; ret
0x0000000000107e84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107e98 ; xor eax, eax ; ret
0x0000000000107eb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ec8 ; xor eax, eax ; ret
0x0000000000107ee4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107ef8 ; xor eax, eax ; ret
0x0000000000107f14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107f28 ; xor eax, eax ; ret
0x0000000000107f74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107f88 ; xor eax, eax ; ret
0x0000000000107fa4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107fb8 ; xor eax, eax ; ret
0x0000000000107fd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x107fe8 ; xor eax, eax ; ret
0x0000000000108004 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108018 ; xor eax, eax ; ret
0x0000000000108034 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108048 ; xor eax, eax ; ret
0x0000000000108064 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108078 ; xor eax, eax ; ret
0x0000000000108094 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1080a8 ; xor eax, eax ; ret
0x00000000001080c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1080d8 ; xor eax, eax ; ret
0x00000000001080f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108108 ; xor eax, eax ; ret
0x0000000000108615 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x108628 ; ret
0x000000000003080f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1db3 : sub eax, dword ptr [rcx + r8*4] ; je 0xa1d97 ; ret
0x00000000000a1db4 : sub eax, dword ptr [rcx + rax*4] ; je 0xa1d96 ; ret
0x000000000007d18e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000073095 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000072f85 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000075965 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073086 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072f76 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a1d6c : sub eax, dword ptr [rdx + rcx*4] ; je 0xa1d56 ; ret
0x00000000001b115d : sub eax, dword ptr [rdx] ; add byte ptr [rax], dl ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x000000000007c6a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000039e41 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000103e71 : sub eax, eax ; mov eax, r8d ; ret
0x00000000000a31dc : sub eax, eax ; nop ; ret
0x00000000000a3191 : sub eax, eax ; ret
0x000000000007b8fd : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000a3ef3 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a413a : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007bf09 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000884cc : sub eax, ecx ; ret
0x0000000000121353 : sub eax, ecx ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000088c71 : sub eax, edi ; ret
0x00000000000a3a08 : sub eax, edi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa39a5
0x000000000003c929 : sub eax, edx ; ret
0x000000000003678f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003647f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000360cd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000070fda : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074d1e : sub eax, esi ; pop r14 ; pop r15 ; ret
0x0000000000104032 : sub eax, esi ; ret
0x00000000000793f9 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a31db : sub eax, r8d ; nop ; ret
0x00000000000a3190 : sub eax, r8d ; ret
0x0000000000103e8b : sub eax, r9d ; ret
0x0000000000196ba7 : sub ebp, -1 ; sbb al, 0xd ; jno 0x196b36 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000b2cd1 : sub ebp, dword ptr [rax] ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000174fde : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000117f60 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000001058b3 : sub ebx, dword ptr [rbx - 0x76b7fff9] ; ret 0x894c
0x0000000000173a75 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f63 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007f077 : sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f6cac : sub ecx, dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000003c7f4 : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009d7c1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000817b4 : sub ecx, dword ptr [rax] ; add ebx, ebp ; ret
0x00000000000bd5d4 : sub ecx, dword ptr [rcx + rcx*4 - 1] ; call r14
0x0000000000083f54 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000103ddc : sub ecx, eax ; mov eax, ecx ; ret
0x00000000000a200c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000018cab9 : sub edi, eax ; jmp rsp
0x0000000000179498 : sub edi, edi ; call rcx
0x000000000018bf81 : sub edi, esi ; jmp rsp
0x0000000000186ef1 : sub edi, esp ; call rax
0x00000000000c42ed : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret 0x19eb
0x0000000000186e91 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000186eb1 : sub edi, esp ; jmp qword ptr [rax]
0x000000000007c6d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c6c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000117ae2 : sub edx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008bf14 : sub edx, eax ; jbe 0x8bf57 ; add rax, rdi ; ret
0x000000000008bf24 : sub edx, eax ; jbe 0x8bf59 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008bf34 : sub edx, eax ; jbe 0x8bf59 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008bf44 : sub edx, eax ; jbe 0x8bf59 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a3a0f : sub edx, eax ; jmp 0xa399e
0x00000000000c7850 : sub edx, eax ; jmp 0xc786d
0x000000000002079e : sub edx, ebx ; inc rdx ; jmp 0x207ad
0x000000000003674d : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000018db39 : sub edx, edi ; call rsp
0x00000000000c784d : sub edx, edi ; sub r10, rax ; jmp 0xc7870
0x0000000000078cd2 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000009748a : sub esi, 1 ; jne 0x97487 ; xor eax, eax ; ret
0x0000000000097552 : sub esi, 1 ; jne 0x9754f ; xor eax, eax ; ret
0x0000000000117dae : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000133637 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a7e81 : sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a3a71 : sub esi, ebx ; jmp rdx
0x000000000018bfd1 : sub esi, edi ; call rsp
0x000000000001f6a4 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f682
0x00000000001ae909 : sub esi, esi ; jmp qword ptr [rcx]
0x00000000001b0495 : sub esi, esi ; jmp qword ptr [rdx]
0x000000000001f661 : sub esp, -0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e8fe : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a3a5e : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116374 : sub esp, -0x80 ; pop rbx ; ret
0x0000000000116381 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000aecef : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000c784f : sub r10, rax ; jmp 0xc786e
0x00000000000c784c : sub r10, rdi ; sub r10, rax ; jmp 0xc7871
0x0000000000117ae1 : sub r10d, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aecee : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001b04dc : sub r14, r14 ; jmp qword ptr [rdx]
0x00000000001b056c : sub r14, rsi ; jmp qword ptr [rdx]
0x000000000007bf08 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000011eeb5 : sub r8b, byte ptr [r8] ; pop rbx ; ret
0x000000000011efac : sub r8b, byte ptr [rax] ; pop rbx ; ret
0x0000000000103e70 : sub r8d, eax ; mov eax, r8d ; ret
0x00000000000817b3 : sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000012ad95 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000097639 : sub rax, 1 ; jne 0x97637 ; ret
0x00000000000a1693 : sub rax, 1 ; ret
0x000000000007d18d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000073094 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072f84 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000075964 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073085 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072f75 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000793f8 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b8fc : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000070fd9 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074d1d : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000a4139 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000088c70 : sub rax, rdi ; ret
0x00000000000a3a07 : sub rax, rdi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa39a6
0x000000000003c93d : sub rax, rdx ; ret
0x00000000000360cc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000013cebc : sub rax, rsi ; ret
0x00000000000a200b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008bf13 : sub rdx, rax ; jbe 0x8bf58 ; add rax, rdi ; ret
0x00000000000a3a0e : sub rdx, rax ; jmp 0xa399f
0x000000000002079d : sub rdx, rbx ; inc rdx ; jmp 0x207ae
0x0000000000078cd1 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097489 : sub rsi, 1 ; jne 0x97488 ; xor eax, eax ; ret
0x0000000000097551 : sub rsi, 1 ; jne 0x97550 ; xor eax, eax ; ret
0x00000000001b0524 : sub rsi, r14 ; jmp qword ptr [rdx]
0x000000000012e8fd : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a3a5d : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116373 : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000116380 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000019a940 : sub sil, bpl ; call qword ptr [rdx]
0x00000000000361b0 : subps xmm0, xmm1 ; ret
0x00000000000361af : subsd xmm0, xmm1 ; ret
0x0000000000036514 : subss xmm0, xmm1 ; ret
0x0000000000119121 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000cb75d : syscall ; neg eax ; ret
0x0000000000108167 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000c1e55 : syscall ; ret
0x00000000000fa43f : syscall ; test rax, rax ; jl 0xfa48e ; je 0xfa452 ; ret
0x0000000000114553 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000bc554 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000102cb1 : test ah, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012adf7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000123d8a : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002ccf0 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000003365f : test al, 0x14 ; add cl, ch ; ret
0x00000000001a7ba8 : test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x000000000012cecb : test al, 0x2e ; add eax, 0x3d8d4800 ; ret
0x0000000000003c82 : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d4511 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000bda03 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000001ac0dc : test al, 0x67 ; cmc ; jmp qword ptr [rdx]
0x000000000019e448 : test al, 0x68 ; sti ; call qword ptr [rax]
0x0000000000174337 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001966c8 : test al, 0xa5 ; in eax, dx ; jmp rbx
0x00000000001a76f8 : test al, 0xb ; cmc ; jmp qword ptr [rcx]
0x0000000000198c2c : test al, 0xb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000179110 : test al, 0xbd ; jmp qword ptr [rdi - 0x3d]
0x00000000001796c0 : test al, 0xd ; hlt ; dec dword ptr [rax + 0x16] ; hlt ; jmp qword ptr [rdx]
0x0000000000179738 : test al, 0xd ; hlt ; jmp qword ptr [rax]
0x00000000001aa938 : test al, 0xd2 ; cmc ; jmp qword ptr [rsi]
0x0000000000199ae4 : test al, 0xd8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6df8 : test al, 0xdd ; hlt ; jmp qword ptr [rcx]
0x0000000000192069 : test al, 0xea ; call qword ptr [rcx]
0x00000000001a2028 : test al, 0xeb ; int1 ; call qword ptr [rdx]
0x0000000000198e38 : test al, 0xed ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a3599 : test al, 0xf0 ; jne 0xa35f8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a3598 : test al, 0xf0 ; jne 0xa35f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000018698d : test al, 0xfd ; call rax
0x00000000001868c9 : test al, 0xfd ; jmp qword ptr [rcx + 0x21fffda8]
0x00000000001868cd : test al, 0xfd ; jmp qword ptr [rcx]
0x000000000010fc13 : test al, 0xfd ; sub al, byte ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0x10fbda
0x000000000018d8ad : test al, 2 ; add ah, al ; iretd ; stc ; call rsp
0x0000000000081ef2 : test al, ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000103e54 : test al, al ; je 0x103e89 ; mov eax, r9d ; sub eax, edx ; ret
0x0000000000096b69 : test al, al ; jne 0x96b55 ; ret
0x0000000000096c60 : test al, al ; jne 0x96c4e ; xor eax, eax ; ret
0x00000000000974ca : test al, al ; jne 0x97472 ; mov rax, rdi ; ret
0x0000000000097fba : test al, al ; jne 0x97fa8 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000108c89 : test al, al ; mov byte ptr [rdi], al ; jne 0x108c81 ; mov rax, rdi ; ret
0x0000000000108e49 : test al, al ; mov byte ptr [rdi], al ; jne 0x108e41 ; mov rax, r10 ; ret
0x000000000006f794 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001aabd4 : test al, ch ; add dword ptr [rax], eax ; sub ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018b3b4 : test al, cl ; add dword ptr [rax], eax ; cmp r14d, ebp ; call rsp
0x0000000000094792 : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000187eb5 : test bh, ah ; call qword ptr [rax + 0x10fffc85]
0x0000000000187ef5 : test bh, ah ; call qword ptr [rax]
0x00000000001875f1 : test bh, ah ; call qword ptr [rdx]
0x000000000017867d : test bh, ah ; call rax
0x0000000000187531 : test bh, ah ; inc dword ptr [rax - 0x75] ; cld ; call rax
0x00000000001875ed : test bh, ah ; jmp qword ptr [rdx + 0x12fffc84]
0x0000000000187571 : test bh, ah ; jmp qword ptr [rsi]
0x0000000000187731 : test bh, ah ; jmp rax
0x000000000018772d : test bh, ah ; push qword ptr [rax - 0x7c] ; cld ; jmp rax
0x0000000000113d66 : test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000189764 : test bh, bh ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xffee
0x0000000000186835 : test bh, bl ; call qword ptr [rax + 0x10fffb85]
0x00000000000f2ba0 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000121884 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000002104e : test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000012f90b : test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000002fea6 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000c29ba : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000127825 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000128085 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000afa8c : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000005ac48 : test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x00000000000c9163 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000dc560 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000194ad4 : test byte ptr [rax + rax], ah ; cwde ; cmc ; in al, dx ; call qword ptr [rax]
0x00000000000f92c0 : test byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x0000000000048699 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xd7e9
0x00000000000b1119 : test byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000189c90 : test byte ptr [rax - 0x11], cl ; jmp rsp
0x000000000018d8ac : test byte ptr [rax - 0x303bfffe], ch ; stc ; call rsp
0x000000000002423b : test byte ptr [rax - 0x39], cl ; ret
0x0000000000187588 : test byte ptr [rax - 0x77790004], 0xfc ; call qword ptr [rsi]
0x000000000011dc3f : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x00000000000f5cfe : test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000000aee24 : test byte ptr [rax - 0x7d], 0xc3 ; add al, 0xe8 ; ret 0x4f8
0x00000000001acf24 : test byte ptr [rax - 0xb], bh ; jmp qword ptr [rdx]
0x00000000000dbaf6 : test byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000acf03 : test byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e2e9d : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x000000000016270a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000015a8ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009ceea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009deba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000015a8ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009deda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009deea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000015a92a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009df2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007c97a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000015a8ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009deca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000021c09 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000007128a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005d61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009711a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000103dd8 : test byte ptr [rax], al ; add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x00000000000e562b : test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000018fed4 : test byte ptr [rax], bl ; add byte ptr [rax], al ; add rdx, rbp ; call qword ptr [rbx]
0x000000000018d504 : test byte ptr [rbp + 0x65440002], cl ; stc ; call rsp
0x00000000001a2bd4 : test byte ptr [rbp + 1], al ; add byte ptr [rax], bh ; xchg edx, esi ; jmp qword ptr [rax]
0x0000000000024169 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x00000000001a11cc : test byte ptr [rbp - 0xf], bh ; jmp qword ptr [rdx]
0x000000000018cec8 : test byte ptr [rbp - 8], dh ; jmp rsp
0x00000000001064cc : test byte ptr [rbx + 0x1c], 0x20 ; je 0x106538 ; xor eax, eax ; pop rbx ; ret
0x00000000000a4d70 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2bf8 : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000251e1 : test byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5210 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2b3f : test byte ptr [rcx + rax - 0x7cb80000], bh ; ret 0x3c01
0x00000000000f2adf : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0x3c01
0x000000000008b24e : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x000000000008519f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000394c4 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0x00000000001020a4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000195794 : test byte ptr [rcx - 0x13], dh ; jmp qword ptr [rdx]
0x000000000003ffb6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000006dd12 : test byte ptr [rcx - 0x76ffffff], cl ; ret 0xe283
0x000000000013381e : test byte ptr [rcx - 0x7d000000], bl ; ret 0x8380
0x00000000000bc96a : test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001378a6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010c6b5 : test byte ptr [rcx], 0xf0 ; bswap eax ; ret
0x00000000000ab18d : test byte ptr [rcx], al ; add eax, 0xb8480000 ; ret 0xffff
0x0000000000088d24 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x00000000001a75d4 : test byte ptr [rdi + 0xa780001], cl ; cmc ; call rsp
0x00000000000963f0 : test byte ptr [rdi + 0xffffffd], bl ; mov dh, 0x45 ; ret
0x000000000018d9c4 : test byte ptr [rdi - 0x33bfffe], ch ; stc ; call rsp
0x00000000001995d4 : test byte ptr [rdi - 0x6280000], ch ; in eax, dx ; call qword ptr [rax]
0x00000000000c46e7 : test byte ptr [rdi*8 - 0x7cb70001], al ; ret 0xeb02
0x000000000003aacb : test byte ptr [rdi], 0x84 ; ret
0x00000000000f53ca : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000078af2 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x00000000000daf76 : test byte ptr [rdi], 0x95 ; ret 0xd284
0x00000000000580ca : test byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000072fd2 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072fe2 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000238e8 : test byte ptr [rdi], ah ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x0000000000190dd4 : test byte ptr [rdi], ah ; add byte ptr [rax], al ; fsub dword ptr [rcx - 0x16] ; jmp qword ptr [rcx]
0x000000000009d868 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000018987c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; in al, -0x14 ; out dx, al ; call rsp
0x000000000018b0cc : test byte ptr [rdx + 0x14340001], ch ; hlt ; call rsp
0x000000000002fe34 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000e7550 : test byte ptr [rdx + 0x3c000015], dh ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000963dd : test byte ptr [rdx + 0xffffffd], dh ; mov dh, 0x45 ; ret 0x8349
0x00000000001a40d4 : test byte ptr [rdx + 1], bl ; add al, bl ; outsd dx, dword ptr [rsi] ; jmp rax
0x00000000000c66f7 : test byte ptr [rdx - 0x76fffffd], dl ; ret 0x8349
0x0000000000093354 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018a13c : test byte ptr [rdx], bh ; add dword ptr [rax], eax ; call rax
0x0000000000028e00 : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007d4f4 : test byte ptr [rip + 0x34], dh ; add byte ptr [rax], al ; ret
0x0000000000021997 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x0000000000042a1d : test byte ptr [rip - 0x76ffffff], bl ; ret
0x00000000000e65c6 : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001a7cd4 : test byte ptr [rsi + 0x28c80001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000b3236 : test byte ptr [rsi], 0xfc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a24d4 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; sbb ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000a71d4 : test byte ptr [rsi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fa256 : test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xfa236
0x0000000000048eb6 : test byte ptr [rsp + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000a1b92 : test ch, 0xf0 ; je 0xa1b8b ; movzx eax, cl ; pop rbx ; ret
0x00000000001948dd : test ch, ah ; jmp qword ptr [rdx]
0x00000000000d1ed2 : test cl, 1 ; jne 0xd1e64 ; pop rbx ; ret
0x0000000000097b19 : test cl, cl ; je 0x97ae1 ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000096b10 : test cl, cl ; jne 0x96b05 ; ret
0x00000000000a131f : test cl, cl ; jne 0xa1314 ; ret
0x00000000000a13cf : test cl, cl ; jne 0xa13c4 ; ret
0x00000000000a168f : test cl, cl ; jne 0xa1688 ; sub rax, 1 ; ret
0x00000000000a1bba : test dh, 0xf0 ; je 0xa1b89 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a1bba : test dh, 0xf0 ; je 0xa1b8b ; movzx eax, dl ; pop rbx ; ret
0x00000000001af7a9 : test dh, dh ; jmp rdx
0x0000000000096cc0 : test dh, dh ; jne 0x96cb7 ; mov qword ptr [rdx], rcx ; ret
0x00000000000257e5 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000162594 : test dl, 0x40 ; jne 0x162559 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001625c2 : test dl, 4 ; jne 0x162559 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000018df84 : test dl, dh ; add al, byte ptr [rax] ; mov ah, 0x99 ; cli ; jmp rsp
0x00000000000ac511 : test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009759e : test dl, dl ; cmovne rax, rdi ; ret
0x0000000000035442 : test dl, dl ; jne 0x35424 ; ret
0x0000000000096ac4 : test dl, dl ; jne 0x96abd ; ret
0x00000000000a153f : test dl, dl ; jne 0xa1538 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000c6135 : test dl, dl ; jne 0xc611a ; ret
0x00000000000c615f : test dl, dl ; jne 0xc6147 ; ret
0x000000000010a9a8 : test dword ptr [rax + 0x29], 0x89c701c8 ; ret 0x850f
0x000000000008cb59 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000009db9b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009f0ab : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009efab : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000004dde1 : test dword ptr [rax - 0x16000006], ebx ; ret
0x000000000006a6fb : test dword ptr [rax - 0x76000002], ebx ; ret
0x00000000000bd8a2 : test dword ptr [rax - 0x77], 0xe8082444 ; ret
0x0000000000054ee2 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000004bfdf : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000004c04f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x00000000000d9600 : test dword ptr [rax - 0x7d], 0x394101c0 ; ret 0xda7f
0x00000000000c3769 : test dword ptr [rax - 0x8ffffff], esp ; ret
0x00000000000c4c6f : test dword ptr [rax - 0x900000c], eax ; ret
0x00000000001acedc : test dword ptr [rax - 0xb], edi ; jmp qword ptr [rdx]
0x00000000000365e7 : test dword ptr [rax], eax ; adc eax, 0x7e0f6600 ; ret 0xd089
0x000000000010be49 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10be1f
0x00000000000839b2 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x00000000000839b1 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000091adf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009702e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000133b89 : test dword ptr [rbx + 0x48000001], edx ; add esp, 8 ; ret
0x0000000000001b0e : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000a2b90 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000a3488 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000015a808 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000015a7e8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000015a700 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009f1a0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000160f17 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161366 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b5f : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000096f98 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000fb850 : test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000588b2 : test dword ptr [rbx], ebp ; ret
0x000000000008be8a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008c870 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000015a50a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000160eed : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d782 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000160dfd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160d0d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a2bd7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000164447 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000a2ba7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000015a8aa : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000018bded : test dword ptr [rcx], 0xf703b400 ; call rsp
0x00000000000c4435 : test dword ptr [rcx], 0xfa800000 ; jnp 0xc4455 ; xchg eax, esp ; ret 0xb60f
0x0000000000082bbd : test dword ptr [rdi + 0x48000022], esp ; mov eax, ebx ; pop rbx ; ret
0x000000000008ca5a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000635a3 : test dword ptr [rdi + rax*8 + 0x6ae9ffff], esi ; ret 0xffff
0x0000000000037663 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009d8e7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d8c7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000918f5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00000000000378c6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000003ca00 : test dword ptr [rdx + 0x48000001], ebp ; add esp, 8 ; ret
0x000000000009da81 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009ee89 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000007ca13 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000162262 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000160c32 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004e901 : test dword ptr [rdx + rdi*8 + 0x1ffff], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004bb68 : test dword ptr [rdx + rdi*8 + 0x1ffff], ebp ; add byte ptr [rax], al ; jmp rax
0x000000000004ea4d : test dword ptr [rdx + rdi*8 + 0x1ffff], edx ; add byte ptr [rax], al ; jmp rax
0x000000000004ee35 : test dword ptr [rdx + rdi*8 + 0xffff], edx ; add byte ptr [rax], al ; jmp rax
0x000000000015a7c7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000117504 : test dword ptr [rdx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000fc873 : test dword ptr [rdx], ebx ; sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a352d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000163dd2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d8a5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009d885 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009d79d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000068246 : test dword ptr [rsi + rdi*8 + 0x20e9ffff], eax ; ret
0x0000000000091bde : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000006f923 : test dword ptr [rsi - 0xcfffffc], esp ; ret
0x000000000007df47 : test dword ptr [rsi], ebp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000011b2d5 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000161138 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000dfd0f : test eax, 0x63480009 ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000176020 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000014ac66 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000036541 : test eax, 0x7fffff ; je 0x3653e ; ret
0x00000000001172c3 : test eax, 0x8900006a ; ret 0x8b48
0x000000000006c6e3 : test eax, 0x8900007e ; ret
0x00000000000e65bb : test eax, 0x89002d78 ; ret
0x0000000000186911 : test eax, 0xa986fffd ; std ; call qword ptr [rsi]
0x00000000000d4b06 : test eax, 0xc031fff4 ; pop rbx ; ret
0x000000000017a076 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000108618 : test eax, eax ; je 0x108625 ; ret
0x000000000010a0aa : test eax, eax ; je 0x10a0c0 ; add rsp, 8 ; ret
0x000000000011157d : test eax, eax ; je 0x11158d ; mov rdi, rbx ; call rax
0x0000000000111864 : test eax, eax ; je 0x111874 ; mov rdi, rbx ; call rax
0x000000000011be20 : test eax, eax ; je 0x11be2c ; ret
0x000000000011ee81 : test eax, eax ; je 0x11ee91 ; mov rdi, rsp ; call rax
0x000000000011ef5c : test eax, eax ; je 0x11ef6c ; mov rdi, rsp ; call rax
0x000000000011f815 : test eax, eax ; je 0x11f825 ; mov rdi, rbp ; call rax
0x000000000011fbe6 : test eax, eax ; je 0x11fbf4 ; ret
0x00000000001208b3 : test eax, eax ; je 0x1208c3 ; mov rdi, r14 ; call rax
0x0000000000120b31 : test eax, eax ; je 0x120b41 ; mov rdi, rbx ; call rax
0x00000000001245db : test eax, eax ; je 0x1245eb ; mov rdi, r12 ; call rax
0x00000000001247b9 : test eax, eax ; je 0x1247cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000126a96 : test eax, eax ; je 0x126aa6 ; mov rdi, rbp ; call rax
0x0000000000126cb6 : test eax, eax ; je 0x126cc6 ; mov rdi, rbp ; call rax
0x00000000001277dd : test eax, eax ; je 0x1277ef ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127e9c : test eax, eax ; je 0x127eac ; mov rdi, r12 ; call rax
0x000000000012820d : test eax, eax ; je 0x12821f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012acec : test eax, eax ; je 0x12acca ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012acbd : test eax, eax ; je 0x12accd ; pop rbx ; ret
0x000000000012ad29 : test eax, eax ; je 0x12ace1 ; pop rbx ; ret
0x000000000012ba69 : test eax, eax ; je 0x12ba7b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012c172 : test eax, eax ; je 0x12c184 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000130736 : test eax, eax ; je 0x130746 ; xor eax, eax ; ret
0x00000000001382b3 : test eax, eax ; je 0x1382bf ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139298 : test eax, eax ; je 0x1392a4 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000022088 : test eax, eax ; je 0x22092 ; jmp rax
0x00000000000220b8 : test eax, eax ; je 0x220c2 ; jmp rax
0x000000000002d17e : test eax, eax ; je 0x2d188 ; call rax
0x000000000002e7a9 : test eax, eax ; je 0x2e7b3 ; call rax
0x000000000007892d : test eax, eax ; je 0x7893d ; pop rbx ; ret
0x00000000000838b7 : test eax, eax ; je 0x838c1 ; call rax
0x00000000000888d0 : test eax, eax ; je 0x888e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0fbc : test eax, eax ; je 0xc0fc6 ; call rax
0x00000000000c11c9 : test eax, eax ; je 0xc11d7 ; call rax
0x00000000000f1bac : test eax, eax ; je 0xf1bb7 ; ret
0x00000000000f3281 : test eax, eax ; je 0xf3290 ; mov qword ptr [rax], rdx ; ret
0x00000000000f76ab : test eax, eax ; je 0xf7750 ; call rax
0x00000000000f7822 : test eax, eax ; je 0xf7928 ; call rax
0x00000000000fa442 : test eax, eax ; jl 0xfa48b ; je 0xfa44f ; ret
0x0000000000107b56 : test eax, eax ; jne 0x107b69 ; mov eax, 1 ; ret
0x0000000000107b86 : test eax, eax ; jne 0x107b96 ; xor eax, eax ; ret
0x0000000000107bb6 : test eax, eax ; jne 0x107bc6 ; xor eax, eax ; ret
0x0000000000107be6 : test eax, eax ; jne 0x107bf6 ; xor eax, eax ; ret
0x0000000000107c16 : test eax, eax ; jne 0x107c26 ; xor eax, eax ; ret
0x0000000000107c46 : test eax, eax ; jne 0x107c56 ; xor eax, eax ; ret
0x0000000000107c76 : test eax, eax ; jne 0x107c86 ; xor eax, eax ; ret
0x0000000000107ca6 : test eax, eax ; jne 0x107cb6 ; xor eax, eax ; ret
0x0000000000107cd6 : test eax, eax ; jne 0x107ce6 ; xor eax, eax ; ret
0x0000000000107d06 : test eax, eax ; jne 0x107d16 ; xor eax, eax ; ret
0x0000000000107d36 : test eax, eax ; jne 0x107d46 ; xor eax, eax ; ret
0x0000000000107d66 : test eax, eax ; jne 0x107d76 ; xor eax, eax ; ret
0x0000000000107d96 : test eax, eax ; jne 0x107da6 ; xor eax, eax ; ret
0x0000000000107dc6 : test eax, eax ; jne 0x107dd6 ; xor eax, eax ; ret
0x0000000000107df6 : test eax, eax ; jne 0x107e06 ; xor eax, eax ; ret
0x0000000000107e26 : test eax, eax ; jne 0x107e36 ; xor eax, eax ; ret
0x0000000000107e56 : test eax, eax ; jne 0x107e66 ; xor eax, eax ; ret
0x0000000000107e86 : test eax, eax ; jne 0x107e96 ; xor eax, eax ; ret
0x0000000000107eb6 : test eax, eax ; jne 0x107ec6 ; xor eax, eax ; ret
0x0000000000107ee6 : test eax, eax ; jne 0x107ef6 ; xor eax, eax ; ret
0x0000000000107f16 : test eax, eax ; jne 0x107f26 ; xor eax, eax ; ret
0x0000000000107f76 : test eax, eax ; jne 0x107f86 ; xor eax, eax ; ret
0x0000000000107fa6 : test eax, eax ; jne 0x107fb6 ; xor eax, eax ; ret
0x0000000000107fd6 : test eax, eax ; jne 0x107fe6 ; xor eax, eax ; ret
0x0000000000108006 : test eax, eax ; jne 0x108016 ; xor eax, eax ; ret
0x0000000000108036 : test eax, eax ; jne 0x108046 ; xor eax, eax ; ret
0x0000000000108066 : test eax, eax ; jne 0x108076 ; xor eax, eax ; ret
0x0000000000108096 : test eax, eax ; jne 0x1080a6 ; xor eax, eax ; ret
0x00000000001080c6 : test eax, eax ; jne 0x1080d6 ; xor eax, eax ; ret
0x00000000001080f6 : test eax, eax ; jne 0x108106 ; xor eax, eax ; ret
0x000000000010813f : test eax, eax ; jne 0x10813b ; pop rdx ; pop r10 ; ret
0x0000000000108233 : test eax, eax ; jne 0x108245 ; ret
0x000000000010853b : test eax, eax ; jne 0x108505 ; leave ; ret
0x000000000010becb : test eax, eax ; jne 0x10bebd ; ret
0x000000000011c2ba : test eax, eax ; jne 0x11c2c4 ; ret
0x00000000001249c6 : test eax, eax ; jne 0x1249d4 ; ret
0x000000000012bc56 : test eax, eax ; jne 0x12bc64 ; ret
0x000000000012d5fe : test eax, eax ; jne 0x12d5c3 ; jmp 0x12d5cb
0x0000000000136e66 : test eax, eax ; jne 0x136e76 ; xor eax, eax ; ret
0x0000000000136e96 : test eax, eax ; jne 0x136ea6 ; xor eax, eax ; ret
0x0000000000136ec6 : test eax, eax ; jne 0x136ed6 ; xor eax, eax ; ret
0x0000000000136ef6 : test eax, eax ; jne 0x136f06 ; xor eax, eax ; ret
0x0000000000136f26 : test eax, eax ; jne 0x136f36 ; xor eax, eax ; ret
0x0000000000136f56 : test eax, eax ; jne 0x136f66 ; xor eax, eax ; ret
0x0000000000165756 : test eax, eax ; jne 0x165765 ; ret
0x0000000000036bc6 : test eax, eax ; jne 0x36bd5 ; ret
0x000000000005d60f : test eax, eax ; jne 0x5d628 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c684 : test eax, eax ; jne 0x7c67d ; ret
0x0000000000086b4f : test eax, eax ; jne 0x86b46 ; xor eax, eax ; ret
0x000000000008abef : test eax, eax ; jne 0x8ac08 ; add rsp, 8 ; ret
0x000000000008bec7 : test eax, eax ; jne 0x8bf27 ; xor rax, rax ; ret
0x0000000000097068 : test eax, eax ; jne 0x970e6 ; xor eax, eax ; ret
0x00000000000a3679 : test eax, eax ; jne 0xa364d ; ret
0x00000000000a3746 : test eax, eax ; jne 0xa373e ; xor eax, eax ; ret
0x00000000000a4b09 : test eax, eax ; jne 0xa4ac8 ; nop dword ptr [rax] ; ret
0x00000000000f941f : test eax, eax ; jne 0xf93f7 ; xor eax, eax ; pop rbx ; ret
0x00000000000f95e0 : test eax, eax ; jne 0xf95b7 ; xor eax, eax ; pop rbx ; ret
0x00000000000714eb : test eax, eax ; js 0x714fd ; ret
0x0000000000083bd6 : test eax, eax ; js 0x83be5 ; ret
0x0000000000189058 : test eax, ebx ; in eax, dx ; push qword ptr [rdx + rcx*8] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000d4226 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000ff991 : test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001978e1 : test ebp, eax ; call rdx
0x00000000000a84de : test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa84fe
0x000000000008bdf0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000e70f1 : test ebp, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000010a2f6 : test ebx, ebx ; jne 0x10a308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001652bb : test ebx, ebx ; jne 0x1652b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016570f : test ebx, ebx ; jne 0x165706 ; pop rbx ; ret
0x0000000000073944 : test ebx, ebx ; jne 0x73958 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000162582 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016258f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002d505 : test ecx, ecx ; je 0x2d50f ; call rcx
0x000000000005dd58 : test ecx, ecx ; je 0x5dd65 ; ret
0x00000000000a3663 : test ecx, ecx ; jne 0xa365d ; ret
0x0000000000103e85 : test ecx, ecx ; jns 0x103e61 ; mov eax, edx ; sub eax, r9d ; ret
0x00000000000a30c8 : test ecx, ecx ; mov dword ptr [r8 + 4], ecx ; jne 0xa30a1 ; ret
0x00000000000a1e93 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xa1e8f ; ret
0x0000000000186839 : test edi, ebx ; call qword ptr [rax]
0x0000000000111851 : test edi, edi ; jne 0x111845 ; pop rbx ; ret
0x000000000016544b : test edi, edi ; jne 0x16543f ; pop rbx ; ret
0x000000000010c6d2 : test edi, edi ; js 0x10c6e9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000187eb9 : test edi, esp ; call qword ptr [rax]
0x00000000001876e9 : test edi, esp ; call rsp
0x00000000001876e5 : test edi, esp ; inc dword ptr [rbp + rax*4 - 4] ; call rsp
0x0000000000187569 : test edi, esp ; jmp qword ptr [rax]
0x0000000000178681 : test edi, esp ; push rax ; xchg ah, bh ; call qword ptr [rax]
0x0000000000082be8 : test edx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000848c3 : test edx, edi ; je 0x848d6 ; pop rbx ; ret
0x00000000000f813f : test edx, edx ; cmovne eax, edx ; ret
0x0000000000048827 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000fa083 : test edx, edx ; cmovns rax, rdx ; jmp 0xfa092
0x00000000001213e4 : test edx, edx ; je 0x1213f4 ; mov rdi, r12 ; call rdx
0x00000000001268a5 : test edx, edx ; je 0x1268b5 ; mov rdi, rbp ; call rdx
0x0000000000165044 : test edx, edx ; je 0x16504e ; call rdx
0x000000000016514d : test edx, edx ; je 0x16515c ; call rdx
0x00000000000733ca : test edx, edx ; je 0x733e1 ; mov eax, 0xffffffff ; ret
0x000000000007e673 : test edx, edx ; je 0x7e67d ; call rdx
0x0000000000088af9 : test edx, edx ; je 0x88b07 ; bsf eax, edx ; ret
0x0000000000088af9 : test edx, edx ; je 0x88b08 ; bsf eax, edx ; ret
0x0000000000088ba2 : test edx, edx ; je 0x88bb7 ; bsf rax, rdx ; ret
0x0000000000088ba2 : test edx, edx ; je 0x88bb8 ; bsf rax, rdx ; ret
0x0000000000088b46 : test edx, edx ; je 0x88bc8 ; bsf rax, rdx ; ret
0x0000000000088d91 : test edx, edx ; je 0x88db7 ; bsf rax, rdx ; ret
0x0000000000088d91 : test edx, edx ; je 0x88db8 ; bsf rax, rdx ; ret
0x00000000000c1141 : test edx, edx ; je 0xc114f ; call rdx
0x000000000010843d : test edx, edx ; jne 0x108435 ; leave ; ret
0x000000000012b9e5 : test edx, edx ; jne 0x12b9d5 ; pop rbx ; ret
0x000000000007418f : test edx, edx ; jne 0x74185 ; ret
0x000000000007af3f : test edx, edx ; jne 0x7af35 ; ret
0x0000000000086c09 : test edx, edx ; jne 0x86c05 ; ret
0x00000000000a4b4a : test edx, edx ; jne 0xa4b45 ; ret
0x0000000000021b5b : test edx, edx ; jns 0x21a42 ; jmp 0x21b30
0x00000000000a391f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xa391f ; ret
0x00000000000b01cf : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb01d0 ; ret
0x000000000012ea60 : test edx, edx ; mov eax, 1 ; jne 0x12ea79 ; ret
0x000000000012eaa0 : test edx, edx ; mov eax, 1 ; jne 0x12eab9 ; ret
0x0000000000037a2a : test edx, edx ; sete al ; ret
0x0000000000162575 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001add0d : test esi, ebp ; jmp qword ptr [rdx]
0x0000000000178599 : test esi, ecx ; call qword ptr [rax - 0x1f000e79]
0x00000000001a15c5 : test esi, ecx ; jmp qword ptr [rdx]
0x00000000000ffa61 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002ca90 : test esi, esi ; je 0x2ca5e ; pop rbx ; ret
0x000000000012eb9c : test esi, esi ; jle 0x12ebde ; call 0x12adb6
0x000000000012eb5d : test esi, esi ; jne 0x12eb76 ; call 0x12adb6
0x0000000000088c81 : test esi, esi ; jne 0x88c90 ; xor rax, rax ; ret
0x0000000000093e4e : test esi, esi ; jne 0x93e61 ; jmp 0x93e1b
0x000000000010bf68 : test esi, esi ; mov dword ptr [rax], esi ; jne 0x10bf5f ; ret
0x0000000000086bc2 : test esp, esp ; jne 0x86bed ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5d02 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xa5d1f
0x00000000000aabb2 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xaabcf
0x00000000000378c5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000086bc1 : test r12, r12 ; jne 0x86bee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5d01 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xa5d20
0x00000000000aabb1 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xaabd0
0x000000000012eb9b : test r14d, r14d ; jle 0x12ebdf ; call 0x12adb7
0x000000000012eb5c : test r14d, r14d ; jne 0x12eb77 ; call 0x12adb7
0x00000000001876e8 : test r15d, esp ; call rsp
0x000000000010853a : test r8, r8 ; jne 0x108506 ; leave ; ret
0x0000000000096b68 : test r8b, r8b ; jne 0x96b56 ; ret
0x0000000000096c5f : test r8b, r8b ; jne 0x96c4f ; xor eax, eax ; ret
0x00000000000974c9 : test r8b, r8b ; jne 0x97473 ; mov rax, rdi ; ret
0x00000000001382b2 : test r8d, r8d ; je 0x1382c0 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139297 : test r8d, r8d ; je 0x1392a5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000010beca : test r8d, r8d ; jne 0x10bebe ; ret
0x00000000000a3678 : test r8d, r8d ; jne 0xa364e ; ret
0x00000000000a4b08 : test r8d, r8d ; jne 0xa4ac9 ; nop dword ptr [rax] ; ret
0x0000000000108617 : test rax, rax ; je 0x108626 ; ret
0x000000000010a0a9 : test rax, rax ; je 0x10a0c1 ; add rsp, 8 ; ret
0x000000000011157c : test rax, rax ; je 0x11158e ; mov rdi, rbx ; call rax
0x0000000000111863 : test rax, rax ; je 0x111875 ; mov rdi, rbx ; call rax
0x000000000011ee80 : test rax, rax ; je 0x11ee92 ; mov rdi, rsp ; call rax
0x000000000011ef5b : test rax, rax ; je 0x11ef6d ; mov rdi, rsp ; call rax
0x000000000011f814 : test rax, rax ; je 0x11f826 ; mov rdi, rbp ; call rax
0x00000000001208b2 : test rax, rax ; je 0x1208c4 ; mov rdi, r14 ; call rax
0x0000000000120b30 : test rax, rax ; je 0x120b42 ; mov rdi, rbx ; call rax
0x00000000001245da : test rax, rax ; je 0x1245ec ; mov rdi, r12 ; call rax
0x00000000001247b8 : test rax, rax ; je 0x1247cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000126a95 : test rax, rax ; je 0x126aa7 ; mov rdi, rbp ; call rax
0x0000000000126cb5 : test rax, rax ; je 0x126cc7 ; mov rdi, rbp ; call rax
0x00000000001277dc : test rax, rax ; je 0x1277f0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000127e9b : test rax, rax ; je 0x127ead ; mov rdi, r12 ; call rax
0x000000000012820c : test rax, rax ; je 0x128220 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012acbc : test rax, rax ; je 0x12acce ; pop rbx ; ret
0x000000000012ad28 : test rax, rax ; je 0x12ace2 ; pop rbx ; ret
0x000000000012ba68 : test rax, rax ; je 0x12ba7c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012c171 : test rax, rax ; je 0x12c185 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000022087 : test rax, rax ; je 0x22093 ; jmp rax
0x00000000000220b7 : test rax, rax ; je 0x220c3 ; jmp rax
0x000000000002d17d : test rax, rax ; je 0x2d189 ; call rax
0x000000000002e7a8 : test rax, rax ; je 0x2e7b4 ; call rax
0x000000000007892c : test rax, rax ; je 0x7893e ; pop rbx ; ret
0x00000000000838b6 : test rax, rax ; je 0x838c2 ; call rax
0x00000000000888cf : test rax, rax ; je 0x888e2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0fbb : test rax, rax ; je 0xc0fc7 ; call rax
0x00000000000c11c8 : test rax, rax ; je 0xc11d8 ; call rax
0x00000000000f1bab : test rax, rax ; je 0xf1bb8 ; ret
0x00000000000f3280 : test rax, rax ; je 0xf3291 ; mov qword ptr [rax], rdx ; ret
0x00000000000f76aa : test rax, rax ; je 0xf7751 ; call rax
0x00000000000f7821 : test rax, rax ; je 0xf7929 ; call rax
0x00000000000fa441 : test rax, rax ; jl 0xfa48c ; je 0xfa450 ; ret
0x000000000007c683 : test rax, rax ; jne 0x7c67e ; ret
0x0000000000086b4e : test rax, rax ; jne 0x86b47 ; xor eax, eax ; ret
0x00000000000f941e : test rax, rax ; jne 0xf93f8 ; xor eax, eax ; pop rbx ; ret
0x00000000000f95df : test rax, rax ; jne 0xf95b8 ; xor eax, eax ; pop rbx ; ret
0x00000000001978e0 : test rbp, rax ; call rdx
0x000000000010a2f5 : test rbx, rbx ; jne 0x10a309 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001652ba : test rbx, rbx ; jne 0x1652b1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016570e : test rbx, rbx ; jne 0x165707 ; pop rbx ; ret
0x0000000000073943 : test rbx, rbx ; jne 0x73959 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d504 : test rcx, rcx ; je 0x2d510 ; call rcx
0x0000000000111850 : test rdi, rdi ; jne 0x111846 ; pop rbx ; ret
0x000000000011184f : test rdi, rdi ; jne 0x111847 ; pop rbx ; ret
0x000000000016544a : test rdi, rdi ; jne 0x165440 ; pop rbx ; ret
0x00000000000848c2 : test rdx, rdi ; je 0x848d7 ; pop rbx ; ret
0x00000000001213e3 : test rdx, rdx ; je 0x1213f5 ; mov rdi, r12 ; call rdx
0x00000000001268a4 : test rdx, rdx ; je 0x1268b6 ; mov rdi, rbp ; call rdx
0x0000000000165043 : test rdx, rdx ; je 0x16504f ; call rdx
0x000000000016514c : test rdx, rdx ; je 0x16515d ; call rdx
0x000000000007e672 : test rdx, rdx ; je 0x7e67e ; call rdx
0x0000000000088ba1 : test rdx, rdx ; je 0x88bb8 ; bsf rax, rdx ; ret
0x0000000000088ba1 : test rdx, rdx ; je 0x88bb9 ; bsf rax, rdx ; ret
0x0000000000088b45 : test rdx, rdx ; je 0x88bc9 ; bsf rax, rdx ; ret
0x0000000000088d90 : test rdx, rdx ; je 0x88db8 ; bsf rax, rdx ; ret
0x0000000000088d90 : test rdx, rdx ; je 0x88db9 ; bsf rax, rdx ; ret
0x00000000000c1140 : test rdx, rdx ; je 0xc1150 ; call rdx
0x000000000010843c : test rdx, rdx ; jne 0x108436 ; leave ; ret
0x000000000012b9e4 : test rdx, rdx ; jne 0x12b9d6 ; pop rbx ; ret
0x000000000007418e : test rdx, rdx ; jne 0x74186 ; ret
0x000000000007af3e : test rdx, rdx ; jne 0x7af36 ; ret
0x0000000000086c08 : test rdx, rdx ; jne 0x86c06 ; ret
0x0000000000088c80 : test rsi, rsi ; jne 0x88c91 ; xor rax, rax ; ret
0x0000000000093e4d : test rsi, rsi ; jne 0x93e62 ; jmp 0x93e1c
0x0000000000096cbf : test sil, sil ; jne 0x96cb8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b5e : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007a827 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000013d2d1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000ffab9 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f377 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001a823d : wait ; add dword ptr [rax], eax ; loopne 0x1a8277 ; cmc ; jmp qword ptr [rcx]
0x00000000001a817d : wait ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000017955c : wait ; div bl ; ljmp ptr [rsi] ; div bl ; jmp rsp
0x0000000000179989 : wait ; hlt ; call qword ptr [rbx]
0x00000000001a0589 : wait ; int1 ; call qword ptr [rax]
0x000000000019fc04 : wait ; mov dh, 0xf0 ; jmp qword ptr [rdx]
0x0000000000133161 : wait ; ret 0xffee
0x00000000000f479d : wait ; sub al, 0 ; ret
0x00000000000a0f5d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0fdf : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a10e1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb0 : xabort -0xd ; ret
0x0000000000002bac : xbegin 0xfffffffff8c6efac ; ret
0x0000000000187ef9 : xchg ah, bh ; call qword ptr [rax + 0x10fffc87]
0x0000000000187565 : xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x0000000000178685 : xchg ah, bh ; call qword ptr [rax]
0x0000000000187621 : xchg ah, bh ; call rdx
0x000000000018761d : xchg ah, bh ; inc dword ptr [rdx - 0x7a] ; cld ; call rdx
0x00000000001875a1 : xchg ah, bh ; jmp rsi
0x00000000001380bf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001388e3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013a22f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137caf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001389d3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001387f3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001377bb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002e96b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000137fcb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e1cc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013d9ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013dddc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d5fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000adda4 : xchg bh, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x00000000001400fd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013ec01 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000013fe01 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f501 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013f801 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013eef9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013923b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000013ad8f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013a56f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000137a3f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000139d4f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000137d7f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000138d93 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001870a0 : xchg byte ptr [rax - 4], ah ; call qword ptr [rsi]
0x000000000013809b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d79b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013816b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a8af : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000138523 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000013a08f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013986f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000013aa4f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000137f1f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138f73 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138703 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000013770f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000139153 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001294f6 : xchg byte ptr [rcx], al ; add al, ch ; ret 0xffd9
0x00000000001a6d4d : xchg byte ptr [rcx], al ; add al, dl ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x000000000008281e : xchg byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137b0f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000195d24 : xchg byte ptr [rdi - 0x13], dh ; jmp qword ptr [rdx]
0x00000000000c4191 : xchg byte ptr [rdi - 0xa000000], bh ; ret
0x000000000013dc8c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013d4ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007aaf0 : xchg byte ptr [rdi], bl ; add byte ptr [rax], al ; jmp 0x7ab0c
0x000000000013e5bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137fef : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000139063 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001377df : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000139baf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001361e6 : xchg byte ptr [rdx - 0x2f140012], dl ; call qword ptr [rax]
0x0000000000137881 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001389a5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000138a95 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001388b5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000137bdf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000071d16 : xchg byte ptr [rsi - 0x3d770000], dl ; jmp 0x71cd8
0x000000000013f1a6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000139ce5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a9e5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001400a6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f7a6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f4a6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a505 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013db8d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013ee9e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013e4bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000137e4f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000138613 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001974e5 : xchg ch, ch ; jmp qword ptr [rdx]
0x000000000013c53f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c35f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013cd37 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013bc57 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013cb57 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000095464 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x00000000001a160d : xchg cl, dh ; jmp qword ptr [rdx]
0x000000000013ad25 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a025 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000139b45 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a845 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013dcdd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002591 : xchg dh, ch ; ret 0x88ad
0x000000000013d4fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001378a5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001387c5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001385e5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001386d5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001384f5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000b8396 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000dca0b : xchg dword ptr [rax - 0x76fffff4], esi ; ret 0x8d48
0x00000000000675cc : xchg dword ptr [rax - 0x76fffff5], ebp ; ret 0x348
0x0000000000023c04 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000067545 : xchg dword ptr [rbp - 0x76ffffe9], edx ; ret 0x348
0x00000000000679f4 : xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x00000000000a3677 : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000002db37 : xchg dword ptr [rbp - 0x7c000004], esi ; ret 0x8901
0x00000000000d99b2 : xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret 0xc189
0x0000000000065a7d : xchg dword ptr [rbx - 0x7cfffff4], eax ; ret 0x8308
0x0000000000105c62 : xchg dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000005c360 : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000173cec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000e4e81 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000059890 : xchg dword ptr [rcx - 0x77000000], edi ; ret 0x348
0x0000000000081ae8 : xchg dword ptr [rcx - 0x9fffffb], edi ; ret
0x00000000001a6dc5 : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x23], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d95 : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d94 : xchg dword ptr [rcx], r8d ; add byte ptr [rax - 0x23], cl ; hlt ; jmp qword ptr [rcx]
0x000000000006763e : xchg dword ptr [rdi - 0x76fffff6], esp ; ret 0x348
0x0000000000058f52 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x000000000006770c : xchg dword ptr [rdi - 0x7d000000], eax ; ret 0x8308
0x000000000010813d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x10813d ; pop rdx ; pop r10 ; ret
0x00000000000f9f44 : xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000186a70 : xchg dword ptr [rdx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x0000000000067913 : xchg dword ptr [rip - 0x76fffffd], ecx ; ret 0x348
0x000000000004ba8d : xchg dword ptr [rip - 0x77cb800], eax ; dec dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000006723b : xchg dword ptr [rip - 0x7cfffffb], edi ; ret 0x8308
0x00000000000590cb : xchg dword ptr [rsi - 0x77000000], esp ; ret 0x348
0x0000000000173e8b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000059f3d : xchg dword ptr [rsp + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013b898 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000027339 : xchg eax, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000000bdaa3 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000600a5 : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000018883d : xchg eax, ebp ; add byte ptr [rax], al ; je 0x188859 ; jmp 0x188849
0x00000000001a7bbd : xchg eax, ebp ; add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a7ba5 : xchg eax, ebp ; add dword ptr [rax], eax ; test al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x0000000000187f21 : xchg eax, ebp ; cld ; call qword ptr [rax + 0x10fffc96]
0x00000000001786b1 : xchg eax, ebp ; cld ; push qword ptr [rax - 0x6a] ; cld ; jmp rax
0x00000000001ac124 : xchg eax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000001959f1 : xchg eax, ebp ; in eax, dx ; jmp rsi
0x0000000000196104 : xchg eax, ebp ; jnp 0x1960f7 ; jmp qword ptr [rdx]
0x00000000001ae26c : xchg eax, ebp ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001869f0 : xchg eax, ebp ; mov eax, 0xbb11fffd ; std ; call qword ptr [rcx]
0x00000000001a1ef4 : xchg eax, ebp ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000019ca09 : xchg eax, ebp ; out dx, al ; call qword ptr [rdx]
0x00000000000020c3 : xchg eax, ebp ; ret
0x00000000000409b0 : xchg eax, ebp ; ret 0x13
0x00000000000dfce0 : xchg eax, ebp ; ret 0x2041
0x000000000003e82f : xchg eax, ebp ; ret 0x2948
0x00000000000a9da7 : xchg eax, ebp ; ret 0x294c
0x00000000000b1971 : xchg eax, ebp ; ret 0x3145
0x00000000000cb93e : xchg eax, ebp ; ret 0x460f
0x000000000006d769 : xchg eax, ebp ; ret 0x5389
0x0000000000095663 : xchg eax, ebp ; ret 0x5474
0x0000000000128d00 : xchg eax, ebp ; ret 0x548d
0x0000000000076f93 : xchg eax, ebp ; ret 0x60e9
0x00000000000201c6 : xchg eax, ebp ; ret 0x8341
0x00000000000490d5 : xchg eax, ebp ; ret 0x8348
0x00000000000d3c41 : xchg eax, ebp ; ret 0x840f
0x000000000007d647 : xchg eax, ebp ; ret 0x8441
0x0000000000078af4 : xchg eax, ebp ; ret 0x8445
0x00000000000490de : xchg eax, ebp ; ret 0x854d
0x00000000000c759d : xchg eax, ebp ; ret 0x8944
0x00000000000cf448 : xchg eax, ebp ; ret 0x8d47
0x000000000008179e : xchg eax, ebp ; ret 0x948
0x0000000000032375 : xchg eax, ebp ; ret 0x953d
0x0000000000032d8c : xchg eax, ebp ; ret 0x9be9
0x000000000003e2b5 : xchg eax, ebp ; ret 0xb60f
0x0000000000048fb9 : xchg eax, ebp ; ret 0xc031
0x00000000000db0a2 : xchg eax, ebp ; ret 0xc209
0x00000000000af60c : xchg eax, ebp ; ret 0xc7e9
0x00000000001127ca : xchg eax, ebp ; ret 0xc985
0x00000000000a5d08 : xchg eax, ebp ; ret 0xceb
0x00000000000fa25c : xchg eax, ebp ; ret 0xcfeb
0x0000000000121c84 : xchg eax, ebp ; ret 0xd089
0x00000000001126fb : xchg eax, ebp ; ret 0xd120
0x00000000000b0cd4 : xchg eax, ebp ; ret 0xd138
0x0000000000032a2c : xchg eax, ebp ; ret 0xd284
0x000000000003e47f : xchg eax, ebp ; ret 0xd349
0x000000000006df57 : xchg eax, ebp ; ret 0xdaf7
0x000000000003e3c4 : xchg eax, ebp ; ret 0xe083
0x00000000000e2ea4 : xchg eax, ebp ; ret 0xe2c1
0x00000000000b19bb : xchg eax, ebp ; ret 0xf749
0x00000000000a4603 : xchg eax, ebp ; ret 0xf883
0x00000000000a84e4 : xchg eax, ebp ; ret 0xfeb
0x0000000000048f88 : xchg eax, ebp ; ret 0xff31
0x0000000000122a9c : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000005dc3a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cb91e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000019ff5c : xchg eax, ebp ; sal al, cl ; jmp qword ptr [rdx]
0x00000000000f227c : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129754 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001322ef : xchg eax, ebp ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000002b5d : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007b782 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000007da3b : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000001a7955 : xchg eax, ebx ; add dword ptr [rax], eax ; cmp byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000160080 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003905 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000187edd : xchg eax, ebx ; cld ; call qword ptr [rax + 0x10fffc94]
0x0000000000187f1d : xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000001ae765 : xchg eax, ebx ; cmc ; jmp qword ptr [rdx]
0x0000000000179781 : xchg eax, ebx ; hlt ; dec eax ; xchg eax, edx ; hlt ; jmp qword ptr [rax]
0x0000000000195c94 : xchg eax, ebx ; jne 0x195c87 ; jmp qword ptr [rdx]
0x0000000000191874 : xchg eax, ebx ; jns 0x191864 ; jmp qword ptr [rdx]
0x000000000009cdac : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000142d22 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000333c2 : xchg eax, ebx ; ret
0x0000000000074a14 : xchg eax, ebx ; ret 0x3948
0x000000000003a47f : xchg eax, ebx ; ret 0x3949
0x000000000003a767 : xchg eax, ebx ; ret 0x8348
0x0000000000049ab0 : xchg eax, ebx ; ret 0x841
0x00000000000e35e0 : xchg eax, ebx ; ret 0x944
0x0000000000063580 : xchg eax, ebx ; ret 0xffff
0x000000000018685d : xchg eax, ebx ; sti ; call qword ptr [rax + 0x10fffb94]
0x00000000001217ee : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000007a4af : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006d356 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000187ed9 : xchg eax, ecx ; cld ; call qword ptr [rax]
0x000000000013ae31 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000021bfe : xchg eax, ecx ; push -0xcfffff7 ; ret
0x00000000000823cb : xchg eax, ecx ; ret
0x0000000000107c53 : xchg eax, ecx ; ret 0x2b
0x0000000000179c60 : xchg eax, ecx ; retf ; hlt ; inc dword ptr [rbx + rcx*8 - 0xc] ; jmp rsp
0x0000000000179c0c : xchg eax, ecx ; retf ; hlt ; inc dword ptr [rsp + rcx*8 - 0xc] ; jmp rsp
0x0000000000186859 : xchg eax, ecx ; sti ; call qword ptr [rax]
0x000000000013955f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e6bf0 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x4c6
0x000000000005fa0b : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x111743], al ; call qword ptr [rax]
0x000000000005fd1f : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116b43], al ; call qword ptr [rax]
0x0000000000188895 : xchg eax, edi ; add byte ptr [rax], al ; je 0x1888bf ; jmp 0x1888a1
0x0000000000071bab : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71b75
0x0000000000071baa : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71b76
0x00000000000e4f4c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000083f8d : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000018adb5 : xchg eax, edi ; add dword ptr [rax], eax ; hlt ; jb 0x18adb4 ; jmp rsp
0x000000000018adb4 : xchg eax, edi ; add dword ptr [rax], eax ; hlt ; jb 0x18adb5 ; jmp rsp
0x00000000001a7e4d : xchg eax, edi ; add dword ptr [rax], eax ; loopne 0x1a7e82 ; cmc ; jmp qword ptr [rcx]
0x00000000000b4d7e : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000187ee9 : xchg eax, edi ; cld ; call qword ptr [rax]
0x00000000001aa5d1 : xchg eax, edi ; cmc ; call rsp
0x0000000000199e44 : xchg eax, edi ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018a6a1 : xchg eax, edi ; int1 ; call rsp
0x00000000001a1c6c : xchg eax, edi ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000082fc5 : xchg eax, edi ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000c248e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000fcbf6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ed539 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000f03a4 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d2fc8 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000174338 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000072006 : xchg eax, edx ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71fcc
0x00000000001978dd : xchg eax, edx ; add byte ptr [rax], al ; test rbp, rax ; call rdx
0x0000000000187f19 : xchg eax, edx ; cld ; call qword ptr [rax + 0x10fffc93]
0x000000000017977d : xchg eax, edx ; hlt ; jmp qword ptr [rax]
0x0000000000039b4a : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000000c4b2c : xchg eax, edx ; idiv edi ; push rsi ; ret
0x0000000000195301 : xchg eax, edx ; in eax, dx ; call qword ptr [rax]
0x0000000000195289 : xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000195349 : xchg eax, edx ; in eax, dx ; jmp rsp
0x0000000000175bfd : xchg eax, edx ; jae 0x175bda ; push rsi ; pop rdx ; je 0x175bcf ; ret 0xacfc
0x0000000000187310 : xchg eax, edx ; pop rax ; cld ; call qword ptr [rdx]
0x0000000000187308 : xchg eax, edx ; pop rcx ; cld ; call qword ptr [rdx]
0x0000000000187128 : xchg eax, edx ; pop rdi ; cld ; jmp qword ptr [rdx]
0x0000000000187300 : xchg eax, edx ; pop rdx ; cld ; call qword ptr [rdx]
0x0000000000187318 : xchg eax, edx ; push rdi ; cld ; call qword ptr [rdx]
0x000000000011f63a : xchg eax, edx ; ret 0
0x00000000000ae946 : xchg eax, edx ; ret 0x8941
0x00000000000ed51e : xchg eax, edx ; ret 0x970f
0x00000000000f03a7 : xchg eax, edx ; ret 0xcc80
0x00000000000c2491 : xchg eax, edx ; ret 0xd029
0x00000000000d2fcb : xchg eax, edx ; ret 0xd138
0x0000000000173cef : xchg eax, edx ; ret 0xf869
0x000000000013cead : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000187b0c : xchg eax, edx ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x00000000001382b7 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000187614 : xchg eax, edx ; xchg esp, edi ; jmp qword ptr [rdx]
0x0000000000160380 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008388e : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014c463 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000071d17 : xchg eax, esi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71cd7
0x000000000018885d : xchg eax, esi ; add byte ptr [rax], al ; sbb bl, ch ; call rsp
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a7d05 : xchg eax, esi ; add dword ptr [rax], eax ; call 0x111a723b
0x00000000001a7ca5 : xchg eax, esi ; add dword ptr [rax], eax ; cwde ; sub ch, dh ; jmp qword ptr [rcx]
0x00000000001a7cbd : xchg eax, esi ; add dword ptr [rax], eax ; mov al, 0x28 ; cmc ; jmp qword ptr [rcx]
0x000000000018adcd : xchg eax, esi ; add dword ptr [rax], eax ; pop rax ; jne 0x18adcc ; call rsp
0x00000000001a7c8d : xchg eax, esi ; add dword ptr [rax], eax ; sub byte ptr [rax], 0xf5 ; jmp qword ptr [rcx]
0x0000000000187ee5 : xchg eax, esi ; cld ; call qword ptr [rax + 0x10fffc97]
0x0000000000187f25 : xchg eax, esi ; cld ; call qword ptr [rax]
0x00000000001786b5 : xchg eax, esi ; cld ; jmp rax
0x00000000001ae885 : xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x000000000019b584 : xchg eax, esi ; cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000179879 : xchg eax, esi ; hlt ; jmp rdx
0x000000000016043d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186a50 : xchg eax, esi ; mov ecx, 0xbb11fffd ; std ; call qword ptr [rcx]
0x0000000000187084 : xchg eax, esi ; movsxd rdi, esp ; jmp qword ptr [rsi]
0x000000000016039b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c61c4 : xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000110e4f : xchg eax, esi ; ret
0x00000000000887ac : xchg eax, esi ; ret 0x144
0x00000000000c1bce : xchg eax, esi ; ret 0x2f
0x0000000000109cac : xchg eax, esi ; ret 0x394c
0x000000000007d640 : xchg eax, esi ; ret 0x8348
0x000000000017658c : xchg eax, esi ; ret 0xcd11
0x00000000001603ec : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ba0e8 : xchg eax, esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000187aa8 : xchg eax, esi ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rsi]
0x00000000001a17fc : xchg eax, esi ; xchg cl, dh ; jmp qword ptr [rdx]
0x000000000018cab4 : xchg eax, esp ; add al, byte ptr ds:[rax] ; xchg eax, esp ; sub edi, eax ; jmp rsp
0x00000000000e1fef : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000018a17c : xchg eax, esp ; add dword ptr [r8], r8d ; push rsp ; fsub st(7), st(0) ; jmp rsp
0x00000000000f2ae0 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000008b24f : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018cbc4 : xchg eax, esp ; add r8b, byte ptr [rax] ; adc al, 0x3f ; clc ; jmp rsp
0x00000000000aa29c : xchg eax, esp ; and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000045c75 : xchg eax, esp ; and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000e1fed : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000027406 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000040087 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000073dd8 : xchg eax, esp ; and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000189bb4 : xchg eax, esp ; and al, byte ptr [rcx] ; add ah, al ; out dx, eax ; call rsp
0x00000000001a0be4 : xchg eax, esp ; and eax, 0xc7780001 ; int1 ; call qword ptr [rbx]
0x0000000000187ee1 : xchg eax, esp ; cld ; call qword ptr [rax]
0x0000000000189968 : xchg eax, esp ; cld ; out dx, al ; jmp rsp
0x00000000001ae7f5 : xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x0000000000199bbc : xchg eax, esp ; fldln2 ; jmp qword ptr [rdx]
0x000000000018b3d8 : xchg eax, esp ; imul esi, ebp, -1 ; pop rsp ; ret
0x0000000000189394 : xchg eax, esp ; in eax, 0 ; add ah, al ; mov ch, dh ; call rsp
0x00000000001a09e4 : xchg eax, esp ; je 0x1a09db ; jmp qword ptr [rdx]
0x00000000001a5ee4 : xchg eax, esp ; js 0x1a5eef ; add al, cl ; scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a85e4 : xchg eax, esp ; lahf ; add dword ptr [rax], eax ; cwde ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019d6e4 : xchg eax, esp ; lock add byte ptr [rax], al ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000188c0c : xchg eax, esp ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; adc al, 0xe2 ; jmp 0x188c1a
0x00000000001ac7e4 : xchg eax, esp ; loope 0x1ac7ef ; add byte ptr [rax], bl ; sti ; cmc ; call qword ptr [rax]
0x0000000000105af4 : xchg eax, esp ; mov byte ptr [rbx], ch ; add al, ch ; ret
0x00000000000c10d8 : xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x000000000018b30c : xchg eax, esp ; mov ecx, 0xd7f40001 ; hlt ; jmp rsp
0x0000000000108f1b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000001ad8f4 : xchg eax, esp ; out dx, al ; add dword ptr [rax], eax ; ret 0xf619
0x0000000000188af0 : xchg eax, esp ; push rdx ; jmp 0x188af6
0x000000000018e3e8 : xchg eax, esp ; push rdx ; sti ; call rsp
0x000000000017679f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x176730 ; ret 0x48f
0x000000000001f4c3 : xchg eax, esp ; ret
0x000000000007f98a : xchg eax, esp ; ret 0x1589
0x00000000000a774a : xchg eax, esp ; ret 0x294c
0x00000000000b1b5d : xchg eax, esp ; ret 0x2b3c
0x00000000000cec97 : xchg eax, esp ; ret 0x38b
0x00000000000df971 : xchg eax, esp ; ret 0x3d
0x0000000000129721 : xchg eax, esp ; ret 0x3d83
0x00000000000e7558 : xchg eax, esp ; ret 0x403c
0x00000000000c5aef : xchg eax, esp ; ret 0x45e9
0x00000000000345b3 : xchg eax, esp ; ret 0x70e9
0x00000000000eeb82 : xchg eax, esp ; ret 0x7c83
0x0000000000047c23 : xchg eax, esp ; ret 0x8341
0x00000000000c3fd5 : xchg eax, esp ; ret 0x8548
0x00000000000b0e9e : xchg eax, esp ; ret 0x8840
0x00000000000cc833 : xchg eax, esp ; ret 0x8944
0x00000000000b1d26 : xchg eax, esp ; ret 0x894c
0x0000000000103ccd : xchg eax, esp ; ret 0x89eb
0x00000000000cd308 : xchg eax, esp ; ret 0x8b48
0x0000000000021e07 : xchg eax, esp ; ret 0x8d48
0x00000000000b0f7e : xchg eax, esp ; ret 0x943a
0x0000000000029656 : xchg eax, esp ; ret 0xb60f
0x00000000000d65d7 : xchg eax, esp ; ret 0xc030
0x0000000000021f01 : xchg eax, esp ; ret 0xc031
0x000000000013ceb0 : xchg eax, esp ; ret 0xc085
0x000000000005b993 : xchg eax, esp ; ret 0xd189
0x000000000004a670 : xchg eax, esp ; ret 0xd284
0x00000000000cd599 : xchg eax, esp ; ret 0xd5e9
0x000000000007076c : xchg eax, esp ; ret 0xdaf7
0x000000000012f47e : xchg eax, esp ; ret 0xea83
0x000000000007fc0b : xchg eax, esp ; ret 0xee9
0x00000000000a620d : xchg eax, esp ; ret 0xf983
0x00000000000d0d67 : xchg eax, esp ; ret 0xfd83
0x00000000000cef72 : xchg eax, esp ; ret 0xff83
0x0000000000189768 : xchg eax, esp ; ret 0xffee
0x00000000000a3d4c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000b721e : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000ecf3f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000046663 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000012e946 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000004d6f0 : xchg eax, esp ; shr eax, -0x67 ; ret 0xffff
0x0000000000186861 : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000018cab8 : xchg eax, esp ; sub edi, eax ; jmp rsp
0x000000000018bfd0 : xchg eax, esp ; sub esi, edi ; call rsp
0x000000000018885c : xchg eax, esp ; xchg eax, esi ; add byte ptr [rax], al ; sbb bl, ch ; call rsp
0x00000000001abde4 : xchg eax, esp ; xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x000000000018d3c0 : xchg eax, esp ; xor edi, ecx ; jmp rsp
0x0000000000197735 : xchg ebp, ebp ; jmp qword ptr [rdx]
0x0000000000121d58 : xchg ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000005362e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001ade4d : xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000018683d : xchg ebx, edi ; call qword ptr [rax + 0x10fffb88]
0x00000000001a1905 : xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000017859d : xchg ecx, esi ; jmp rax
0x00000000000f99ac : xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018c509 : xchg edi, esi ; jmp rsp
0x00000000000ab439 : xchg edi, esp ; idiv edi ; dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x000000000005a6d0 : xchg edx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a2bd9 : xchg edx, esi ; jmp qword ptr [rax]
0x00000000001a2bf1 : xchg edx, esi ; jmp qword ptr [rcx]
0x00000000000acf02 : xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001af8a1 : xchg esi, esi ; jmp qword ptr [rdi]
0x00000000000d43c2 : xchg esp, ecx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000187ebd : xchg esp, edi ; call qword ptr [rax + 0x10fffc88]
0x0000000000187efd : xchg esp, edi ; call qword ptr [rax]
0x0000000000187615 : xchg esp, edi ; jmp qword ptr [rdx]
0x0000000000187559 : xchg esp, edi ; jmp rax
0x0000000000121d57 : xchg r13d, r15d ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000019ca08 : xchg rax, rbp ; out dx, al ; call qword ptr [rdx]
0x0000000000187620 : xchg spl, dil ; call rdx
0x000000000000c281 : xlatb ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019bdcd : xlatb ; add byte ptr [rax], al ; xor byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x0000000000171229 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001abde5 : xlatb ; add dword ptr [rax], eax ; fsubr st(2) ; cmc ; jmp qword ptr [rax]
0x0000000000142be9 : xlatb ; add r9, r11 ; jmp r9
0x000000000018b311 : xlatb ; hlt ; jmp rsp
0x000000000004978b : xlatb ; jbe 0x49789 ; nop ; mov rax, rsi ; pop rbx ; ret
0x00000000000848c4 : xlatb ; je 0x848d5 ; pop rbx ; ret
0x0000000000108249 : xlatb ; jmp rax
0x0000000000117d4c : xlatb ; jne 0x117d28 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f83c6 : xlatb ; jne 0xf83bf ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000174d63 : xlatb ; jo 0x174ddf ; mov ebp, 0xfb67d10d ; ret
0x0000000000049a52 : xlatb ; mov byte ptr [rsi], al ; jne 0x49a38 ; mov rax, rsi ; ret
0x0000000000178cc8 : xlatb ; mov dr0, edx ; jmp rax
0x0000000000118046 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000007dfcf : xlatb ; neg rdi ; call qword ptr [rax]
0x0000000000189821 : xlatb ; out dx, al ; call rsp
0x000000000019d079 : xlatb ; out dx, al ; jmp rdx
0x0000000000086f99 : xlatb ; ret
0x0000000000088b1f : xlatb ; ret 0x4166
0x0000000000176206 : xlatb ; ret 0x4e27
0x0000000000003230 : xlatb ; ret 0x5a51
0x000000000008a987 : xlatb ; ret 0x94c
0x000000000008bcef : xlatb ; ret 0xc085
0x0000000000086f90 : xlatb ; ret 0xc148
0x00000000000971cb : xlatb ; ret 0xf188
0x0000000000063915 : xlatb ; ret 0xfffc
0x0000000000093a31 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000097066 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009d21e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000162536 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000096fc4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000088466 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000088326 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000881e6 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000880a6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000087f66 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000087e26 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000087ce6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000087ba6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000087a66 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000087926 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000877e6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000876a6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000087566 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000087426 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000872e6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000000fc821 : xlatb ; sbb ch, byte ptr [rax + rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000162532 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008a925 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008a936 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000018e599 : xlatb ; std ; jmp rsp
0x00000000001a194c : xlatb ; xchg ecx, esi ; jmp qword ptr [rdx]
0x000000000019b26c : xlatb ; xor dh, ch ; jmp qword ptr [rdx]
0x00000000000376a8 : xlatb ; xor eax, eax ; ret
0x00000000000c4c70 : xor ah, 0xff ; push rsi ; ret
0x000000000009ca18 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009c9ae : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000186f1d : xor ah, bh ; inc dword ptr [rax + 0x32] ; cld ; call qword ptr [rax]
0x0000000000186f3d : xor ah, bh ; inc dword ptr [rax] ; xor bh, ah ; call rax
0x00000000001a24f0 : xor ah, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000186898 : xor ah, byte ptr [rbp - 0x59cd0003] ; std ; call rax
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2559 ; loop 0x25a4 ; ret 0x23cb
0x00000000001b0350 : xor al, 0 ; add byte ptr [rax], al ; add al, 0x1d ; add al, byte ptr [rax] ; ret 0xfff6
0x000000000007ca39 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d44d : xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007c9d4 : xor al, 0 ; add dword ptr [rip + 0x343fe7], 1 ; ret
0x000000000007aa85 : xor al, 0 ; jne 0x7ca64 ; ret
0x000000000007ca10 : xor al, 0 ; jne 0x7cc8d ; ret
0x000000000007df44 : xor al, 0 ; jne 0x84a83 ; ret
0x000000000007c955 : xor al, 0 ; ret
0x000000000018b0d0 : xor al, 0x14 ; hlt ; call rsp
0x00000000000829c5 : xor al, 0x18 ; pop rbx ; ret
0x00000000000ae2b8 : xor al, 0x19 ; clc ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000173cea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000001a0584 : xor al, 0x1f ; add dword ptr [rax], eax ; js 0x1a052c ; int1 ; call qword ptr [rax]
0x0000000000082ecc : xor al, 0x24 ; jmp rax
0x0000000000093e4b : xor al, 0x24 ; test rsi, rsi ; jne 0x93e64 ; jmp 0x93e1e
0x00000000000c1e44 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000004885e : xor al, 0x37 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d77db : xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000018dc48 : xor al, 0x3d ; cli ; call rsp
0x00000000000970eb : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000001b5384 : xor al, 0x6d ; add al, byte ptr [rax] ; cmp byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a5784 : xor al, 0x71 ; add dword ptr [rax], eax ; jns 0x1a5786 ; jmp qword ptr [rcx]
0x00000000000a1c51 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000a1c11 : xor al, 0x82 ; add rdx, rsi ; jmp rdx
0x0000000000020bf2 : xor al, 0x89 ; inc dword ptr [rdi + 4] ; ret
0x00000000001a7f84 : xor al, 0x99 ; add dword ptr [rax], eax ; sub al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8284 : xor al, 0x9c ; add dword ptr [rax], eax ; pop rax ; xor ch, dh ; jmp qword ptr [rcx]
0x0000000000127828 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x000000000002e29e : xor al, 0xb2 ; add r14, r10 ; jmp r14
0x00000000001aaa84 : xor al, 0xc4 ; add dword ptr [rax], eax ; or ah, al ; clc ; jmp qword ptr [rsi]
0x000000000018905c : xor al, 0xca ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001ab084 : xor al, 0xca ; add dword ptr [rax], eax ; sbb dl, bl ; cmc ; call qword ptr [rax]
0x0000000000174eca : xor al, 0xd8 ; ret
0x000000000018e638 : xor al, 0xe1 ; std ; jmp rsp
0x0000000000190585 : xor al, 0xea ; jmp qword ptr [rdx]
0x000000000019b2b5 : xor al, 0xee ; jmp qword ptr [rdx]
0x000000000018b141 : xor al, 0xf4 ; jmp rsp
0x000000000018b621 : xor al, 0xf6 ; jmp rsp
0x00000000001b5f8d : xor al, 0xf7 ; jmp qword ptr [rdx]
0x0000000000186781 : xor al, 0xfb ; jmp qword ptr [rax]
0x0000000000186f25 : xor al, 0xfc ; call qword ptr [rax]
0x0000000000186ea5 : xor al, 0xfc ; call rax
0x00000000000a2ba8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000018d2f0 : xor al, 2 ; stc ; call rsp
0x00000000000fa5fb : xor al, al ; or eax, edi ; ret
0x00000000000e4623 : xor al, al ; ret
0x00000000001ad7e6 : xor al, byte ptr [rcx + 0xd1cfff5] ; mov ch, 0x80 ; cmc ; jmp qword ptr [rdx]
0x00000000000eb14a : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000018c905 : xor al, byte ptr [rdx] ; add byte ptr [rdx + rdx - 8], dl ; call rsp
0x0000000000178758 : xor al, ch ; std ; call qword ptr [rax]
0x00000000000efe08 : xor ax, ax ; ret
0x0000000000186f21 : xor bh, ah ; call qword ptr [rax]
0x0000000000186ea1 : xor bh, ah ; call rax
0x000000000018c081 : xor bh, dh ; jmp rsp
0x000000000008bf4c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000107a72 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001a8270 : xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000a2c9c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008be0d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000001113f2 : xor byte ptr [r8 + 1], dil ; pop rbx ; ret
0x0000000000047257 : xor byte ptr [r8 - 0x75], r9b ; jg 0x472cd ; xor eax, eax ; ret
0x00000000000d4daf : xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000722bb : xor byte ptr [rax + 0x29], cl ; ret
0x000000000004444c : xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x00000000000d4ee7 : xor byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000086fbf : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000086ea1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000001113f3 : xor byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000000970c6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000016678c : xor byte ptr [rax - 0x14], bh ; inc dword ptr [rax] ; js 0x166786 ; call rax
0x000000000011efa7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a46f1 ; pop rbx ; ret
0x000000000011ef6f : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a4729 ; pop rbx ; ret
0x000000000011eeb0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x2a47e8 ; pop rbx ; ret
0x000000000009f8f7 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047598 : xor byte ptr [rax - 0x75], cl ; jbe 0x47614 ; xor eax, eax ; ret
0x0000000000047258 : xor byte ptr [rax - 0x75], cl ; jg 0x472cc ; xor eax, eax ; ret
0x0000000000047597 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47615 ; xor eax, eax ; ret
0x0000000000086dcf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000105fcb : xor byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x72208
0x000000000012e8da : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000a9da2 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd32bf
0x00000000000b55f6 : xor byte ptr [rax - 0x77], cl ; jmp 0x48cddf4c
0x00000000000b5e8e : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde7e4
0x00000000000b5f1a : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde870
0x00000000000b5f9b : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccde8f1
0x00000000000b6ebb : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccdf811
0x00000000000dd409 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000b6397 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e5e60 : xor byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000006cb31 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x00000000000e2407 : xor byte ptr [rax - 0x77], cl ; ret 0xf980
0x000000000005a032 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001aee20 : xor byte ptr [rax - 0xa], bl ; call qword ptr [rdi]
0x00000000001867e0 : xor byte ptr [rax - 5], ah ; call qword ptr [rax]
0x00000000000be442 : xor byte ptr [rax], al ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000e465c : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000008ac18 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021ee3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000031dad : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000036be3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a1c75 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000074f01 : xor byte ptr [rax], al ; je 0x74f18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1177 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000019bdd0 : xor byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x00000000000a2ca0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000a2c9f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000088769 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000010bf6b : xor byte ptr [rbp - 0x16], dh ; ret
0x00000000000838ca : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c2d63 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019bf2f : xor byte ptr [rbx + 0xae60206], al ; ret
0x000000000008cabb : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000001907f0 : xor byte ptr [rbx - 0x16], cl ; jmp rsp
0x000000000007bebe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000187c9c : xor byte ptr [rbx - 0x5d4f0004], ah ; cld ; jmp qword ptr [rax]
0x0000000000186d10 : xor byte ptr [rbx], al ; cld ; push rax ; add al, 0xfc ; call rax
0x00000000000a2c9d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001a7680 : xor byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000a7b7b : xor byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000c9e6b : xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x00000000000cef6c : xor byte ptr [rcx + 0xf40247c], cl ; xchg eax, esp ; ret 0xff83
0x0000000000059d2c : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018ef76 : xor byte ptr [rcx + rbp*8 - 1], ah ; sbb al, 0xd ; sbb byte ptr [rbx - 0x17], bl ; jmp qword ptr [rdx]
0x0000000000080950 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x0000000000055ebb : xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000005523a : xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000055afb : xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000187978 : xor byte ptr [rcx - 0x7f5f0004], al ; cld ; jmp qword ptr [rax]
0x00000000001867c0 : xor byte ptr [rcx - 5], dl ; call qword ptr [rax]
0x00000000000e1b52 : xor byte ptr [rcx], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116383 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000f07cc : xor byte ptr [rcx], 0xc0 ; ret
0x00000000000e20fd : xor byte ptr [rcx], al ; ret
0x00000000000d4db0 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fda22 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000d0cf2 : xor byte ptr [rcx], dl ; je 0xd0d06 ; xor eax, eax ; ret
0x0000000000186ddc : xor byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x0000000000186e78 : xor byte ptr [rdi], ch ; cld ; call qword ptr [rax]
0x0000000000093024 : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001775b4 : xor byte ptr [rdx - 0x12], dh ; call rax
0x0000000000191d37 : xor byte ptr [rdx], al ; ret
0x000000000018670c : xor byte ptr [rip + 0x1600fffb], dl ; sti ; call rax
0x000000000016012f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008a8ec : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008be0e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001872a4 : xor byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x10fffc55]
0x0000000000186810 : xor byte ptr [rsi - 5], 0xff ; sal byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x0000000000186d78 : xor byte ptr [rsi], al ; cld ; call qword ptr [rax]
0x0000000000186734 : xor byte ptr [rsi], bl ; sti ; jmp qword ptr [rax]
0x000000000007d44b : xor byte ptr [rsi], dh ; xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001786c4 : xor byte ptr [rsp + rdi*8 - 0x3625f01], bl ; call qword ptr [rax]
0x00000000001a6d80 : xor ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000186af4 : xor ch, bl ; sti ; call qword ptr [rax]
0x00000000000a0f08 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0f1e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0f40 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0f5e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0f7e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0fa4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0fc0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a0fe0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1000 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1026 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1048 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1066 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1086 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a10a2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a10c2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a10e2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1102 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1128 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1178 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0e4e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0e6c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0e8c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0eae : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0ece : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a0eee : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0d84 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0d96 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0dac : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0dc4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0dda : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0dec : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0e0a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0e16 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a0e2c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0d70 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001a8271 : xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a12ef : xor cl, 0xff ; sbb al, 0xd ; jle 0x1a12f0 ; jmp qword ptr [rdx]
0x00000000001a12ee : xor cl, 0xff ; sbb al, 0xd ; jle 0x1a12f1 ; jmp qword ptr [rdx]
0x00000000001a1337 : xor cl, 0xff ; sbb al, 0xd ; jle 0x1a1338 ; jmp qword ptr [rdx]
0x00000000000539f2 : xor cl, bh ; add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000199b74 : xor cl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000012786f : xor cl, byte ptr [rax - 0x77] ; jp 0x127881 ; ret
0x0000000000127887 : xor cl, byte ptr [rax - 0x77] ; jp 0x127899 ; ret
0x00000000001280cf : xor cl, byte ptr [rax - 0x77] ; jp 0x1280e1 ; ret
0x00000000001280e7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1280f9 ; ret
0x0000000000128117 : xor cl, byte ptr [rax - 0x77] ; jp 0x128129 ; ret
0x00000000000470ad : xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000000b0386 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000b814e : xor cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000e8746 : xor cl, byte ptr [rax - 0x7d] ; ret
0x0000000000123660 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000d0d07 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000010c93b : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x000000000007f988 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x00000000001035c1 : xor cl, ch ; ret
0x000000000003f900 : xor cl, ch ; ret 0xfff0
0x000000000009c890 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000186e50 : xor dh, 0xfb ; call rax
0x000000000018c0d1 : xor dh, bh ; call rsp
0x000000000019bdd1 : xor dh, ch ; call qword ptr [rsi]
0x000000000010b97f : xor dh, ch ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001a83a9 : xor dh, ch ; jmp qword ptr [rcx]
0x000000000019b26d : xor dh, ch ; jmp qword ptr [rdx]
0x0000000000186f20 : xor dil, spl ; call qword ptr [rax]
0x00000000000e26e1 : xor dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000096cbe : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000004c6ac : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000b077b : xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000000000b2223 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000186a00 : xor dword ptr [rcx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x0000000000109e7f : xor dword ptr [rcx], 0xffffffc0 ; ret
0x0000000000186a20 : xor dword ptr [rdx - 0x44ee0003], edi ; std ; call qword ptr [rcx]
0x000000000018c8cd : xor dword ptr [rdx], eax ; add byte ptr [rdi + rcx], dl ; clc ; call rsp
0x00000000000463e6 : xor eax, 0x195 ; call rax
0x00000000000f05e2 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000006f8bb : xor eax, 0x30 ; call rax
0x000000000007d4f5 : xor eax, 0x34 ; add byte ptr [rax], al ; ret
0x0000000000065b6c : xor eax, 0x3583ef ; call rax
0x0000000000064274 : xor eax, 0x359ce7 ; call rax
0x000000000005edf8 : xor eax, 0x35f163 ; call rax
0x000000000005608e : xor eax, 0x367ecd ; call rax
0x000000000004f084 : xor eax, 0x36eed7 ; call rax
0x0000000000049f40 : xor eax, 0x37401b ; call rax
0x0000000000186f89 : xor eax, 0x3750fffc ; cld ; jmp rax
0x0000000000186f69 : xor eax, 0x3790fffc ; cld ; jmp qword ptr [rax]
0x000000000006ce98 : xor eax, 0x48b4800 ; ret 0x8548
0x00000000000e3df7 : xor eax, 0x48fffff6 ; add esp, 0x18 ; ret
0x00000000000eb710 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000010b625 : xor eax, 0x8545fff5 ; in al, -0x77 ; ret 0x87e
0x000000000010385e : xor eax, 0x8548fff8 ; ror byte ptr [rdi], 0x95 ; ret
0x000000000006f8cf : xor eax, 0x8994eb00 ; ret 0x8b48
0x00000000000cae1c : xor eax, 0x8bffffff ; mov byte ptr [r9 - 0x77], r8b ; ret 0xdb84
0x000000000006f920 : xor eax, 0xa6850f00 ; add al, 0 ; add bl, dh ; ret
0x000000000000245d : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007c58b : xor eax, 0xffffe480 ; call rax
0x000000000007c18b : xor eax, 0xffffe880 ; call rax
0x000000000007aedb : xor eax, 0xfffffb30 ; call rax
0x000000000006fc17 : xor eax, 0xfffffcd4 ; call rax
0x000000000007ac73 : xor eax, 0xfffffd98 ; call rax
0x0000000000021ee0 : xor eax, dword ptr [0x30] ; call rax
0x0000000000036be0 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000012f6b1 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000082744 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000085ea6 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000085bde : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x0000000000085d91 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008baec : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000085e44 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008abd8 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000082733 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008ab8f : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x3360d8], rax ; ret
0x00000000000868cd : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008ab96 : xor eax, dword ptr [rax] ; ret
0x0000000000083bd4 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x83be7 ; ret
0x0000000000080b7c : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000007dfee : xor eax, dword ptr [rax] ; xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007df9d : xor eax, dword ptr [rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000010400a : xor eax, dword ptr [rcx + rcx*4 - 0x40] ; sub eax, r9d ; ret
0x00000000000ae055 : xor eax, dword ptr [rcx - 0x77] ; ret 0x2941
0x00000000001a17f6 : xor eax, dword ptr [rdi + 0xd1cfff1] ; xchg eax, esi ; xchg cl, dh ; jmp qword ptr [rdx]
0x0000000000105b3d : xor eax, eax ; add r13, 0x30 ; call 0x101dd8
0x000000000007c70b : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125f60 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000842ce : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000b44f2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001138a2 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012991a : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000129a77 : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000001369b0 : xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001361bc : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000003c2ec : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083570 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002fee0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000105b6b : xor eax, eax ; call 0x101dd4
0x0000000000070fc7 : xor eax, eax ; call r12
0x000000000012db39 : xor eax, eax ; call r8
0x000000000012db83 : xor eax, eax ; call rcx
0x000000000012e8e0 : xor eax, eax ; call rdx
0x00000000000487f6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x48808 ; pop rbx ; ret
0x00000000000d1ea4 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1e39 ; pop rbx ; ret
0x00000000000fda23 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c6203 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000f4c4d : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf4c60 ; pop rbx ; ret
0x00000000000c0a4d : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000000fbcf4 : xor eax, eax ; cmp rdx, rcx ; cmovae rax, rsi ; ret
0x0000000000107b47 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000f1231 : xor eax, eax ; cmp rsi, rdx ; ja 0xf1248 ; ret
0x00000000000caa9b : xor eax, eax ; jmp 0xca2a2
0x00000000000de93e : xor eax, eax ; jmp 0xde907
0x0000000000121680 : xor eax, eax ; jmp rcx
0x00000000001111c0 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000117863 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000003cdc7 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000003cdd7 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000096ce8 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000010aca1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000105b08 : xor eax, eax ; mov rdi, r14 ; call 0x101dd7
0x0000000000124757 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003d45d : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000376ed : xor eax, eax ; nop ; ret
0x000000000007a452 : xor eax, eax ; pop r12 ; ret
0x00000000000aee04 : xor eax, eax ; pop r14 ; ret
0x00000000000d5006 : xor eax, eax ; pop r15 ; ret
0x000000000011f553 : xor eax, eax ; pop rbp ; jmp rcx
0x0000000000120d00 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000010ad11 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000246cd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c4ad : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073574 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035756 : xor eax, eax ; pop rbx ; ret
0x00000000000bcede : xor eax, eax ; pop rdx ; ret
0x0000000000037686 : xor eax, eax ; ret
0x0000000000097fbe : xor eax, eax ; sub eax, ecx ; ret
0x0000000000072fd0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072fe0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000d1ed0 : xor eax, eax ; test cl, 1 ; jne 0xd1e66 ; pop rbx ; ret
0x00000000000a1bb8 : xor eax, eax ; test dh, 0xf0 ; je 0xa1b8b ; movzx eax, dl ; pop rbx ; ret
0x000000000009759c : xor eax, eax ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000000fa081 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfa094
0x0000000000037a28 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000003d0bd : xor eax, edx ; ret
0x000000000003c927 : xor eax, edx ; sub eax, edx ; ret
0x000000000003c93b : xor eax, edx ; sub rax, rdx ; ret
0x000000000002f62c : xor ebp, ebp ; jmp 0x2f638
0x00000000000a55a4 : xor ebp, ebp ; mov edx, eax ; jmp 0xa5553
0x00000000000a7de4 : xor ebp, ebp ; mov edx, eax ; jmp 0xa7d93
0x00000000000aa494 : xor ebp, ebp ; mov edx, eax ; jmp 0xaa443
0x00000000001905a1 : xor ebp, edx ; call qword ptr [rdx]
0x000000000019053d : xor ebp, edx ; jmp qword ptr [rdx]
0x000000000006e639 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000165a39 : xor ebx, dword ptr [rdx + 0x1f0fffeb] ; add bl, dh ; ret
0x00000000000eda79 : xor ebx, dword ptr [rsi - 6] ; dec dword ptr [rax + 0x39] ; ret
0x000000000012eb4b : xor ebx, ebx ; call 0x12ade4
0x00000000000ddb10 : xor ebx, ebx ; xor r10d, r10d ; jmp 0xddb32
0x0000000000186779 : xor ebx, edi ; jmp rax
0x00000000000c268e : xor ebx, esi ; ret
0x00000000000c50af : xor ecx, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000039071 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ba20c : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000103c9b : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000bcfbe : xor ecx, ecx ; jmp 0xbcf88
0x000000000018d3a9 : xor ecx, edi ; call rsp
0x000000000011d00e : xor edi, dword ptr [0x30] ; call rax
0x00000000000f3d58 : xor edi, ecx ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018d3c1 : xor edi, ecx ; jmp rsp
0x0000000000080b7e : xor edi, edi ; call qword ptr [rax]
0x000000000007dff0 : xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007df9f : xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000018dbb9 : xor edi, edx ; jmp rsp
0x0000000000186f45 : xor edi, esp ; call rax
0x0000000000031daa : xor edx, dword ptr [0x30] ; call rdx
0x0000000000043231 : xor edx, dword ptr [rax + rax] ; jmp 0x431e9
0x0000000000001b0c : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000235b0 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000b4b31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000739a9 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddb13 : xor edx, edx ; jmp 0xddb2f
0x00000000000887d0 : xor edx, edx ; mov eax, edx ; ret
0x0000000000096d8d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007bb99 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000008ab73 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000070340 : xor edx, edx ; pop r12 ; jmp rax
0x000000000007396c : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000fa254 : xor edx, edx ; test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xfa238
0x00000000001a0b6e : xor esi, dword ptr [rcx + rsi*8 - 1] ; sbb al, 0xd ; std ; jae 0x1a0b71 ; jmp qword ptr [rdx]
0x000000000019544c : xor esi, dword ptr [rcx - 0x13] ; jmp qword ptr [rdx]
0x00000000000489c7 : xor esi, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005d5d6 : xor esi, dword ptr [rsi] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000829c1 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000dbc3e : xor esi, esi ; call 0x8c5c6
0x00000000000f5d22 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f5d47 : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f5d6b : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f5d8b : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f5cfd : xor esi, esi ; mov rdi, rbp ; call rbx
0x0000000000113205 : xor esi, esi ; shl rdi, 4 ; call 0x1f418
0x0000000000164f39 : xor esp, dword ptr [rbp + 0x1f0fffeb] ; add bl, dh ; ret
0x000000000017a480 : xor esp, dword ptr [rbp - 0x5b07000b] ; cmc ; jmp qword ptr [rax]
0x000000000017a334 : xor esp, dword ptr [rbp - 0x5bf7000b] ; cmc ; jmp qword ptr [rax]
0x0000000000186e9d : xor esp, edi ; jmp rax
0x00000000000c7741 : xor esp, esp ; jmp 0xc770b
0x000000000012eb47 : xor esp, esp ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12ade8
0x00000000000ddb12 : xor r10d, r10d ; jmp 0xddb30
0x00000000000c7740 : xor r12d, r12d ; jmp 0xc770c
0x000000000012eb46 : xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12ade9
0x0000000000113204 : xor r14d, r14d ; shl rdi, 4 ; call 0x1f419
0x0000000000070fc6 : xor r8d, r8d ; call r12
0x00000000001035c0 : xor r9b, bpl ; ret
0x00000000000d0d06 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000f05e1 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021edf : xor rax, qword ptr [0x30] ; call rax
0x0000000000036bdf : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021ede : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000036bde : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000088c85 : xor rax, rax ; ret
0x000000000003c93a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000011d00d : xor rdi, qword ptr [0x30] ; call rax
0x000000000011d00c : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000031da9 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000031da8 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000007033f : xor rdx, rdx ; pop r12 ; jmp rax

Unique gadgets found: 21560
