Gadgets information
============================================================
0x000015bb : adc al, 0x41 ; ret
0x00000d5a : adc cl, cl ; ret
0x00000fbd : add al, ch ; ret 0xfffb
0x00000c58 : add byte ptr [eax], al ; add byte ptr [eax], al ; add cl, cl ; ret
0x00000c59 : add byte ptr [eax], al ; add byte ptr [eax], al ; leave ; ret
0x00000b2e : add byte ptr [eax], al ; add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x00001499 : add byte ptr [eax], al ; add byte ptr [esp + esi*8 - 1], ah ; call dword ptr [eax]
0x00000fb6 : add byte ptr [eax], al ; add cl, ch ; cwde ; add dword ptr [eax], eax ; add al, ch ; ret 0xfffb
0x00000c5a : add byte ptr [eax], al ; add cl, cl ; ret
0x000008ec : add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x00000fb7 : add byte ptr [eax], al ; jmp 0x115e
0x00000c5b : add byte ptr [eax], al ; leave ; ret
0x00000b30 : add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0000149b : add byte ptr [esp + esi*8 - 1], ah ; call dword ptr [eax]
0x000015b8 : add cl, byte ptr [eax + 0xe] ; adc al, 0x41 ; ret
0x00000fb8 : add cl, ch ; cwde ; add dword ptr [eax], eax ; add al, ch ; ret 0xfffb
0x00000c5c : add cl, cl ; ret
0x00000fbb : add dword ptr [eax], eax ; add al, ch ; ret 0xfffb
0x00001583 : add dword ptr [eax], eax ; inc ecx ; ret
0x000015b4 : add eax, 0x2300e4e ; dec eax ; push cs ; adc al, 0x41 ; ret
0x00000d58 : add esp, 0x10 ; leave ; ret
0x00000c1c : add esp, 0x10 ; mov eax, dword ptr [ebp - 0xc] ; leave ; ret
0x00000a95 : add esp, 0x10 ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x000011b9 : add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000008ee : add esp, 8 ; pop ebx ; ret
0x00000179 : and edx, 0x701cbbac ; jge 0x1d1 ; ret 0xac6e
0x00000a1b : call 0xa48
0x000008d4 : call 0xa56
0x0000145f : call dword ptr [eax]
0x00000a93 : call eax
0x00000add : call ecx
0x00000b7e : call edx
0x00001158 : clc ; pop ecx ; pop ebx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x00000a9a : cld ; leave ; ret
0x0000115e : cld ; ret
0x00000fba : cwde ; add dword ptr [eax], eax ; add al, ch ; ret 0xfffb
0x000015b9 : dec eax ; push cs ; adc al, 0x41 ; ret
0x00000f57 : dec ecx ; ret
0x000015b5 : dec esi ; push cs ; xor byte ptr [edx], al ; dec eax ; push cs ; adc al, 0x41 ; ret
0x000011b8 : fild word ptr [ebx + 0x5e5b1cc4] ; pop edi ; pop ebp ; ret
0x00000c21 : hlt ; leave ; ret
0x00000a41 : hlt ; mov ebx, dword ptr [esp] ; ret
0x00000b79 : in al, -0x7d ; in al, dx ; or al, 0x50 ; call edx
0x00000b7b : in al, dx ; or al, 0x50 ; call edx
0x00000a90 : in al, dx ; or al, 0x52 ; call eax
0x00000ad9 : in al, dx ; or byte ptr [eax + 0x52], dl ; call ecx
0x00000a62 : in eax, 0x53 ; call 0xa58
0x00000b75 : inc dword ptr [ebp - 0x7c1b8b2e] ; in al, dx ; or al, 0x50 ; call edx
0x00000a8a : inc dword ptr [ebp - 0x7cf68b40] ; in al, dx ; or al, 0x52 ; call eax
0x00000c1b : inc dword ptr [ebx + 0x458b10c4] ; hlt ; leave ; ret
0x00000c20 : inc ebp ; hlt ; leave ; ret
0x00000c55 : inc ebp ; or bh, al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add cl, cl ; ret
0x00001585 : inc ecx ; ret
0x00000181 : inc esi ; ret 0xac6e
0x00000a8d : je 0xa9e ; sub esp, 0xc ; push edx ; call eax
0x00000ad6 : je 0xae9 ; sub esp, 8 ; push eax ; push edx ; call ecx
0x00000b78 : je 0xb64 ; sub esp, 0xc ; push eax ; call edx
0x00000180 : jge 0x1ca ; ret 0xac6e
0x0000017f : jge 0x1cb ; ret 0xac6e
0x00000fb9 : jmp 0x115c
0x000011b7 : jne 0x11a1 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0000017e : jo 0x1e9 ; jge 0x1cc ; ret 0xac6e
0x00001156 : lea esp, dword ptr [ebp - 8] ; pop ecx ; pop ebx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x0000115c : lea esp, dword ptr [ecx - 4] ; ret
0x00000ad5 : leave ; je 0xaea ; sub esp, 8 ; push eax ; push edx ; call ecx
0x00000a9b : leave ; ret
0x000011ba : les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x000008ef : les ecx, ptr [eax] ; pop ebx ; ret
0x00000d59 : les edx, ptr [eax] ; leave ; ret
0x00000c1d : les edx, ptr [eax] ; mov eax, dword ptr [ebp - 0xc] ; leave ; ret
0x00000a96 : les edx, ptr [eax] ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0000017b : lodsb al, byte ptr [esi] ; mov ebx, 0x7d65701c ; inc esi ; ret 0xac6e
0x0000017a : loop 0x130 ; mov ebx, 0x7d65701c ; inc esi ; ret 0xac6e
0x000008ea : mov byte ptr [0x83000000], al ; les ecx, ptr [eax] ; pop ebx ; ret
0x00000c57 : mov dword ptr [eax], 0 ; leave ; ret
0x00000c1f : mov eax, dword ptr [ebp - 0xc] ; leave ; ret
0x00000a61 : mov ebp, esp ; push ebx ; call 0xa59
0x0000017c : mov ebx, 0x7d65701c ; inc esi ; ret 0xac6e
0x00000a98 : mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x00000a42 : mov ebx, dword ptr [esp] ; ret
0x00000a4f : nop ; mov ebx, dword ptr [esp] ; ret
0x00000a4d : nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x00000a4b : nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x000011c8 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret
0x000011c9 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret
0x000011ca : nop ; nop ; nop ; nop ; nop ; nop ; ret
0x000011cb : nop ; nop ; nop ; nop ; nop ; ret
0x000011cc : nop ; nop ; nop ; nop ; ret
0x000011cd : nop ; nop ; nop ; ret
0x000011ce : nop ; nop ; ret
0x000011cf : nop ; ret
0x00000b7c : or al, 0x50 ; call edx
0x00000a91 : or al, 0x52 ; call eax
0x00000ad7 : or al, byte ptr [ebx + 0x525008ec] ; call ecx
0x00000c56 : or bh, al ; add byte ptr [eax], al ; add byte ptr [eax], al ; add cl, cl ; ret
0x00000ada : or byte ptr [eax + 0x52], dl ; call ecx
0x00000a99 : pop ebp ; cld ; leave ; ret
0x0000115b : pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x000011bf : pop ebp ; ret
0x0000115a : pop ebx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x000011bc : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000008f1 : pop ebx ; ret
0x00001159 : pop ecx ; pop ebx ; pop ebp ; lea esp, dword ptr [ecx - 4] ; ret
0x000011be : pop edi ; pop ebp ; ret
0x000011bd : pop esi ; pop edi ; pop ebp ; ret
0x0000115d : popal ; cld ; ret
0x000015ba : push cs ; adc al, 0x41 ; ret
0x000015b6 : push cs ; xor byte ptr [edx], al ; dec eax ; push cs ; adc al, 0x41 ; ret
0x00000b7d : push eax ; call edx
0x00000adb : push eax ; push edx ; call ecx
0x00000a18 : push eax ; push esp ; push edx ; call 0xa4b
0x00000a63 : push ebx ; call 0xa57
0x00000a1a : push edx ; call 0xa49
0x00000a92 : push edx ; call eax
0x00000adc : push edx ; call ecx
0x00001164 : push esi ; push ebx ; call 0xa58
0x00000b2d : push esp ; add byte ptr [eax], al ; add byte ptr [ecx], al ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x00000a40 : push esp ; mov ebx, dword ptr [esp] ; ret
0x00000a19 : push esp ; push edx ; call 0xa4a
0x000008da : ret
0x00000cb7 : ret 0x458b
0x00000182 : ret 0xac6e
0x00000fbf : ret 0xfffb
0x00000a94 : rol byte ptr [ebx + 0x5d8b10c4], 1 ; cld ; leave ; ret
0x00000ade : rol dword ptr [ebx + 0x5d8b10c4], 1 ; cld ; leave ; ret
0x00001581 : ror dword ptr [ecx + eax], 0 ; inc ecx ; ret
0x00000a8c : sal byte ptr [ecx + ecx - 0x7d], 0xec ; or al, 0x52 ; call eax
0x00000b77 : sal byte ptr [esp - 0x7d], cl ; in al, dx ; or al, 0x50 ; call edx
0x00000a43 : sbb al, 0x24 ; ret
0x000011bb : sbb al, 0x5b ; pop esi ; pop edi ; pop ebp ; ret
0x0000017d : sbb al, 0x70 ; jge 0x1cd ; ret 0xac6e
0x00000b7a : sub esp, 0xc ; push eax ; call edx
0x00000a8f : sub esp, 0xc ; push edx ; call eax
0x000008d1 : sub esp, 8 ; call 0xa59
0x00000ad8 : sub esp, 8 ; push eax ; push edx ; call ecx
0x00000a8b : test eax, eax ; je 0xaa0 ; sub esp, 0xc ; push edx ; call eax
0x00000ad4 : test ecx, ecx ; je 0xaeb ; sub esp, 8 ; push eax ; push edx ; call ecx
0x00000b76 : test edx, edx ; je 0xb66 ; sub esp, 0xc ; push eax ; call edx
0x000015b7 : xor byte ptr [edx], al ; dec eax ; push cs ; adc al, 0x41 ; ret

Unique gadgets found: 139
